{"version":3,"sources":["app/module/users/users.actions.js","app/shared/app.properties.js","app/module/users/users.container.js","app/module/groups/groups.actions.js","app/module/groups/groups.container.js","app/module/privileges/privileges.actions.js","app/module/privileges/privileges.container.js","app/module/privileges/manage.privileges/addgroup.dialog.privileges.js","app/module/privileges/manage.privileges/adduser.dialog.privileges.js","app/module/users/create.users/create.users.container.js","app/model/user.model.js","app/module/users/update.users/update.users.container.js","app/module/users/details.users/details.users.container.js","app/module/users/delete.users/delete.users.container.js","Logo/tagama-png.png","app/shared/NavbarMain.js","app/shared/NavbarRight.js","app/shared/SidebarMenu.js","app/shared/SnackbarContentWrapper.js","app/module/profile/profile.actions.js","app/shared/Main.Reducer.js","app/model/group.model.js","app/module/groups/create.groups/create.groups.container.js","app/module/groups/delete.groups/delete.groups.container.js","app/module/groups/update.groups/update.groups.container.js","app/module/groups/details.groups/details.groups.container.js","app/module/groups/manage.groups/adduser.dialog.groups.js","app/module/users/users.repo.js","app/module/profile/profile.container.js","app/module/Folders/folder.repo.js","app/module/Folders/folders.container.js","app/module/Folders/addPathfolder.container.js","app/module/dashboard/dashboard.actions.js","app/module/dashboard/dashboard.container.js","app/module/audit/audit.repo.js","app/module/audit/audit.container.js","app/module/error/unauthorized.container.js","app/module/users/update.users/resetPassword.users.container.js","app/module/settings/settings.repo.js","app/module/settings/system_settings.container.js","app/scans/scans.container.js","app/module/reports/reports.repo.js","app/module/reports/reports.container.js","app/module/reports/reportsIndividual.container.js","app/module/reports/monthlyreport.container.js","app/scans/scansMissingFiles.container.js","Logo/healthy-diet.jpg","Logo/weight-loss.png","Logo/weight-gain.png","Logo/sports.png","Logo/healthy.jpg","Logo/cloud1.png","app/shared/Navbar.js","Logo/background2.png","Logo/background3.png","Logo/lastBackground.png","Logo/card1.png","Logo/card2.png","Logo/card3.png","app/module/pages/home.container.js","Logo/about_us_pic.jpg","Logo/left.png","Logo/back.png","app/module/pages/aboutUs.container.js","Logo/slika1edit.jpg","app/module/pages/contact.container.js","app/module/pages/SimpleDialog.js","app/shared/MainLayout.js","app/module/users/users.saga.js","app/module/groups/groups.repo.js","app/module/groups/groups.saga.js","app/module/profile/profile.repo.js","app/auth/login/login.container.js","app/module/profile/profile.saga.js","app/module/privileges/privileges.repo.js","app/module/privileges/privileges.saga.js","app/module/dashboard/dashboard.repo.js","app/module/dashboard/dashboard.saga.js","Logo/faq_back.png","app/module/pages/faq.container.js","index.js","app/module/users/users.reducer.js","app/module/groups/groups.reducer.js","app/module/profile/profile.reducer.js","app/module/privileges/privileges.reducer.js","app/module/dashboard/dashboard.reducer.js"],"names":["GET_ALL_USERS_REQUEST","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","fetchAllUsers","page","size","filter","type","payload","GET_USER_REQUEST","GET_USER_SUCCESS","fetchUser","id","CLEAR_USER_REQUEST","clearUser","CREATE_USER_REQUEST","CREATE_USER_SUCCESS","CREATE_USER_FAIL","createUser","user","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","RESET_PASSWORD_USER_REQUEST","RESET_PASSWORD_USER_SUCCESS","RESET_PASSWORD_USER_FAIL","RESET_REDIRECT","resetRedirect","SERVER_API_URL","getServerApiURL","getCurrentAccessToken","idm","JSON","parse","localStorage","getItem","access_token","dispatchAction","undefined","hasAnyRole","roles","role","split","currentRoles","authorities","hasRole","i","length","j","authority","handleLogout","removeItem","window","location","refreshToken","username","refresh_token","axios","url","method","headers","then","res","expires_at_date","Date","getTime","data","expires_in","expires_at","setItem","stringify","catch","err","Users","state","filterValue","allusersdata","unauthorized","handleChangePage","event","props","handleChangeRowsPerPage","target","value","handleFilterChange","setState","this","refreshTime","setSeconds","getSeconds","className","to","Paper","style","margin","Table","TableHead","TableRow","TableCell","Link","Button","variant","color","aria-label","TextField","label","onChange","content","TablePagination","rowsPerPageOptions","colSpan","count","totalElements","rowsPerPage","number","onChangePage","onChangeRowsPerPage","width","TableBody","map","key","name","surname","email","xmlns","height","viewBox","fill","d","TableFooter","React","Component","connect","usersReducer","GET_ALL_GROUPS_REQUEST","GET_ALL_GROUPS_SUCCESS","GET_ALL_USERS_BY_GROUP_REQUEST","GET_ALL_USERS_BY_GROUP_SUCCESS","fetchAllUsersByGroup","group","CREATE_GROUP_REQUEST","CREATE_GROUP_SUCCESS","CREATE_GROUP_FAIL","createGroup","GET_GROUP_REQUEST","GET_GROUP_SUCCESS","fetchGroup","CLEAR_GROUP_REQUEST","clearGroup","UPDATE_GROUP_REQUEST","UPDATE_GROUP_SUCCESS","UPDATE_GROUP_FAIL","DELETE_GROUP_REQUEST","DELETE_GROUP_SUCCESS","DELETE_GROUP_FAIL","ADD_USER_TO_GROUP_REQUEST","ADD_USER_TO_GROUP_SUCCESS","REMOVE_USER_FROM_GROUP_REQUEST","REMOVE_USER_FROM_GROUP_SUCCESS","REMOVE_USER_FROM_GROUP_FAIL","Groups","groups","totalItem","start","some","activePage","loading","selectedGroup","handleChangePageGroups","fetchAllGroups","allgroupsdata","handleSelectGroup","removeUserFromGroup","Grid","container","spacing","md","match","params","LinearProgress","List","ListItem","button","selected","onClick","ListItemText","primary","handleChangeRowsPerPageGroups","padding","groupsReducer","GET_ALL_PRIVILEGES_REQUEST","GET_ALL_PRIVILEGES_SUCCESS","GET_ALL_PRIVILEGES_FAIL","GET_ALL_USERS_BY_PRIVILEGE_REQUEST","GET_ALL_USERS_BY_PRIVILEGE_SUCCESS","GET_ALL_USERS_BY_PRIVILEGE_FAIL","GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST","GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS","GET_ALL_GROUPS_BY_PRIVILEGE_FAIL","ADD_USER_PRIVILEGE_REQUEST","ADD_USER_PRIVILEGE_SUCCESS","ADD_USER_PRIVILEGE_FAIL","addUserPrivilege","privilege","REMOVE_USER_PRIVILEGE_REQUEST","REMOVE_USER_PRIVILEGE_SUCCESS","REMOVE_USER_PRIVILEGE_FAIL","ADD_GROUP_PRIVILEGE_REQUEST","ADD_GROUP_PRIVILEGE_SUCCESS","ADD_GROUP_PRIVILEGE_FAIL","addGroupPrivilege","REMOVE_GROUP_PRIVILEGE_REQUEST","REMOVE_GROUP_PRIVILEGE_SUCCESS","REMOVE_GROUP_PRIVILEGE_FAIL","GET_USERS_FILTERED_BY_NAME_REQUEST","GET_USERS_FILTERED_BY_NAME_SUCCESS","GET_GROUPS_FILTERED_BY_NAME_REQUEST","GET_GROUPS_FILTERED_BY_NAME_SUCCESS","TabContainer","Typography","component","children","Privileges","selectedPrivilege","addUserDialogOpen","handleSelectPrivilege","fetchAllGroupsByPrivilege","handleTabChange","removeGroup","removeGroupPrivilege","removePrivilegeFromUser","removeUserPrivilege","handleAddUserDialog","status","fetchAllPrivileges","allprivileges","index","Tabs","indicatorColor","textColor","Tab","icon","privilegesReducer","allprivilegesdata","fetchAllUsersByPrivilege","AddPrivilegeToUserContainer","getGroupsFilteredByName","filteredGroups","arr","Dialog","open","fullWidth","maxWidth","aria-labelledby","DialogTitle","groupInArray","DialogActions","getUsersFilteredByName","filteredUsers","firstName","lastName","userInArray","total","Math","round","CreateUserContainer","singleuser","redirectBack","handleUserFormChange","handleClose","handleSubmit","noValidate","autoComplete","password","required","User","obj","Object","assign","UpdateUserContainer","calcDisplayName","fn","ln","displayName","updateUser","InputProps","disabled","DetailsUserContainer","DeleteUserContainer","deleteUser","NavbarMain","useState","anchorEl","Boolean","createMuiTheme","typography","fontFamily","join","IconButton","Badge","badgeContent","href","NavbarRight","userMenuIsOpen","taskNotifications","handleUserMenuOpen","currentTarget","handleUserMenuClose","handleTaskNotificationsOpen","handleTaskNotificationsClose","theme","position","right","ThemeProvider","console","log","display","flexDirection","textAlign","noWrap","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","backgroundColor","green","palette","dark","amber","fontSize","iconVariant","opacity","marginRight","unit","message","alignItems","classes","onClose","other","Icon","SnackbarContent","classNames","aria-describedby","action","close","GET_MAIN_USER_REQUEST","GET_MAIN_USER_SUCCESS","CLEAR_NOTIFICATIONS","Group","CreateGroupsContainer","singlegroup","handleGroupFormChange","DeleteGroupsContainer","deleteGroup","UpdateGroupContainer","updateGroup","DetailsGroupsContainer","AddUserToGroupContainer","usersInGroup","addUserToGroup","MODULE_USERS_API_CONTEXT","fetch","response","json","resetPasswordUser","fetchUsersFilteredByUsername","ProfileContainer","newPassword","confirmPassword","preventDefault","u","replace","fetchMainUserData","marginLeft","xs","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","onSubmit","helperText","profileReducer","getBooksAndFolders","year","get","listAllFolders","root","borderBottomColor","borderColor","FoldersContainer","listBooksAndFolders","handleFileSelect","e","fileSelector","click","handleFormInput","formdata","registerType","registerYear","registerName","rowsPerPages","deletePathFolders","delete","deletePathFolder","document","createElement","setAttribute","buildFileSelector","marginTop","inputProps","bind","item","handleStatus","pathFolder","textDecoration","backIconButtonProps","nextIconButtonProps","AddPathFolderContainer","getAllFoders","folders","loadRegisterBook","getRegisterBookById","linearProgressShown","handleUpdate","registerBook","put","snackbarMessage","snackbarType","setRedirect","String","array","search","individual","autoFocus","Select","displayEmpty","MenuItem","GET_APP_HEALTH_REQUEST","GET_APP_HEALTH_SUCCESS","Dashboard","Requests","getAppHealth","reportHealth","GB","prepareDataHealth","strokeDasharray","dataKey","dashboardReducer","queryAuditLog","auditType","AuditContainer","newQueryPage","setData","handleChangeSelectField","val","FormControl","InputLabel","shrink","htmlFor","input","Input","wordWrap","format","Chip","UnauthorizedContainer","zoom","align","gutterBottom","ResetPasswordUserContainer","fetchAllSystemSettingsProps","updateSystemSettingsProp","SystemSettingsContainer","settingsMap","fetchAllSettingsProps","asd","tmpmap","handleExportEncryptionChange","MAIN_SEARCH_ZIP_ENCRYPT_ENABLED","encBool","handleSmsNotificationsEnabledChange","SMS_NOTIFICATIONS_ENABLED","handleEmailNotificationsEnabledChange","EMAIL_NOTIFICATIONS_ENABLED","handleFormChange","FormControlLabel","control","Switch","checked","SMPP_HOST","SMPP_PORT","SMPP_USERNAME","SMPP_PASSWORD","SMPP_MSISDN","SMTP_HOST","SMTP_PORT","SMTP_USERNAME","SMTP_PASSWORD","SMTP_SENDER_ADDRESS","ScansContainer","listBooksAndRecords","dateFrom","toISOString","dateTo","handleChangeDateField","formatDate","dateString","newDateStringArr","getBooksAndRecords","utils","DateFnsUtils","keyboard","mask","numberOfRecords","ReportsContainer","getAllScans","show","showTotal","changeVisibility","showMyComponent","clickedDate","n","dateMoving","fabs","push","Fab","getDate","getMonth","setUTCDate","getUTCDate","marginBottom","download","changeShowTotal","formatDatesButtons","ReportsIndividualContainer","dateYear","dateMonth","date","getByDate","CircularProgress","nameRegisterBook","MonthlyReportContainer","listMonthlyReport","month","getByDateReport","getFullYear","selectedMonth","selectedYear","minYear","maxYear","onChangeYear","onChangeMonth","paddingLeft","paddingTop","ScansMissingFilesContainer","searchForMissingFiles","totalFiles","encodeURI","getMissingfiles","responseMissing","float","Divider","Navbar","CssBaseline","AppBar","Toolbar","src","logo","HomeContainer","StyledButton","background","borderRadius","border","fontWeight","textTransform","letterSpacing","lineHeight","boxShadow","backgroundImage","backgroundFirst","backgroundSize","backgroundSecond","elevation","cardOne","Box","m","cardTwo","cardThree","last","aboutUsContainer","justify","left","aboutUs","back","contactContainer","sendEmail","templateParams","place","emailjs","send","text","backgroundPic","backgroundRepeat","country","phone","multiline","rows","Transition","forwardRef","ref","Slide","direction","SimpleDialog","TransitionComponent","keepMounted","DialogContent","DialogContentText","MainLayout","clearNotifications","Route","path","dashboardContainer","createGroupsContainer","AddPrivilegeToGroupContainer","mainReducer","usersSagas","getAllUsersData","takeEvery","call","select","MODULE_GROUPS_API_CONTEXT","fetchGroupsFilteredByName","groupsSagas","profileSagas","MODULE_PRIVILEGES_API_CONTEXT","addPrivilegeToUser","addPrivilegeToGroup","removePrivilegeFromGroup","privilegesSagas","dashboardSagas","faqContainer","appReducer","combineReducers","currentState","removed","store","dispatch","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","interceptors","request","use","config","includes","Promise","reject","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0c7cbb82.chunk.js","sourcesContent":["export const GET_ALL_USERS_REQUEST = \"GET_ALL_USERS_REQUEST\";\r\nexport const GET_ALL_USERS_SUCCESS = \"GET_ALL_USERS_SUCCESS\";\r\nexport const GET_ALL_USERS_FAIL = \"GET_ALL_USERS_FAIL\";\r\n\r\nexport function fetchAllUsers(page, size, filter){\r\n    return {\r\n        type: GET_ALL_USERS_REQUEST,\r\n        payload: {\r\n            page:   page, \r\n            size:   size,\r\n            filter: filter\r\n        } \r\n    };\r\n}\r\n\r\n\r\nexport const GET_USER_REQUEST = \"GET_USER_REQUEST\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_FAIL = \"GET_USER_FAIL\";\r\n\r\nexport function fetchUser(id){\r\n    return {\r\n        type: GET_USER_REQUEST,\r\n        payload: {\r\n            id: id, \r\n        } \r\n    };\r\n}\r\n\r\n\r\nexport const CLEAR_USER_REQUEST = \"CLEAR_USER_REQUEST\";\r\n\r\nexport function clearUser(){\r\n    return {\r\n        type: CLEAR_USER_REQUEST,\r\n        payload: {}\r\n    };\r\n}\r\n\r\nexport const INIT_USER_REQUEST = \"INIT_USER_REQUEST\";\r\n\r\nexport function initUser(){\r\n    return {\r\n        type: INIT_USER_REQUEST,\r\n        payload: {}\r\n    };\r\n}\r\n\r\n\r\nexport const CREATE_USER_REQUEST = \"CREATE_USER_REQUEST\";\r\nexport const CREATE_USER_SUCCESS = \"CREATE_USER_SUCCESS\";\r\nexport const CREATE_USER_FAIL = \"CREATE_USER_FAIL\";\r\n\r\nexport function createUser(user){\r\n    return {\r\n        type: CREATE_USER_REQUEST,\r\n        payload: {user: user}\r\n    };\r\n}\r\n\r\n\r\nexport const DELETE_USER_REQUEST = \"DELETE_USER_REQUEST\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const DELETE_USER_FAIL = \"DELETE_USER_FAIL\";\r\n\r\nexport function deleteUser(user){\r\n    return {\r\n        type: DELETE_USER_REQUEST,\r\n        payload: {user: user}\r\n    };\r\n}\r\n\r\n\r\nexport const UPDATE_USER_REQUEST = \"UPDATE_USER_REQUEST\";\r\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\r\nexport const UPDATE_USER_FAIL = \"UPDATE_USER_FAIL\";\r\n\r\nexport function updateUser(user){\r\n    return {\r\n        type: UPDATE_USER_REQUEST,\r\n        payload: {user: user}\r\n    };\r\n}\r\n\r\nexport const RESET_PASSWORD_USER_REQUEST = \"RESET_PASSWORD_USER_REQUEST\";\r\nexport const RESET_PASSWORD_USER_SUCCESS = \"RESET_PASSWORD_USER_SUCCESS\";\r\nexport const RESET_PASSWORD_USER_FAIL = \"RESET_PASSWORD_USER_FAIL\";\r\n\r\nexport function resetPasswordUser(user){\r\n    return {\r\n        type: RESET_PASSWORD_USER_REQUEST,\r\n        payload: {user: user}\r\n    };\r\n}\r\n\r\nexport const RESET_REDIRECT = \"RESET_REDIRECT\";\r\nexport function resetRedirect(){\r\n    return { \r\n        type: RESET_REDIRECT,\r\n        payload: null\r\n    }\r\n}","import {dispatchAction} from './../../index';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const SERVER_API_URL = \"http://localhost:8080\";        //local npm\r\n//export const SERVER_API_URL =\"http://10.20.200.200:8855\"   // put server IP here                  \r\n\r\n\r\nexport function getServerApiURL() {\r\n    return SERVER_API_URL;\r\n}\r\n\r\nexport function getCurrentAccessToken(){\r\n    var idm = JSON.parse(localStorage.getItem('idm'));\r\n    if (idm != null) {\r\n        return idm.access_token;\r\n    }\r\n    dispatchAction({type: \"USER_LOGOUT\", payload: undefined});\r\n    return null;\r\n}\r\n\r\nexport function getAuthorizationHeader(){\r\n    return \"Basic bXktdHJ1c3RlZC1jbGllbnQ6c2VjcmV0\";\r\n}\r\n\r\n\r\nexport function hasAnyRole(roles) {\r\n    var role = roles.split(\",\")\r\n    var currentRoles = localStorage.getItem('me') && JSON.parse(localStorage.getItem('me')).authorities;\r\n\r\n    var hasRole = false;\r\n    if (currentRoles != null) {\r\n        for (var i = 0; i < role.length; i++) {\r\n\r\n            for (var j = 0; j < currentRoles.length; j++) {\r\n                if (role[i] == currentRoles[j].authority) {\r\n                    hasRole = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return hasRole;\r\n}\r\n\r\nexport function hasRole(roles) {\r\n    var role = roles.split(\",\")\r\n    var currentRoles = localStorage.getItem('me') && JSON.parse(localStorage.getItem('me')).authorities;\r\n\r\n    var hasRole = false;\r\n    if (currentRoles != null) {\r\n        for (var i = 0; i < role.length; i++) {\r\n\r\n            for (var j = 0; j < currentRoles.length; j++) {\r\n                if (role[i] == currentRoles[j].authority) {\r\n                    hasRole = true;\r\n                }\r\n            }\r\n\r\n            if (hasRole == false) {\r\n                return false;\r\n            }\r\n            if (i != role.length - 1) {\r\n                hasRole = false;\r\n            }\r\n        }\r\n    }\r\n    return hasRole;\r\n}\r\n\r\nexport function handleLogout() {\r\n    dispatchAction({type: \"USER_LOGOUT\", payload: undefined});\r\n    localStorage.removeItem('idm');\r\n    localStorage.removeItem('me');\r\n    window.location = '/login';\r\n    return true;\r\n}\r\n\r\nexport function refreshToken() {\r\n    let access_token;\r\n    let username;\r\n    if (localStorage.getItem('idm')) {\r\n        access_token = JSON.parse(localStorage.getItem('idm')).refresh_token;\r\n        username = JSON.parse(localStorage.getItem('idm')).username;\r\n\r\n    } else {\r\n        handleLogout();\r\n    }\r\n    axios({\r\n        url: SERVER_API_URL + '/oauth/token?refresh_token='\r\n            + JSON.parse(localStorage.getItem('idm')).refresh_token\r\n            + '&grant_type=refresh_token',\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': getAuthorizationHeader()\r\n        }\r\n    }).then(res => {\r\n        var expires_at_date = new Date();\r\n        // expires_at_date.setSeconds(expires_at_date.getSeconds() + res.data.expires_in);\r\n        expires_at_date = new Date(expires_at_date.getTime() + res.data.expires_in * 1000);\r\n        res.data.expires_at = expires_at_date;\r\n        res.data.username = username;\r\n        localStorage.setItem('idm', JSON.stringify(res.data));\r\n        return true;\r\n    }).catch(err => {\r\n        handleLogout();\r\n    })\r\n}\r\n","import React from 'react';\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { connect } from 'react-redux'\r\nimport { action } from '../../../index';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    Button,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableFooter,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport { fetchAllUsers } from './users.actions';\r\nimport Redirect from 'react-router/Redirect';\r\nimport { handleLogout, hasRole, refreshToken } from '../../shared/app.properties';\r\nimport Security from '@material-ui/icons/Security';\r\n\r\n\r\nclass Users extends React.Component {\r\n\r\n    state = {\r\n        filterValue: undefined,\r\n        allusersdata: undefined,\r\n    }\r\n\r\n    unauthorized = false;\r\n\r\n    componentWillMount() {\r\n        this.unauthorized = !hasRole('ROLE_ADMINISTRATION');\r\n\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n            refreshToken()\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchAllUsers(0, 8, \"\");\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.props.fetchAllUsers(page, 8, this.state.filterValue)\r\n    };\r\n\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.props.fetchAllUsers(this.props.allusersdata.page, event.target.value, this.state.filterValue);\r\n    }\r\n\r\n    handleFilterChange = event => {\r\n        this.setState({\r\n            filterValue: event.target.value\r\n        })\r\n        this.props.fetchAllUsers(0, 8, event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"users\">\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                    <Redirect to=\"/app/error/unauthorized\" />\r\n                }\r\n                <Paper style={{ margin: 30 + \"px\" }}>\r\n\r\n                    <Table className='table'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Link to={'/app/users/create'}>\r\n                                        <Button variant=\"extendedFab\" color=\"primary\" aria-label=\"Add\" className=\"top-circle-create-btn \">\r\n                                            Add new <AddIcon />\r\n                                        </Button>\r\n                                    </Link>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <TextField\r\n                                        id=\"standard-name\"\r\n                                        label=\"Filter\"\r\n                                        value={this.filterValue}\r\n                                        margin=\"normal\"\r\n                                        onChange={this.handleFilterChange}\r\n                                    />\r\n                                </TableCell>\r\n                                {this.props.allusersdata && this.props.allusersdata.content &&\r\n                                    <TablePagination\r\n                                        rowsPerPageOptions={8}\r\n                                        colSpan={5}\r\n                                        count={this.props.allusersdata.totalElements}\r\n                                        rowsPerPage={this.props.allusersdata.size}\r\n                                        page={this.props.allusersdata.number}\r\n                                        onChangePage={this.handleChangePage}\r\n                                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                    />\r\n                                }\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell>Username</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>E-mail</TableCell>\r\n                                <TableCell style={{ width: 300 + \"px\" }}><p className=\"text-center\">Actions</p></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        {this.props.allusersdata && this.props.allusersdata.content &&\r\n                            <TableBody>\r\n                                {this.props.allusersdata.content && this.props.allusersdata.content.map(user =>\r\n                                    <TableRow key={user.id}>\r\n                                        <TableCell>{user.username}</TableCell>\r\n                                        <TableCell>{user.name + \" \" + user.surname}</TableCell>\r\n                                        <TableCell>{user.email}</TableCell>\r\n                                        <TableCell width={400}>\r\n\r\n                                            <Link to={'/app/users/delete/' + user.id}>\r\n                                                <Button variant=\"contained\" color=\"secondary\" aria-label=\"Delete\" className='btns pull-right' >\r\n                                                    <DeleteIcon />\r\n                                                </Button>\r\n                                            </Link>\r\n                                            <Link to={'/app/users/reset_password/' + user.id}>\r\n                                                <Button variant=\"contained\" color=\"primary\" aria-label=\"Edit\" className='btns  pull-right' >\r\n                                                    <Security />\r\n                                                </Button>\r\n                                            </Link>\r\n                                            <Link to={'/app/users/update/' + user.id}>\r\n                                                <Button variant=\"contained\" color=\"primary\" aria-label=\"Edit\" className='btns danger pull-right' >\r\n                                                    <Icon><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path style={{ fill: \"white\" }} d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg></Icon>\r\n                                                </Button>\r\n                                            </Link>\r\n                                            <Link to={'/app/users/details/' + user.id}>\r\n                                                <Button variant=\"contained\" color=\"default\" aria-label=\"Details\" className='btns success pull-right' >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path style={{ fill: \"white\" }} d=\"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z\" /></svg>\r\n                                                </Button>\r\n                                            </Link>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                        }\r\n                        <TableFooter>\r\n                            <TableRow>\r\n                            </TableRow>\r\n                        </TableFooter>\r\n                    </Table>\r\n\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allusersdata: state.usersReducer.allusersdata\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchAllUsers\r\n}))(Users);\r\n\r\n","export const GET_ALL_GROUPS_REQUEST = \"GET_ALL_GROUPS_REQUEST\";\r\nexport const GET_ALL_GROUPS_SUCCESS = \"GET_ALL_GROUPS_SUCCESS\";\r\nexport const GET_ALL_GROUPS_FAIL = \"GET_ALL_GROUPS_FAIL\";\r\n\r\nexport function fetchAllGroups(page, size){\r\n\r\n    return {\r\n        type: GET_ALL_GROUPS_REQUEST,\r\n        payload: {\r\n            page: page, \r\n            size: size\r\n        } \r\n    };\r\n}\r\n\r\nexport const GET_ALL_USERS_BY_GROUP_REQUEST = \"GET_ALL_USERS_BY_GROUP_REQUEST\";\r\nexport const GET_ALL_USERS_BY_GROUP_SUCCESS = \"GET_ALL_USERS_BY_GROUP_SUCCESS\";\r\nexport const GET_ALL_USERS_BY_GROUP_FAIL = \"GET_ALL_USERS_BY_GROUP_FAIL\";\r\n\r\nexport function fetchAllUsersByGroup(group){\r\n\r\n    return {\r\n        type:GET_ALL_USERS_BY_GROUP_REQUEST,\r\n        payload: group,\r\n    }\r\n}\r\n\r\nexport const CREATE_GROUP_REQUEST = \"CREATE_GROUP_REQUEST\";\r\nexport const CREATE_GROUP_SUCCESS = \"CREATE_GROUP_SUCCESS\";\r\nexport const CREATE_GROUP_FAIL = \"CREATE_GROUP_FAIL\";\r\n\r\nexport function createGroup(group){\r\n\r\n\r\n    return {\r\n        type: CREATE_GROUP_REQUEST,\r\n        payload: {group: group}\r\n    };\r\n}\r\n\r\nexport const GET_GROUP_REQUEST = \"GET_GROUP_REQUEST\";\r\nexport const GET_GROUP_SUCCESS = \"GET_GROUP_SUCCESS\";\r\nexport const GET_GROUP_FAIL = \"GET_GROUP_FAIL\";\r\n\r\nexport function fetchGroup(id){\r\n\r\n    return {\r\n        type: GET_GROUP_REQUEST,\r\n        payload: {\r\n            id: id, \r\n        } \r\n    };\r\n}\r\nexport const CLEAR_GROUP_REQUEST = \"CLEAR_GROUP_REQUEST\";\r\n\r\nexport function clearGroup(){\r\n    return {\r\n        type: CLEAR_GROUP_REQUEST,\r\n        payload: {}\r\n    };\r\n}\r\nexport const UPDATE_GROUP_REQUEST = \"UPDATE_GROUP_REQUEST\";\r\nexport const UPDATE_GROUP_SUCCESS = \"UPDATE_GROUP_SUCCESS\";\r\nexport const UPDATE_GROUP_FAIL = \"UPDATE_GROUP_FAIL\";\r\n\r\nexport function updateGroup(group){\r\n\r\n    return {\r\n        type: UPDATE_GROUP_REQUEST,\r\n        payload: {group: group}\r\n    };\r\n}\r\nexport const DELETE_GROUP_REQUEST = \"DELETE_GROUP_REQUEST\";\r\nexport const DELETE_GROUP_SUCCESS = \"DELETE_GROUP_SUCCESS\";\r\nexport const DELETE_GROUP_FAIL = \"DELETE_GROUP_FAIL\";\r\n\r\nexport function deleteGroup(group){\r\n    return {\r\n        type: DELETE_GROUP_REQUEST,\r\n        payload: {group: group}\r\n    };\r\n}\r\n\r\nexport const ADD_USER_TO_GROUP_REQUEST = \"ADD_USER_TO_GROUP_REQUEST\";\r\nexport const ADD_USER_TO_GROUP_SUCCESS = \"ADD_USER_TO_GROUP_SUCCESS\";\r\nexport const ADD_USER_TO_GROUP_FAIL = \"ADD_USER_TO_GROUP_FAIL\";\r\n\r\nexport function addUserToGroup(user, group){\r\n    return {\r\n        type: ADD_USER_TO_GROUP_REQUEST,\r\n        payload: {user: user, group: group}\r\n    };\r\n}\r\n\r\nexport const REMOVE_USER_FROM_GROUP_REQUEST = \"REMOVE_USER_FROM_GROUP_REQUEST\";\r\nexport const REMOVE_USER_FROM_GROUP_SUCCESS = \"REMOVE_USER_FROM_GROUP_SUCCESS\";\r\nexport const REMOVE_USER_FROM_GROUP_FAIL = \"REMOVE_USER_FROM_GROUP_FAIL\";\r\n\r\nexport function removeUserFromGroup(user,group){\r\n    return{\r\n        type: REMOVE_USER_FROM_GROUP_REQUEST,\r\n        payload: {user:user, group:group}\r\n    }\r\n}\r\n\r\nexport const RESET_REDIRECT = \"RESET_REDIRECT\";\r\n\r\nexport function resetRedirect(){\r\n    return { \r\n        type: RESET_REDIRECT,\r\n        payload: null\r\n    }\r\n}","import React from 'react';\r\nimport { action } from '../../../index';\r\nimport { Link } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAllGroups, fetchAllUsersByGroup, removeUserFromGroup } from '../groups/groups.actions';\r\nimport { fetchAllUsers } from '../users/users.actions'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Redirect from 'react-router/Redirect';\r\nimport {\r\n    Button,\r\n    LinearProgress,\r\n    ListItem,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport { handleLogout, hasRole, refreshToken } from '../../shared/app.properties';\r\n\r\nclass Groups extends React.Component {\r\n\r\n    groups = [];\r\n    totalItem = 0;\r\n    start = 1;\r\n    size = 8;\r\n    some = '';\r\n    activePage = 1;\r\n    loading = false;\r\n\r\n    state = {\r\n        selectedGroup: undefined,\r\n    }\r\n\r\n    unauthorized = false;\r\n\r\n    componentWillMount() {\r\n        this.unauthorized = !hasRole('ROLE_ADMINISTRATION');\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        // if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n        //     refreshToken()\r\n        // }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.allgroupsdata === -1) {\r\n            this.props.fetchAllGroups(0, 10);\r\n        } else {\r\n            this.props.fetchAllGroups(0, this.props.allgroupsdata.size);\r\n        }\r\n        if (this.state.selectedGroup != undefined) {\r\n            this.props.fetchAllUsersByGroup(this.state.selectedGroup);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleChangePageGroups = (event, page) => {\r\n        this.props.fetchAllGroups(page, this.props.allgroupsdata.size)\r\n    };\r\n\r\n\r\n\r\n    handleSelectGroup = (event, groups) => {\r\n\r\n\r\n        this.setState({ selectedGroup: groups }, () => {\r\n            this.props.fetchAllUsersByGroup(this.state.selectedGroup);\r\n\r\n        });\r\n    }\r\n\r\n    removeUserFromGroup = (event, user) => {\r\n        this.props.removeUserFromGroup(user, this.state.selectedGroup);\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.allgroupsdata != undefined && this.props.allgroupsdata != -1 && this.state.selectedGroup == undefined) {\r\n            this.setState({\r\n                selectedGroup: { id: this.props.allgroupsdata.content[0].id, name: this.props.allgroupsdata.content[0].name }\r\n            })\r\n        }\r\n        if (this.state.selectedGroup != undefined && this.props.allusersdata == undefined) {\r\n            this.props.fetchAllUsersByGroup(this.state.selectedGroup);\r\n        }\r\n        return (\r\n            <div style={{ margin: 30 + \"px\" }}>\r\n\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                    <Redirect to=\"/app/error/unauthorized\" />\r\n                }\r\n\r\n                <Grid container spacing={24}>\r\n                    <Grid md={5}>\r\n                        <div className=\"groups\">\r\n                            <h1>{this.props.match.params.id}</h1>\r\n                            <Paper style={{ margin: 5 + \"px\" }}>\r\n                                {this.loading == true ? <LinearProgress colSpan={5} color=\"primary\" /> : ''}\r\n                                <List>\r\n                                    <Link to={'/app/groups/create'}>\r\n                                        <Button variant=\"extendedFab\" color=\"primary\" aria-label=\"Add\" style={{ margin: 15 + \"px\" }} className=\"top-circle-create-btn \">\r\n                                            Add new <AddIcon />\r\n                                        </Button>\r\n                                    </Link>\r\n                                    {this.props.allgroupsdata.content && this.props.allgroupsdata.content.map(groups =>\r\n\r\n                                        <ListItem\r\n                                            button\r\n                                            selected={this.state.selectedGroup && this.state.selectedGroup.id === groups.id}\r\n                                            onClick={event => this.handleSelectGroup(event, groups)}\r\n                                        >\r\n                                            <ListItemText primary={groups.name} />\r\n\r\n                                            <Link to={'/app/groups/details/' + groups.id}>\r\n                                                <Button variant=\"contained\" color=\"default\" aria-label=\"Add\" className='btns success pull-right' >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path style={{ fill: \"white\" }} d=\"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z\" /></svg>\r\n                                                </Button>\r\n                                            </Link>\r\n\r\n                                            <Link to={'/app/groups/update/' + groups.id}>\r\n                                                <Button variant=\"contained\" color=\"primary\" aria-label=\"Add\" className='btns danger pull-right' >\r\n                                                    <Icon><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path style={{ fill: \"white\" }} d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg></Icon>\r\n                                                </Button>\r\n                                            </Link>\r\n                                            \r\n                                            <Link to={'/app/groups/delete/' + groups.id}>\r\n                                                <Button variant=\"contained\" color=\"secondary\" aria-label=\"Add\" className='btns pull-right' >\r\n                                                    <DeleteIcon />\r\n                                                </Button>\r\n                                            </Link>\r\n\r\n                                        </ListItem>\r\n\r\n\r\n                                    )}\r\n\r\n                                    <TablePagination\r\n                                        rowsPerPageOptions={8}\r\n                                        colSpan={3}\r\n                                        count={this.props.allgroupsdata.totalElements}\r\n                                        rowsPerPage={this.props.allgroupsdata.size}\r\n                                        page={this.props.allgroupsdata.number}\r\n                                        onChangePage={this.handleChangePageGroups}\r\n                                        onChangeRowsPerPage={this.handleChangeRowsPerPageGroups}\r\n                                    />\r\n                                </List>\r\n                            </Paper>\r\n                        </div>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid md={7}>\r\n                        <div className=\"users\">\r\n                            <h1>{this.props.match.params.id}</h1>\r\n                            <Paper style={{ padding: 20 + \"px\", margin: 5 + \"px\" }}>\r\n                                {this.loading == true ? <LinearProgress colSpan={5} color=\"primary\" /> : ''}\r\n                                <Table className='table'>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>\r\n                                                {this.state.selectedGroup &&\r\n                                                    <div>\r\n                                                        <Link to={'/app/groups/' + this.state.selectedGroup.id + '/users'}>\r\n                                                            <Button variant=\"contained\" color=\"primary\" aria-label=\"Add\" className='btns ' >\r\n                                                                <AddIcon /> Add user\r\n                                            </Button>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <TextField\r\n                                                    id=\"standard-name\"\r\n                                                    label=\"Filter\"\r\n                                                    value={this.name}\r\n                                                    margin=\"normal\"\r\n                                                />\r\n                                            </TableCell>\r\n\r\n                                        </TableRow>\r\n                                        <TableRow >\r\n                                            <TableCell>ID</TableCell>\r\n                                            <TableCell>E-mail</TableCell>\r\n                                            <TableCell style={{ width: 300 + \"px\" }}><p className=\"text-center\">Actions</p></TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.props.allusersdata && this.props.allusersdata.content && this.props.allusersdata.content.map(user =>\r\n                                            <TableRow key={user.id}>\r\n                                                <TableCell>{user.id}</TableCell>\r\n                                                <TableCell>{user.username}</TableCell>\r\n                                                <TableCell width={250}>\r\n\r\n\r\n                                                    <Button onClick={event => this.removeUserFromGroup(event, user)} variant=\"contained\" color=\"secondary\" aria-label=\"Add\" className='btns pull-right' >\r\n                                                        <DeleteIcon />\r\n                                                    </Button>\r\n\r\n\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n\r\n                                </Table>\r\n                            </Paper>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        allgroupsdata: state.groupsReducer.allgroupsdata,\r\n        allusersdata: state.groupsReducer.allusersdata\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchAllGroups, fetchAllUsers, fetchAllUsersByGroup, removeUserFromGroup\r\n}))(Groups);\r\n","export const GET_ALL_PRIVILEGES_REQUEST = \"GET_ALL_PRIVILEGES_REQUEST\";\r\nexport const GET_ALL_PRIVILEGES_SUCCESS = \"GET_ALL_PRIVILEGES_SUCCESS\";\r\nexport const GET_ALL_PRIVILEGES_FAIL = \"GET_ALL_PRIVILEGES_FAIL\";\r\n\r\nexport function fetchAllPrivileges(){\r\n    return {\r\n        type: GET_ALL_PRIVILEGES_REQUEST,\r\n        payload: undefined\r\n    };\r\n}\r\n\r\nexport const GET_ALL_USERS_BY_PRIVILEGE_REQUEST = \"GET_ALL_USERS_BY_PRIVILEGE_REQUEST\";\r\nexport const GET_ALL_USERS_BY_PRIVILEGE_SUCCESS = \"GET_ALL_USERS_BY_PRIVILEGE_SUCCESS\";\r\nexport const GET_ALL_USERS_BY_PRIVILEGE_FAIL    = \"GET_ALL_USERS_BY_PRIVILEGE_FAIL\";\r\n\r\nexport function fetchAllUsersByPrivilege(privilege){\r\n    return {\r\n        type: GET_ALL_USERS_BY_PRIVILEGE_REQUEST,\r\n        payload: privilege\r\n    };\r\n}\r\n\r\nexport const GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST = \"GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST\";\r\nexport const GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS = \"GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS\";\r\nexport const GET_ALL_GROUPS_BY_PRIVILEGE_FAIL = \"GET_ALL_GROUPS_BY_PRIVILEGE_FAIL\";\r\nexport function fetchAllGroupsByPrivilege(privilege){\r\n    return {\r\n        type: GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST,\r\n        payload: privilege\r\n    };\r\n}\r\n\r\nexport const ADD_USER_PRIVILEGE_REQUEST = \"ADD_USER_PRIVILEGE_REQUEST\";\r\nexport const ADD_USER_PRIVILEGE_SUCCESS = \"ADD_USER_PRIVILEGE_SUCCESS\";\r\nexport const ADD_USER_PRIVILEGE_FAIL = \"ADD_USER_PRIVILEGE_FAIL\";\r\nexport function addUserPrivilege(user, privilege){\r\n    return {\r\n        type: ADD_USER_PRIVILEGE_REQUEST,\r\n        payload: {privilege: privilege, user: user}\r\n    };\r\n}\r\n\r\nexport const REMOVE_USER_PRIVILEGE_REQUEST = \"REMOVE_USER_PRIVILEGE_REQUEST\";\r\nexport const REMOVE_USER_PRIVILEGE_SUCCESS = \"REMOVE_USER_PRIVILEGE_SUCCESS\";\r\nexport const REMOVE_USER_PRIVILEGE_FAIL = \"REMOVE_USER_PRIVILEGE_FAIL\";\r\nexport function removeUserPrivilege(user, privilege){\r\n    return {\r\n        type: REMOVE_USER_PRIVILEGE_REQUEST,\r\n        payload: {privilege: privilege, user: user}\r\n    };\r\n}\r\n\r\nexport const ADD_GROUP_PRIVILEGE_REQUEST = \"ADD_GROUP_PRIVILEGE_REQUEST\";\r\nexport const ADD_GROUP_PRIVILEGE_SUCCESS = \"ADD_GROUP_PRIVILEGE_SUCCESS\";\r\nexport const ADD_GROUP_PRIVILEGE_FAIL = \"ADD_GROUP_PRIVILEGE_FAIL\";\r\nexport function addGroupPrivilege(group, privilege){\r\n    return {\r\n        type: ADD_GROUP_PRIVILEGE_REQUEST,\r\n        payload: {privilege: privilege, group: group}\r\n    };\r\n}\r\n\r\nexport const REMOVE_GROUP_PRIVILEGE_REQUEST = \"REMOVE_GROUP_PRIVILEGE_REQUEST\";\r\nexport const REMOVE_GROUP_PRIVILEGE_SUCCESS = \"REMOVE_GROUP_PRIVILEGE_SUCCESS\";\r\nexport const REMOVE_GROUP_PRIVILEGE_FAIL = \"REMOVE_GROUP_PRIVILEGE_FAIL\";\r\nexport function removeGroupPrivilege(group, privilege){\r\n    return {\r\n        type: REMOVE_GROUP_PRIVILEGE_REQUEST,\r\n        payload: {privilege: privilege, group: group}\r\n    };\r\n}\r\n\r\n\r\nexport const GET_USERS_FILTERED_BY_NAME_REQUEST = \"GET_USERS_FILTERED_BY_NAME_REQUEST\";\r\nexport const GET_USERS_FILTERED_BY_NAME_SUCCESS = \"GET_USERS_FILTERED_BY_NAME_SUCCESS\";\r\nexport function getUsersFilteredByName(page = 0, size = 5, filterValue){\r\n    return {\r\n        type: GET_USERS_FILTERED_BY_NAME_REQUEST,\r\n        payload: {name: filterValue, page: page, size: size}\r\n    };\r\n}\r\n\r\nexport const GET_GROUPS_FILTERED_BY_NAME_REQUEST = \"GET_GROUPS_FILTERED_BY_NAME_REQUEST\";\r\nexport const GET_GROUPS_FILTERED_BY_NAME_SUCCESS = \"GET_GROUPS_FILTERED_BY_NAME_SUCCESS\";\r\nexport function getGroupsFilteredByName(page = 0, size = 10, name){\r\n    return {\r\n        type: GET_GROUPS_FILTERED_BY_NAME_REQUEST,\r\n        payload: {page: page, size: size, name: name}\r\n    };\r\n}","import React from 'react';\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GroupIcon from '@material-ui/icons/Group'\r\nimport {\r\n    Button,\r\n    LinearProgress,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport {\r\n    addGroupPrivilege,\r\n    addUserPrivilege,\r\n    fetchAllGroupsByPrivilege,\r\n    fetchAllPrivileges,\r\n    fetchAllUsersByPrivilege,\r\n    removeGroupPrivilege,\r\n    removeUserPrivilege\r\n} from './privileges.actions';\r\nimport { handleLogout, hasRole, refreshToken } from '../../shared/app.properties';\r\nimport Redirect from 'react-router/Redirect';\r\n\r\n\r\nfunction TabContainer(props) {\r\n    return (\r\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\nclass Privileges extends React.Component {\r\n\r\n    state = {\r\n        selectedPrivilege: undefined,\r\n        value: 0,\r\n        addUserDialogOpen: false\r\n    }\r\n    unauthorized = false;\r\n\r\n    componentWillMount() {\r\n        this.unauthorized = !hasRole('ROLE_ADMINISTRATION');\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n            refreshToken()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllPrivileges();\r\n        if (this.state.selectedPrivilege != undefined) {\r\n            this.props.fetchAllGroupsByPrivilege(this.state.selectedPrivilege);\r\n        }\r\n    }\r\n\r\n    handleSelectPrivilege = (event, privilege) => {\r\n\r\n\r\n        this.setState({ selectedPrivilege: privilege }, () => {\r\n            this.props.fetchAllGroupsByPrivilege(this.state.selectedPrivilege);\r\n\r\n        });\r\n    }\r\n\r\n    handleTabChange = (event, value) => {\r\n\r\n        this.setState({ value });\r\n    };\r\n\r\n    removeGroup = (event, group) => {\r\n        this.props.removeGroupPrivilege(group, this.state.selectedPrivilege);\r\n    }\r\n\r\n    removePrivilegeFromUser = (event, user) => {\r\n        this.props.removeUserPrivilege(user, this.state.selectedPrivilege);\r\n    }\r\n\r\n    handleAddUserDialog = (status) => {\r\n        if (status == 'open') {\r\n            this.setState({ addUserDialogOpen: true });\r\n        } else {\r\n            this.setState({ addUserDialogOpen: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.allprivileges != undefined && this.state.selectedPrivilege == undefined) {\r\n            this.setState({ selectedPrivilege: this.props.allprivileges[0] });\r\n        }\r\n        if (this.state.selectedPrivilege != undefined && this.props.allgroupsdata == undefined) {\r\n            this.props.fetchAllGroupsByPrivilege(this.state.selectedPrivilege);\r\n        }\r\n        return (\r\n            <div className=\"privileges\">\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                    <Redirect to=\"/app/error/unauthorized\" />\r\n                }\r\n                <div style={{ margin: 30 + \"px\" }}>\r\n                    <Grid container spacing={24}>\r\n                        <Grid md={4}>\r\n                            <Paper style={{ margin: 5 + \"px\" }}>\r\n                                <List>\r\n                                    {\r\n                                        this.props.allprivileges && this.props.allprivileges.map((privilege, index) => {\r\n                                            return (\r\n\r\n                                                <ListItem\r\n                                                    button\r\n                                                    selected={this.state.selectedPrivilege && this.state.selectedPrivilege.id === privilege.id}\r\n                                                    onClick={event => this.handleSelectPrivilege(event, privilege)}\r\n                                                >\r\n                                                    <ListItemText primary={privilege.name} />\r\n                                                </ListItem>\r\n\r\n                                            )\r\n                                        })}\r\n\r\n\r\n                                </List>\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid md={8}>\r\n                            <Paper style={{ padding: 20 + \"px\", margin: 5 + \"px\" }}>\r\n                                {this.props.loading == true ? <LinearProgress color=\"secondary\" /> :\r\n                                    <div style={{ height: 5 + 'px' }}></div>}\r\n\r\n                                <Typography variant=\"h5\" component=\"h2\"><strong>{this.state.selectedPrivilege && this.state.selectedPrivilege.name}</strong></Typography>\r\n\r\n                                <Tabs\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleTabChange}\r\n                                    indicatorColor=\"primary\"\r\n                                    textColor=\"primary\"\r\n                                >\r\n                                    <Tab value={0} label=\"Groups\" icon={<GroupIcon />} />\r\n                                </Tabs>\r\n\r\n                                {this.state.value === 0 && this.state.selectedPrivilege && <TabContainer>\r\n\r\n                                    <Link to={'/app/privileges/' + this.state.selectedPrivilege.id + '/groups'}>\r\n                                        <Button variant=\"contained\" color=\"primary\" aria-label=\"Add\" className='btns '>\r\n                                            <AddIcon /> Add groups\r\n                                        </Button>\r\n                                    </Link>\r\n\r\n                                    <Table className='table'>\r\n                                        <TableHead>\r\n\r\n                                            <TableRow>\r\n                                                <TableCell>ID</TableCell>\r\n                                                <TableCell>Name</TableCell>\r\n                                                <TableCell style={{ width: 100 + \"px\" }}><p\r\n                                                    className=\"text-center\">Actions</p></TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.props.allgroupsdata ? this.props.allgroupsdata.map((group, index) => {\r\n                                                    return (\r\n                                                        <TableRow>\r\n                                                            <TableCell>{group.id}</TableCell>\r\n                                                            <TableCell>{group.name}</TableCell>\r\n                                                            <TableCell>\r\n                                                                <Button\r\n                                                                    onClick={event => this.removeGroup(event, group)}\r\n                                                                    variant=\"contained\" color=\"secondary\"\r\n                                                                    aria-label=\"Delete\" className='btns pull-right'>\r\n                                                                    <DeleteIcon />\r\n                                                                </Button>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                }) : ''\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n\r\n\r\n                                </TabContainer>}\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allusersdata: state.privilegesReducer.allusersdata,\r\n        allgroupsdata: state.privilegesReducer.allgroupsdata,\r\n        allprivileges: state.privilegesReducer.allprivilegesdata,\r\n        loading: state.privilegesReducer.loading\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchAllPrivileges, fetchAllUsersByPrivilege, fetchAllGroupsByPrivilege,\r\n    removeUserPrivilege,\r\n    removeGroupPrivilege,\r\n    addUserPrivilege,\r\n    addGroupPrivilege\r\n}))(Privileges);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport {Link} from 'react-router-dom';\r\nimport {addGroupPrivilege, getGroupsFilteredByName} from '../privileges.actions';\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport {\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableFooter,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField\r\n} from \"@material-ui/core\";\r\n\r\nclass AddPrivilegeToUserContainer extends React.Component {\r\n\r\n    state = {\r\n        filterValue: undefined\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.getGroupsFilteredByName(0, 10, undefined);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    handleFilterChange = event => {\r\n        this.setState({\r\n            filterValue: event.target.value\r\n        })\r\n        this.props.getGroupsFilteredByName(0, 10, event.target.value);\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.props.getGroupsFilteredByName(page, this.props.filteredGroups.size, this.state.filterValue)\r\n    };\r\n\r\n    addGroupPrivilege = (event, user) => {\r\n\r\n        this.props.addGroupPrivilege(user, {id: this.props.match.params.id, name: undefined});\r\n    }\r\n\r\n    groupInArray(group, arr){\r\n        var ind = true;\r\n        for(var i = 0; i < arr.length; i ++){\r\n            if(group.id == arr[i].id){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Add privielege to group</DialogTitle>\r\n            \r\n\r\n                    <Table className='table'>\r\n                        <TableHead>\r\n                        <TableRow>\r\n\r\n                            <TableCell colSpan={4}>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"Filter\"\r\n                                value={this.state.filterValue}\r\n                                margin=\"normal\"\r\n                                onChange={this.handleFilterChange}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                                <TableCell>ID</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell style={{width: 70+\"px\"}}><p className=\"text-center\">&nbsp;</p></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            { this.props.filteredGroups && this.props.filteredGroups.content.map(group =>\r\n                            <TableRow key={group.id}>\r\n                                <TableCell>{group.id}</TableCell>\r\n                                <TableCell>{group.name}</TableCell>\r\n                                <TableCell width={250}>\r\n\r\n                                {\r\n                                    this.props.allgroupsdata && !this.groupInArray(group, this.props.allgroupsdata) &&\r\n                                \r\n                                <Button onClick={event => this.addGroupPrivilege(event, group)} variant=\"contained\" color=\"primary\" aria-label=\"Details\" className='btns success pull-right' >\r\n                                    <AddIcon/>\r\n                                </Button>\r\n\r\n                                }\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    <TableFooter>\r\n                <TableRow>\r\n                    { this.props.filteredGroups && \r\n                    \r\n                    <TablePagination\r\n                    rowsPerPageOptions={5}\r\n                    colSpan={5}\r\n                    count={this.props.filteredGroups.totalElements}\r\n                    rowsPerPage={this.props.filteredGroups.size}\r\n                    page={this.props.filteredGroups.number}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    />\r\n\r\n                    }\r\n                </TableRow>\r\n                </TableFooter>\r\n                </Table>\r\n\r\n\r\n                        <DialogActions>\r\n                            <Link to=\"/app/privileges\">\r\n                                <Button color=\"primary\">\r\n                                    Close\r\n                                </Button>\r\n                                </Link>\r\n                        </DialogActions> \r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filteredGroups:  state.privilegesReducer.filteredGroups,\r\n        allgroupsdata:   state.privilegesReducer.allgroupsdata,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    getGroupsFilteredByName,\r\n    addGroupPrivilege\r\n}))(AddPrivilegeToUserContainer);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport {Link} from 'react-router-dom';\r\nimport {addUserPrivilege, getUsersFilteredByName} from '../privileges.actions';\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport {\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableFooter,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField\r\n} from \"@material-ui/core\";\r\n\r\nclass AddPrivilegeToUserContainer extends React.Component {\r\n\r\n    state = {\r\n        filterValue: undefined\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.getUsersFilteredByName();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    handleFilterChange = event => {\r\n        this.setState({\r\n            filterValue: event.target.value\r\n        })\r\n        this.props.getUsersFilteredByName(0, 5, event.target.value);\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.props.getUsersFilteredByName(this.props.filteredUsers.size * page, this.props.filteredUsers.size, this.state.filterValue)\r\n    };\r\n\r\n    addUserPrivilege = (event, user) => {\r\n\r\n        this.props.addUserPrivilege(user, {id: this.props.match.params.id, name: undefined});\r\n    }\r\n\r\n    userInArray(user, arr){\r\n        var ind = true;\r\n        for(var i = 0; i < arr.length; i ++){\r\n            if(user.id == arr[i].id){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Add privielege to user</DialogTitle>\r\n            \r\n\r\n                    <Table className='table'>\r\n                        <TableHead>\r\n                        <TableRow>\r\n\r\n                            <TableCell colSpan={4}>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"Filter\"\r\n                                value={this.state.filterValue}\r\n                                margin=\"normal\"\r\n                                onChange={this.handleFilterChange}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                                <TableCell>ID</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>E-mail</TableCell>\r\n                                <TableCell style={{width: 70+\"px\"}}><p className=\"text-center\">&nbsp;</p></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            { this.props.filteredUsers ? this.props.filteredUsers.data.map(user =>\r\n                            <TableRow key={user.id}>\r\n                                <TableCell>{user.id}</TableCell>\r\n                                <TableCell>{user.firstName + \" \" + user.lastName}</TableCell>\r\n                                <TableCell>{user.email}</TableCell>\r\n                                <TableCell width={250}>\r\n\r\n                                {\r\n                                    this.props.allusersdata && !this.userInArray(user, this.props.allusersdata) &&\r\n                                \r\n                                <Button onClick={event => this.addUserPrivilege(event, user)} variant=\"contained\" color=\"primary\" aria-label=\"Details\" className='btns success pull-right' >\r\n                                    <AddIcon/>\r\n                                </Button>\r\n\r\n                                }\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            ) : ''}\r\n                        </TableBody>\r\n                    <TableFooter>\r\n                <TableRow>\r\n                    { this.props.filteredUsers && \r\n                    \r\n                    <TablePagination\r\n                    rowsPerPageOptions={5}\r\n                    colSpan={5}\r\n                    count={this.props.filteredUsers.total}\r\n                    rowsPerPage={this.props.filteredUsers.size}\r\n                    page={Math.round((this.props.filteredUsers.total/this.props.filteredUsers.size)/(this.props.filteredUsers.total/this.props.filteredUsers.start))}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    />\r\n\r\n                    }\r\n                </TableRow>\r\n                </TableFooter>\r\n                </Table>\r\n\r\n\r\n                        <DialogActions>\r\n                            <Link to=\"/app/privileges\">\r\n                                <Button color=\"primary\">\r\n                                    Close\r\n                                </Button>\r\n                                </Link>\r\n                        </DialogActions> \r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filteredUsers: state.privilegesReducer.filteredUsers,\r\n        allusersdata:   state.privilegesReducer.allusersdata,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    getUsersFilteredByName,\r\n    addUserPrivilege\r\n}))(AddPrivilegeToUserContainer);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Redirect from 'react-router-dom/Redirect'\r\nimport {clearUser, createUser, fetchUser, resetRedirect} from '../users.actions';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass CreateUserContainer extends React.Component{    \r\n\r\n    state = {\r\n        singleuser: {},\r\n        redirectBack: false\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearUser();\r\n    }\r\n    \r\n    handleUserFormChange = name => event => {\r\n\r\n        let user = this.state.singleuser;\r\n       user[name] = event.target.value;\r\n       this.setState({\r\n           singleuser: user\r\n       });\r\n\r\n        this.setState({\r\n        singleuser: user\r\n        });  \r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ redirectBack: true });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n\r\n        this.props.createUser(this.state.singleuser);\r\n    };\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n        return <Redirect to='/app/users' />\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Create new user</DialogTitle>\r\n                <div>\r\n                     \r\n                    <form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                        <TextField\r\n                        id=\"id\"\r\n                        label=\"Username (ID)\"\r\n                        onChange={this.handleUserFormChange('username')}\r\n                        fullWidth={true}\r\n                        value={this.state.singleuser.username}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            onChange={this.handleUserFormChange('password')}\r\n                            fullWidth={true}\r\n                            value={this.state.singleuser.password}\r\n                            margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                        id=\"first-name\"\r\n                        label=\"First name\"\r\n                        onChange={this.handleUserFormChange('name')}\r\n                        fullWidth={true}\r\n                        value={this.state.singleuser.name}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                        id=\"last-name\"\r\n                        required\r\n                        fullWidth={true}\r\n                        onChange={this.handleUserFormChange('surname')}\r\n                        label=\"Last name\"\r\n                        value={this.state.singleuser.surname}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                            id=\"email-name\"\r\n                            fullWidth={true}\r\n                            label=\"E-Mail\"\r\n                            onChange={this.handleUserFormChange('email')}\r\n                            value={this.state.singleuser.email}\r\n                            margin=\"normal\"\r\n                        />\r\n                        <DialogActions>\r\n                            <Link to=\"/app/users\">\r\n                                <Button onClick={() => this.handleClose()} color=\"primary\">\r\n                                Cancel\r\n                                </Button>\r\n                                </Link>\r\n                            <Button onClick={() => this.handleSubmit()} color=\"primary\" variant=\"contained\">\r\n                            Create\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </div>\r\n                {this.props.redirectBack ? this.redirectBack() : ''}\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n       singleuser: state.usersReducer.singleuser,\r\n       redirectBack: state.usersReducer.redirectBack\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchUser, createUser, resetRedirect, clearUser\r\n}))(CreateUserContainer);","export class User {\r\n    id;\r\n    firstName;\r\n    lastName;\r\n    displayName;\r\n    url;\r\n    email;\r\n    pictureUrl;\r\n\r\n    constructor(obj){\r\n        Object.assign(this, obj);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {clearUser, fetchUser, resetRedirect, updateUser} from '../users.actions';\r\nimport {User} from '../../../model/user.model';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nexport class UpdateUserContainer extends React.Component{    \r\n\r\n    state = {\r\n        singleuser: new User({}),\r\n        redirectBack: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchUser(this.props.match.params.id);\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearUser();\r\n    }\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n          return <Redirect to='/app/users' />\r\n    }\r\n    \r\n    calcDisplayName = () => {\r\n        let fn = this.state.singleuser.firstName === undefined ? '' : this.state.singleuser.firstName;\r\n        let ln = this.state.singleuser.lastName === undefined ? '' : this.state.singleuser.lastName;\r\n        let user = this.state.singleuser;\r\n        user.displayName = fn + ' ' + ln;\r\n        this.setState({\r\n            singleuser: user\r\n        });\r\n    };\r\n\r\n    handleUserFormChange = name => event => {\r\n\r\n        let user = this.state.singleuser;\r\n        user[name] = event.target.value;\r\n        this.setState({\r\n            singleuser: user\r\n        });\r\n\r\n        this.calcDisplayName();\r\n     };\r\n\r\n\r\n     handleSubmit = () => {\r\n\r\n\r\n         this.props.updateUser(this.state.singleuser);\r\n    };\r\n\r\n    render() {\r\n\r\n        if((this.props.singleuser != -1 && this.props.singleuser !== undefined) && (this.state.singleuser === undefined || this.state.singleuser.id === undefined)){\r\n\r\n            let user = this.props.singleuser;\r\n            this.setState({\r\n                singleuser: user\r\n            });\r\n\r\n        }\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Update user <strong>{this.props.singleuser ? this.props.singleuser.id : ''}</strong></DialogTitle>\r\n            { this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{height: 5 + 'px'}}></div>}\r\n\r\n            { this.state.singleuser !== undefined ? \r\n\r\n\r\n                <div>\r\n                    <form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                        <TextField\r\n                        id=\"id\"\r\n                        label=\"Username (ID)\"\r\n                        onChange={this.handleUserFormChange('id')}\r\n                        fullWidth={true}\r\n                        value={this.state.singleuser.id ? this.state.singleuser.id : ''}\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />\r\n                        <TextField\r\n                        id=\"first-name\"\r\n                        label=\"Username\"\r\n                        disabled={true}\r\n                        onChange={this.handleUserFormChange('username')}\r\n                        fullWidth={true}\r\n                        value={this.state.singleuser.username ? this.state.singleuser.username : ''}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                        id=\"first-name\"\r\n                        label=\"First name\"\r\n                        onChange={this.handleUserFormChange('name')}\r\n                        fullWidth={true}\r\n                        value={this.state.singleuser.name ? this.state.singleuser.name : ''}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                        id=\"last-name\"\r\n                        fullWidth={true}\r\n                        onChange={this.handleUserFormChange('surname')}\r\n                        label=\"Last name\"\r\n                        value={this.state.singleuser.surname ? this.state.singleuser.surname : ''}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                            id=\"email-name\"\r\n                            fullWidth={true}\r\n                            label=\"E-Mail\"\r\n                            onChange={this.handleUserFormChange('email')}\r\n                            value={this.state.singleuser.email ? this.state.singleuser.email : ''}\r\n                            margin=\"normal\"\r\n                        />\r\n                        <DialogActions>\r\n                            <Link to=\"/app/users\">\r\n                                <Button color=\"primary\">\r\n                                Cancel\r\n                                </Button>\r\n                                </Link>\r\n                            <Button onClick={() => this.handleSubmit()} color=\"primary\" variant=\"contained\">\r\n                            UPDATE\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </div>\r\n                \r\n                : ''} \r\n                {this.props.redirectBack ? this.redirectBack() : ''}\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\n    const mapStateToProps = state => {\r\n\r\n\r\n        return {\r\n            singleuser: state.usersReducer.singleuser,\r\n            redirectBack: state.usersReducer.redirectBack,\r\n            loading: state.usersReducer.loading\r\n\r\n        }\r\n    };\r\n\r\n    export default connect(mapStateToProps, ({\r\n        fetchUser, clearUser, updateUser, resetRedirect\r\n    }))(UpdateUserContainer);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {clearUser, createUser, fetchUser} from '../users.actions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport {Link} from 'react-router-dom';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nclass DetailsUserContainer extends React.Component{    \r\n\r\n    componentDidMount(){\r\n        this.props.fetchUser(this.props.match.params.id);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Details for user {this.props.singleuser !== undefined ? this.props.singleuser.username : ''}</DialogTitle>\r\n            { this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{height: 5 + 'px'}}></div>}\r\n\r\n            { this.props.singleuser &&\r\n\r\n                  <div><form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                <TextField\r\n                        id=\"id\"\r\n                        label=\"Username (ID)\"\r\n                        fullWidth={true}\r\n                        value={this.props.singleuser.username ? this.props.singleuser.username : ' '}\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />\r\n                        <TextField\r\n                        id=\"first-name\"\r\n                        label=\"First name\"\r\n                        fullWidth={true}\r\n                        value={this.props.singleuser.name ? this.props.singleuser.name : ' ' }\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />\r\n                        <TextField\r\n                        id=\"last-name\"\r\n                        label=\"Last name\"\r\n                        fullWidth={true}\r\n                        value={this.props.singleuser.surname ? this.props.singleuser.surname : ' '}\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />\r\n                        \r\n                        <TextField\r\n                            id=\"email-name\"\r\n                            fullWidth={true}\r\n                            label=\"E-Mail\"\r\n                            value={this.props.singleuser.email ? this.props.singleuser.email : ' '}\r\n                            margin=\"normal\"\r\n                            InputProps={{\r\n                                disabled: true,\r\n                            }}\r\n                        />\r\n                        \r\n                        </form></div>\r\n\r\n                        } \r\n                        <DialogActions>\r\n                            <Link to=\"/app/users\">\r\n                                <Button  color=\"primary\">\r\n                                Close\r\n                                </Button>\r\n                                </Link>\r\n                        </DialogActions> \r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        singleuser: state.usersReducer.singleuser,\r\n        loading: state.usersReducer.loading\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchUser, createUser, clearUser\r\n}))(DetailsUserContainer);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport {clearUser, deleteUser, fetchUser, resetRedirect} from '../users.actions';\r\nimport Redirect from 'react-router-dom/Redirect'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nclass DeleteUserContainer extends React.Component{    \r\n\r\n    componentDidMount(){\r\n        this.props.fetchUser(this.props.match.params.id);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ redirectBack: true });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n\r\n        this.props.deleteUser(this.props.singleuser);\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearUser();\r\n    }\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n        return <Redirect to='/app/users' />\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Delete user {this.props.singleuser ? this.props.singleuser.username : ''}</DialogTitle>\r\n                <div>\r\n                { this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{height: 5 + 'px'}}></div>}\r\n\r\n                { this.props.singleuser !== undefined ? \r\n\r\n                <div><form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                <TextField\r\n                    id=\"id\"\r\n                    label=\"Username (ID)\"\r\n                    fullWidth={true}\r\n                    value={this.props.singleuser.id ? this.props.singleuser.id : ' '}\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                        disabled: true,\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                    id=\"first-name\"\r\n                    label=\"First name\"\r\n                    fullWidth={true}\r\n                    value={this.props.singleuser.username ? this.props.singleuser.username : ' ' }\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                        disabled: true,\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                    id=\"first-name\"\r\n                    label=\"First name\"\r\n                    fullWidth={true}\r\n                    value={this.props.singleuser.name ? this.props.singleuser.name : ' ' }\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                        disabled: true,\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                    id=\"last-name\"\r\n                    label=\"Last name\"\r\n                    fullWidth={true}\r\n                    value={this.props.singleuser.surname ? this.props.singleuser.surname : ' '}\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                        disabled: true,\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                        id=\"email-name\"\r\n                        fullWidth={true}\r\n                        label=\"E-Mail\"\r\n                        value={this.props.singleuser.email ? this.props.singleuser.email : ' '}\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                    />\r\n                    \r\n                    </form></div>\r\n\r\n                    : ''} \r\n\r\n\r\n                    <DialogActions>\r\n                            <Link to=\"/app/users\">\r\n                                <Button color=\"primary\">\r\n                                Cancel\r\n                                </Button>\r\n                                </Link>\r\n                            <Button onClick={() => this.handleSubmit()} color=\"secondary\" variant=\"contained\">\r\n                            Delete\r\n                            </Button>\r\n                    </DialogActions>\r\n                </div>\r\n          </Dialog>\r\n          \r\n          {this.props.redirectBack ? this.redirectBack() : ''}\r\n\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        singleuser: state.usersReducer.singleuser,\r\n        redirectBack: state.usersReducer.redirectBack,\r\n        loading: state.usersReducer.loading\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchUser, deleteUser, resetRedirect, clearUser\r\n}))(DeleteUserContainer);\r\n","export default __webpack_public_path__ + \"static/media/tagama-png.3032fa3c.png\";","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {Badge, Button, IconButton, List, ListItem, Menu, MenuItem, Paper, Select, TextField,} from \"@material-ui/core\";\r\nimport {hasRole} from './app.properties';\r\nimport { AppBar, Toolbar, Typography, } from \"@material-ui/core\";\r\nimport logo from '../../Logo/tagama-png.png';\r\nimport textLogo from '../../Logo/tagama-text.png';\r\nimport { createMuiTheme,ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\n\r\n\r\n\r\nexport function NavbarMain(props) {\r\n      \r\n      const [anchorEl, setAnchorEl] = React.useState(null);\r\n      const open = Boolean(anchorEl);\r\n      const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n          };\r\n        \r\n          const handleClose = () => {\r\n            setAnchorEl(null);\r\n          };\r\n\r\n      const theme = createMuiTheme({\r\n            typography: {\r\n              fontFamily: [\r\n                'Chilanka',\r\n                'cursive',\r\n              ].join(','),\r\n            },});\r\n            const languageOptions = [\r\n                  { key: \"English\", text: \"English\", value: \"EN\" },\r\n                  { key: \"Macedonian\", text: \"Macedonian\", value: \"MKD\" }\r\n               ];\r\n            const options = [\r\n                  'MKD',\r\n                  'ENG',\r\n                ];\r\n                const ITEM_HEIGHT = 10;\r\n      \r\n\r\n    return (\r\n        <div className=\"header\">\r\n\r\n            {/* {hasRole(\"ROLE_ADMINISTRATION\") &&\r\n            <div style={{display: 'inline'}}>\r\n                <Link to=\"/app/audit/\" className=\"pull-right\"\r\n                      style={{marginLeft: 30 + \"px\", fontWeight: \"bold\"}}><Button color=\"inherit\"\r\n                                                                                  className=\"pull-right\"><strong>Audit</strong></Button></Link>\r\n\r\n                <Link to=\"/app/privileges/\" className=\"pull-right\"\r\n                      style={{marginLeft: 30 + \"px\", fontWeight: \"bold\"}}><Button color=\"inherit\"\r\n                                                                                  className=\"pull-right\"><strong>Privileges</strong></Button></Link>\r\n\r\n                <Link to=\"/app/groups/\" className=\"pull-right\"\r\n                      style={{marginLeft: 30 + \"px\", fontWeight: \"bold\"}}><Button color=\"inherit\"\r\n                                                                                  className=\"pull-right\"><strong>Groups</strong></Button></Link>\r\n\r\n                <Link to=\"/app/users/\" className=\"pull-right\"\r\n                      style={{marginLeft: 30 + \"px\", fontWeight: \"bold\"}}><Button color=\"inherit\"\r\n                                                                                   className=\"pull-right\"><strong>Users</strong></Button></Link>\r\n                 \r\n            \r\n            </div>  }\r\n            {(hasRole(\"ROLE_USER\") || hasRole(\"ROLE_ADMINISTRATION\")) &&\r\n            <div style={{display: 'inline'}}>\r\n                <Link to=\"/app/folders\" className=\"pull-right\"\r\n                      style={{marginLeft: 30 + \"px\", fontWeight: \"bold\"}}><Button color=\"inherit\"\r\n                                                                                  className=\"pull-right\"><strong>Folders</strong></Button></Link>\r\n                <Link to=\"/app/scans\" className=\"pull-right\"\r\n                      style={{marginLeft: 30 + \"px\", fontWeight: \"bold\"}}><Button color=\"inherit\"\r\n                                                                                  className=\"pull-right\"><strong>Scans</strong></Button></Link>\r\n                <Link to=\"/app/reports\" className=\"pull-right\"\r\n                      style={{marginLeft: 30 + \"px\", fontWeight: \"bold\"}}><Button color=\"inherit\"\r\n                                                                                  className=\"pull-right\"><strong>Reports</strong></Button></Link>\r\n\r\n\r\n            </div>\r\n            } */}\r\n{/* style={{position:\"absolute\", right:25+'px'}} className=\"pull-right\" */}\r\n<div >\r\n\r\n{/* You need this when you will handle with logout stuff */}\r\n{/* {\r\n  !localStorage.getItem('idm') && !localStorage.getItem('me') && <Redirect to='/login' />\r\n} */}\r\n\r\n{/* color=\"inherit\"  */}\r\n    <IconButton >\r\n        <Badge\r\n            badgeContent={0}\r\n            color=\"#FF7619\">\r\n            </Badge>\r\n            <a href=\"https://www.facebook.com/tagamatanja\">\r\n            <FacebookIcon/>\r\n            </a>\r\n          </IconButton>\r\n          <IconButton\r\n            \r\n          >\r\n            <a href=\"https://www.instagram.com/tagamatanja\">\r\n          <InstagramIcon/>\r\n          </a>\r\n          </IconButton>\r\n          <IconButton\r\n            \r\n          >\r\n            <a href={\"mailto:\" + \"tagama4@yahoo.com\"}>\r\n          <MailOutlineIcon/>\r\n          </a>\r\n          </IconButton>          \r\n        </div>\r\n            \r\n                        {/* <img src={textLogo} style={{height:\"7%\",width: \"7%\"}}/>\r\n                        <div style={{marginLeft:'75%'}}>\r\n                        <ThemeProvider theme={theme}>\r\n                        <List style={{display: 'flex',flexDirection: 'row',padding: 0}}>\r\n                        \r\n                              <ListItem>\r\n                              <Link to=\"/\">\r\n                              <Typography variant=\"h6\" style={{ textAlign: 'center',color:\"gray\"}} ><b>Home</b></Typography></Link>   \r\n                              </ListItem>\r\n                              <ListItem>\r\n                              <Link to=\"/\">\r\n                              <Typography noWrap variant=\"h6\" style={{ textAlign: 'center',color:\"gray\"}}><b>About us</b></Typography></Link>   \r\n                              </ListItem>\r\n                              <ListItem>\r\n                              <Link to=\"/\">\r\n                              <Typography variant=\"h6\" style={{ textAlign: 'center',color:\"gray\"}} ><b>Contact</b></Typography></Link>   \r\n                              </ListItem>\r\n                              <ListItem>\r\n                        \r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem key={option} selected={option === 'MKD'} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n                              </ListItem>\r\n                              \r\n\r\n                        </List>\r\n                        </ThemeProvider>\r\n\r\n                        \r\n                        </div> */}\r\n            </div>\r\n     \r\n  );\r\n}\r\n\r\nNavbarMain.propTypes = {\r\n};\r\n\r\n","import React from 'react';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {Badge, createMuiTheme, IconButton, List, ListItem, Menu, MenuItem,} from \"@material-ui/core\";\r\nimport Redirect from 'react-router/Redirect';\r\nimport {dispatchAction} from '../..';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\n\r\nclass NavbarRight extends React.Component {\r\n\r\n  state = {\r\n    userMenuIsOpen: false,\r\n      anchorEl: null,\r\n      taskNotifications: false\r\n  };\r\n\r\n  componentDidMount(){\r\n  }\r\n \r\n       \r\n\r\n  handleUserMenuOpen = event => {\r\n    this.setState({\r\n      userMenuIsOpen: true,\r\n      anchorEl: event.currentTarget\r\n    })\r\n  }\r\n\r\n  \r\n  handleUserMenuClose = () => {\r\n    this.setState({\r\n      userMenuIsOpen: false,\r\n      anchorEl: null\r\n    });\r\n  }\r\n\r\n    handleTaskNotificationsOpen = event => {\r\n        this.setState({\r\n            taskNotifications: true,\r\n            anchorEl: event.currentTarget,\r\n\r\n        })\r\n    }\r\n\r\n    handleTaskNotificationsClose = () => {\r\n        this.setState({\r\n            taskNotifications: false,\r\n            anchorEl: null\r\n        });\r\n    }\r\n  \r\n  \r\n  handleLogout = () => {\r\n    dispatchAction({type: \"USER_LOGOUT\", payload: undefined});\r\n    localStorage.removeItem('idm');\r\n    localStorage.removeItem('me');\r\n    this.setState({});\r\n\r\n  }\r\n  theme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: [\r\n        'Chilanka',\r\n        'cursive',\r\n      ].join(','),\r\n    },});\r\n \r\n\r\n  render(){\r\n    let refreshTime = new Date();\r\n      refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n  return (\r\n    \r\n      \r\n    <div style={{position:\"absolute\", right:25+'px'}} className=\"pull-right\">\r\n\r\n    {/* You need this when you will handle with logout stuff */}\r\n    {/* {\r\n      !localStorage.getItem('idm') && !localStorage.getItem('me') && <Redirect to='/login' />\r\n    } */}\r\n\r\n          <div >\r\n                        <ThemeProvider theme={this.theme}>\r\n                          \r\n                          {console.log(this.theme)}\r\n                        <List style={{display: 'flex',flexDirection: 'row',padding: 0}}>\r\n                        \r\n                              <ListItem>\r\n                              <Link to=\"/\">\r\n                              <Typography variant=\"h6\" style={{ textAlign: 'center',color:\"#434b56\"}} ><b>Home</b></Typography></Link>   \r\n                              </ListItem>\r\n                              <ListItem>\r\n                              <Link to=\"/\">\r\n                              <Typography noWrap variant=\"h6\" style={{ textAlign: 'center',color:\"#434b56\"}}><b>About us</b></Typography></Link>   \r\n                              </ListItem>\r\n                              <ListItem>\r\n                              <Link to=\"/\">\r\n                              <Typography variant=\"h6\" style={{ textAlign: 'center',color:\"#434b56\"}} ><b>Contact</b></Typography></Link>   \r\n                              </ListItem>\r\n                              {/* <ListItem>\r\n                        \r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem key={option} selected={option === 'MKD'} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n                              </ListItem> */}\r\n                              \r\n\r\n                        </List>\r\n                        </ThemeProvider>\r\n\r\n                        \r\n                        </div>\r\n            </div>\r\n\r\n        // <IconButton color=\"inherit\" >\r\n        //     <Badge\r\n        //         badgeContent={0}\r\n        //         color=\"#FF7619\">\r\n        //         </Badge>\r\n        //         <a href=\"https://www.facebook.com/tagamatanja\">\r\n        //         <FacebookIcon/>\r\n        //         </a>\r\n        //       </IconButton>\r\n        //       <IconButton\r\n        //         color=\"inherit\"\r\n        //       >\r\n        //         <a href=\"https://www.instagram.com/tagamatanja\">\r\n        //       <InstagramIcon/>\r\n        //       </a>\r\n        //       </IconButton>\r\n        //       <IconButton\r\n        //         color=\"inherit\"\r\n        //       >\r\n        //         <a href={\"mailto:\" + \"tagama4@yahoo.com\"}>\r\n        //       <MailOutlineIcon/>\r\n        //       </a>\r\n        //       </IconButton>          \r\n        //     </div>\r\n\r\n  )}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n}))(NavbarRight);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider, Drawer, Icon, List, ListItem, ListItemText, ListSubheader, } from \"@material-ui/core\";\r\nimport { AddBox, AssignmentInd, Build, Settings } from '@material-ui/icons';\r\nimport { hasRole } from './app.properties';\r\n\r\nexport function SidebarMenu(props) {\r\n\r\n    return (\r\n        <Drawer\r\n            style={{ top: 50 + \"px\" }}\r\n            className={classes.drawer + \" sidebarleft\"}\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.toolbar} />\r\n            \r\n                {hasRole(\"ROLE_ADMINISTRATION\") &&\r\n                 <div style={{width:'230px'}}>\r\n                    <List\r\n                        subheader={<ListSubheader component=\"div\"><strong>Home</strong></ListSubheader>}\r\n                    >\r\n                        <Link to=\"/app/dashboard\">\r\n                            <ListItem button key=\"dashboard\">\r\n                                <ListItemIcon><Settings style={{ color: 'black' }}></Settings></ListItemIcon>\r\n                                <ListItemText primary=\"Dashboard\" />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/app/settings\">\r\n                            <ListItem button key=\"appsettings\">\r\n                                <ListItemIcon><Settings style={{ color: 'black' }}></Settings></ListItemIcon>\r\n                                <ListItemText primary=\"Settings\" />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                    </div>\r\n                }\r\n                <Divider />\r\n\r\n                <Divider />\r\n        </Drawer>\r\n\r\n\r\n    );\r\n}\r\n\r\nSidebarMenu.propTypes = {};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst classes = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: 1201,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n});","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classNames(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles1)(MySnackbarContent);\r\n\r\nconst styles2 = theme => ({\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\n","export const GET_MAIN_USER_REQUEST = \"GET_MAIN_USER_REQUEST\";\r\nexport const GET_MAIN_USER_SUCCESS = \"GET_MAIN_USER_SUCCESS\";\r\nexport const GET_MAIN_USER_FAIL = \"GET_MAIN_USER_FAIL\";\r\n\r\nexport function fetchMainUserData(){\r\n    return {\r\n        type: GET_MAIN_USER_REQUEST,\r\n        payload: undefined\r\n    };\r\n}\r\n","import {\r\n    CREATE_USER_FAIL,\r\n    CREATE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    DELETE_USER_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_REQUEST,\r\n    GET_ALL_USERS_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    UPDATE_USER_SUCCESS,\r\n    RESET_PASSWORD_USER_SUCCESS,\r\n    RESET_PASSWORD_USER_FAIL\r\n} from \"../module/users/users.actions\";\r\nimport {\r\n    ADD_GROUP_PRIVILEGE_FAIL,\r\n    ADD_GROUP_PRIVILEGE_SUCCESS,\r\n    ADD_USER_PRIVILEGE_FAIL,\r\n    ADD_USER_PRIVILEGE_SUCCESS,\r\n    GET_ALL_USERS_BY_PRIVILEGE_REQUEST,\r\n    GET_ALL_USERS_BY_PRIVILEGE_SUCCESS,\r\n    REMOVE_GROUP_PRIVILEGE_FAIL,\r\n    REMOVE_GROUP_PRIVILEGE_SUCCESS,\r\n    REMOVE_USER_PRIVILEGE_FAIL,\r\n    REMOVE_USER_PRIVILEGE_SUCCESS\r\n} from \"../module/privileges/privileges.actions\";\r\nimport {\r\n    ADD_USER_TO_GROUP_SUCCESS,\r\n    CREATE_GROUP_FAIL,\r\n    CREATE_GROUP_SUCCESS,\r\n    DELETE_GROUP_FAIL,\r\n    DELETE_GROUP_SUCCESS,\r\n    REMOVE_USER_FROM_GROUP_SUCCESS,\r\n    UPDATE_GROUP_FAIL,\r\n    UPDATE_GROUP_SUCCESS\r\n} from \"../module/groups/groups.actions\";\r\nimport { GET_MAIN_USER_REQUEST, GET_MAIN_USER_SUCCESS } from \"../module/profile/profile.actions\";\r\n\r\n\r\nexport const CLEAR_NOTIFICATIONS = \"CLEAR_NOTIFICATIONS\";\r\nexport const SET_LOADING_BAR = \"SET_LOADING_BAR\";\r\nexport const REMOVE_LOADING_BAR = \"REMOVE_LOADING_BAR\";\r\n\r\nexport function mainReducer(currentState = { success: false, error: false, loading: false }, action) {\r\n    switch (action.type) {\r\n\r\n        case \"USER_LOGOUT\":\r\n            return {\r\n                ...currentState\r\n            }\r\n\r\n        case CREATE_USER_SUCCESS:\r\n\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"User created successfully\"\r\n            };\r\n\r\n        case CREATE_USER_FAIL:\r\n\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured creating new user\"\r\n            };\r\n\r\n        case DELETE_USER_SUCCESS:\r\n\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"User deleted successfully\"\r\n            };\r\n\r\n        case DELETE_USER_FAIL:\r\n\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured removing user\"\r\n            };\r\n\r\n        case UPDATE_USER_SUCCESS:\r\n\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"User updated successfully\"\r\n            };\r\n\r\n        case RESET_PASSWORD_USER_SUCCESS:\r\n\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"User password updated successfully\"\r\n            };\r\n\r\n        case UPDATE_USER_FAIL:\r\n\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured updating user\"\r\n            };\r\n\r\n        case RESET_PASSWORD_USER_FAIL:\r\n\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured updating user password\"\r\n            };\r\n\r\n        case CLEAR_NOTIFICATIONS:\r\n\r\n            return {\r\n                ...currentState,\r\n                open: false,\r\n            };\r\n\r\n        case GET_ALL_USERS_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n\r\n        case GET_MAIN_USER_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n\r\n        case GET_MAIN_USER_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                loading: false\r\n            };\r\n\r\n        case GET_ALL_USERS_BY_PRIVILEGE_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            }\r\n\r\n\r\n\r\n        case GET_ALL_USERS_SUCCESS || GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...currentState,\r\n                loading: false\r\n            };\r\n\r\n\r\n        case GET_ALL_USERS_BY_PRIVILEGE_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                loading: false\r\n            };\r\n\r\n        case 'SHOW_LOADING':\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n\r\n        case 'HIDE_LOADING':\r\n            return {\r\n                ...currentState,\r\n                loading: false\r\n            };\r\n\r\n        case REMOVE_USER_PRIVILEGE_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully removed privilege from user\"\r\n            };\r\n\r\n        case REMOVE_USER_PRIVILEGE_FAIL:\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured removing privilege from user\"\r\n            };\r\n\r\n        case ADD_USER_PRIVILEGE_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully added privilege from user\"\r\n            };\r\n\r\n        case ADD_USER_PRIVILEGE_FAIL:\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured adding privilege from user\"\r\n            };\r\n\r\n        case ADD_GROUP_PRIVILEGE_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully added privilege to group\"\r\n            };\r\n\r\n        case ADD_GROUP_PRIVILEGE_FAIL:\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured adding privilege to group\"\r\n            };\r\n\r\n        case REMOVE_GROUP_PRIVILEGE_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully removed privilege from group\"\r\n            };\r\n\r\n        case REMOVE_GROUP_PRIVILEGE_FAIL:\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured removing privilege from group\"\r\n            };\r\n\r\n        case UPDATE_GROUP_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully updated group\"\r\n            };\r\n        case UPDATE_GROUP_FAIL:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"An error occured updating group\"\r\n            };\r\n        case DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully deleted group\"\r\n            };\r\n        case DELETE_GROUP_FAIL:\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured deleting group\"\r\n            };\r\n        case CREATE_GROUP_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully created group\"\r\n            };\r\n        case CREATE_GROUP_FAIL:\r\n            return {\r\n                ...currentState,\r\n                variant: \"error\",\r\n                open: true,\r\n                message: \"An error occured creating group\"\r\n            };\r\n\r\n        case ADD_USER_TO_GROUP_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully added user to group\"\r\n            }\r\n\r\n        case REMOVE_USER_FROM_GROUP_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                variant: \"success\",\r\n                open: true,\r\n                message: \"Successfully removed user from group\"\r\n            }\r\n\r\n\r\n\r\n\r\n        default:\r\n            return currentState;\r\n    }\r\n}","export class Group{\r\n    id;\r\n    url;\r\n    name;\r\n    type;\r\n\r\n    constructor(obj){\r\n        Object.assign(this, obj);\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {Group} from '../../../model/group.model';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Redirect from 'react-router-dom/Redirect'\r\nimport {Link} from 'react-router-dom';\r\nimport {createGroup, resetRedirect} from '../groups.actions';\r\n\r\nclass CreateGroupsContainer extends React.Component{    \r\n\r\n    state = {\r\n        singlegroup: new Group({}),\r\n        redirectBack: false\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // this.props.clearUser();\r\n    }\r\n    \r\n\r\n    handleGroupFormChange = name => event => {\r\n\r\n        let group = this.state.singlegroup;\r\n       group[name] = event.target.value;\r\n       this.setState({\r\n        singlegroup: group\r\n       });\r\n\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ redirectBack: true });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n\r\n        this.props.createGroup(this.state.singlegroup);\r\n    };\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n        return <Redirect to='/app/groups/' />\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Create new group</DialogTitle>\r\n                <div>\r\n                    <form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                        <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        onChange={this.handleGroupFormChange('name')}\r\n                        fullWidth={true}\r\n                        value={this.state.singlegroup.name}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <DialogActions>\r\n                            <Link to=\"/app/groups\">\r\n                                <Button onClick={() => this.handleClose()} color=\"primary\">\r\n                                Cancel\r\n                                </Button>\r\n                                </Link>\r\n                            <Button onClick={() => this.handleSubmit()} color=\"primary\" variant=\"contained\">\r\n                            Create\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </div>\r\n                {this.props.redirectBack ? this.redirectBack() : ''}\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n       redirectBack: state.groupsReducer.redirectBack\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    createGroup,resetRedirect,\r\n}))(CreateGroupsContainer);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport {clearGroup, deleteGroup, fetchGroup, resetRedirect} from '../groups.actions'\r\nimport Redirect from 'react-router-dom/Redirect'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nclass DeleteGroupsContainer extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchGroup(this.props.match.params.id);\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ redirectBack: true });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n\r\n\r\n        this.props.deleteGroup(this.props.singlegroup);\r\n    };\r\n    componentWillUnmount(){\r\n        this.props.clearGroup();\r\n    }\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n        return <Redirect to='/app/groups' />\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Delete group {this.props.singlegroup ? this.props.singlegroup.name : ''}</DialogTitle>\r\n                <div>\r\n                { this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{height: 5 + 'px'}}></div>}\r\n\r\n                { this.props.singlegroup !== undefined ? \r\n\r\n                <div><form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                <TextField\r\n                    id=\"id\"\r\n                    label=\"id (ID)\"\r\n                    fullWidth={true}\r\n                    value={this.props.singlegroup.id ? this.props.singlegroup.id : ' '}\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                        disabled: true,\r\n                    }}\r\n                    />\r\n                    <TextField\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    fullWidth={true}\r\n                    value={this.props.singlegroup.name ? this.props.singlegroup.name : ' ' }\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                        disabled: true,\r\n                    }}\r\n                    />\r\n                    </form></div>\r\n\r\n                    : ''} \r\n\r\n\r\n                    <DialogActions>\r\n                            <Link to=\"/app/groups\">\r\n                                <Button color=\"primary\">\r\n                                Cancel\r\n                                </Button>\r\n                                </Link>\r\n                            <Button onClick={() => this.handleSubmit()} color=\"secondary\" variant=\"contained\">\r\n                            Delete\r\n                            </Button>\r\n                    </DialogActions>\r\n                </div>\r\n          </Dialog>\r\n          \r\n          {this.props.redirectBack ? this.redirectBack() : ''}\r\n\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        singlegroup: state.groupsReducer.singlegroup,\r\n        redirectBack: state.groupsReducer.redirectBack,\r\n        loading: state.groupsReducer.loading\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchGroup, deleteGroup, resetRedirect, clearGroup\r\n}))(DeleteGroupsContainer);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {clearGroup, fetchGroup, resetRedirect, updateGroup} from '../groups.actions';\r\nimport {Group} from '../../../model/group.model';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nexport class UpdateGroupContainer extends React.Component{\r\n\r\n    state = {\r\n        singlegroup: new Group({type: ''}),\r\n        redirectBack: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchGroup(this.props.match.params.id);\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearGroup();\r\n    }\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n          return <Redirect to='/app/groups' />\r\n    }\r\n\r\n\r\n    handleGroupFormChange = name => event => {\r\n\r\n        let group = this.state.singlegroup;\r\n        group[name] = event.target.value;\r\n        this.setState({\r\n            singlegroup: group\r\n        });\r\n\r\n    };\r\n\r\n\r\n     handleSubmit = () => {\r\n\r\n\r\n         this.props.updateGroup(this.state.singlegroup);\r\n    };\r\n    render() {\r\n\r\n        if((this.props.singlegroup != -1 && this.props.singlegroup !== undefined) && (this.state.singlegroup === undefined || this.state.singlegroup.id === undefined) && (this.props.singlegroup != this.state.singlegroup)){\r\n\r\n            let group = this.props.singlegroup;\r\n            this.setState({\r\n                singlegroup: group\r\n            });\r\n\r\n        }\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Update group <strong>{this.props.singlegroup ? this.props.singlegroup.name : ''}</strong></DialogTitle>\r\n            { this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{height: 5 + 'px'}}></div>}\r\n\r\n            { this.state.singlegroup !== undefined ? \r\n\r\n\r\n                <div>\r\n                    <form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                        <TextField\r\n                        id=\"id\"\r\n                        label=\"(ID)\"\r\n                        onChange={this.handleGroupFormChange('id')}\r\n                        fullWidth={true}\r\n                        value={this.state.singlegroup.id ? this.state.singlegroup.id : ''}\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />\r\n                        <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        onChange={this.handleGroupFormChange('name')}\r\n                        fullWidth={true}\r\n                        value={this.state.singlegroup.name ? this.state.singlegroup.name : ''}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <DialogActions>\r\n                            <Link to=\"/app/groups\">\r\n                                <Button color=\"primary\">\r\n                                Cancel\r\n                                </Button>\r\n                                </Link>\r\n                            <Button onClick={() => this.handleSubmit()} color=\"primary\" variant=\"contained\">\r\n                            UPDATE\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </div>\r\n                \r\n                : ''} \r\n                {this.props.redirectBack ? this.redirectBack() : ''}\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        singlegroup: state.groupsReducer.singlegroup,\r\n        redirectBack: state.groupsReducer.redirectBack,\r\n        loading: state.groupsReducer.loading\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchGroup, clearGroup, updateGroup, resetRedirect\r\n}))(UpdateGroupContainer);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {clearGroup, createGroup, fetchGroup} from '../groups.actions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport {Link} from 'react-router-dom';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nclass DetailsGroupsContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchGroup(this.props.match.params.id);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearGroup();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Details for group {this.props.singlegroup !== undefined ? this.props.singlegroup.name : ''}</DialogTitle>\r\n            { this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{height: 5 + 'px'}}></div>}\r\n\r\n            { this.props.singlegroup !== undefined ? \r\n\r\n                  <div><form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                <TextField\r\n                        id=\"id\"\r\n                        label=\"ID (ID)\"\r\n                        fullWidth={true}\r\n                        value={this.props.singlegroup.id ? this.props.singlegroup.id : ' '}\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />\r\n                        <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        fullWidth={true}\r\n                        value={this.props.singlegroup.name ? this.props.singlegroup.name : ' ' }\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />                 \r\n                        </form></div>\r\n\r\n                        : ''} \r\n                        <DialogActions>\r\n                            <Link to=\"/app/groups\">\r\n                                <Button  color=\"primary\">\r\n                                Close\r\n                                </Button>\r\n                                </Link>\r\n                        </DialogActions> \r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        singlegroup: state.groupsReducer.singlegroup,\r\n        loading: state.groupsReducer.loading\r\n\r\n    }\r\n};\r\nexport default connect(mapStateToProps, ({\r\n    fetchGroup, createGroup, clearGroup\r\n}))(DetailsGroupsContainer);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchAllUsers} from '../../users/users.actions';\r\nimport {addUserToGroup, fetchAllUsersByGroup} from '../groups.actions';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableFooter,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField\r\n} from \"@material-ui/core\";\r\n\r\nclass AddUserToGroupContainer extends React.Component {\r\n\r\n    state = {\r\n        filterValue: \"\",\r\n        usersInGroup: -1\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.fetchAllUsers(0, 8, \"\");\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    handleFilterChange = event => {\r\n        this.setState({\r\n            filterValue: event.target.value\r\n        })\r\n        this.props.fetchAllUsers(0, 8, event.target.value);\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.props.fetchAllUsers(page, 8, this.state.filterValue)\r\n    };\r\n\r\n    addUserToGroup = (event, user) => {\r\n\r\n        this.props.addUserToGroup(user, {id: this.props.match.params.id, name: undefined});\r\n        this.setState({\r\n            usersInGroup: this.props.allusersdata\r\n        })\r\n    }\r\n\r\n    userInArray(user, arr){\r\n        var ind = true;\r\n        for(var i = 0; i < arr.length; i ++){\r\n            if(user.id == arr[i].id){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Add user to group </DialogTitle>\r\n            \r\n\r\n                    <Table className='table'>\r\n                        <TableHead>\r\n                        <TableRow>\r\n\r\n                            <TableCell colSpan={5}>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"Filter\"\r\n                                value={this.state.filterValue}\r\n                                margin=\"normal\"\r\n                                onChange={this.handleFilterChange}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                                <TableCell>ID</TableCell>\r\n                                <TableCell>Username</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n\r\n                                <TableCell>E-mail</TableCell>\r\n                                <TableCell style={{width: 70+\"px\"}}><p className=\"text-center\">&nbsp;</p></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            { this.props.filteredUsers && this.props.filteredUsers.content ? this.props.filteredUsers.content.map(user =>\r\n                            <TableRow key={user.id}>\r\n                                <TableCell>{user.id}</TableCell>\r\n                                <TableCell>{user.username}</TableCell>\r\n                                <TableCell>{user.name + \" \" + user.surname}</TableCell>\r\n                                <TableCell>{user.email}</TableCell>\r\n                                <TableCell width={250}>\r\n\r\n                                {\r\n                                    this.props.allusersdata && !this.userInArray(user, this.props.allusersdata.content) &&\r\n                                \r\n                                <Button onClick={event => this.addUserToGroup(event, user)} variant=\"contained\" \r\n                                color=\"primary\" aria-label=\"Details\" className='btns success pull-right' >\r\n                                    <AddIcon/>\r\n                                </Button>\r\n\r\n                                }\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            ) : ''}\r\n                        </TableBody>\r\n                    <TableFooter>\r\n                <TableRow>\r\n                    { this.props.filteredUsers && this.props.filteredUsers.content && \r\n                    \r\n                    <TablePagination\r\n                    rowsPerPageOptions={5}\r\n                    colSpan={5}\r\n                    count={this.props.filteredUsers.totalElements}\r\n                    rowsPerPage={this.props.filteredUsers.size}\r\n                    page={this.props.filteredUsers.number}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    />\r\n\r\n                    }\r\n                </TableRow>\r\n                </TableFooter>\r\n                </Table>\r\n\r\n\r\n                        <DialogActions>\r\n                            <Link to=\"/app/groups\">\r\n                                <Button color=\"primary\">\r\n                                    Close\r\n                                </Button>\r\n                                </Link>\r\n                        </DialogActions> \r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filteredUsers:  state.usersReducer.allusersdata,\r\n        allusersdata:   state.groupsReducer.allusersdata,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchAllUsers,\r\n    addUserToGroup,\r\n    fetchAllUsersByGroup\r\n}))(AddUserToGroupContainer);\r\n\r\n","import axios from 'axios';\r\nimport {getCurrentAccessToken, getServerApiURL} from '../../shared/app.properties';\r\n\r\nconst SERVER_API_URL                = getServerApiURL();\r\nconst MODULE_USERS_API_CONTEXT      = \"/users\";\r\n\r\nexport const fetchAllUsers = (payload) => {\r\n    return fetch(SERVER_API_URL + MODULE_USERS_API_CONTEXT + \"/all?page=\"+ payload.page +\"&size=\" + payload.size + \"&filter=\"+payload.filter+ \"&access_token=\"+getCurrentAccessToken())\r\n        .then(response => response.json());\r\n};\r\n\r\n\r\nexport const fetchUser = (payload) => {\r\n    return fetch(SERVER_API_URL + MODULE_USERS_API_CONTEXT + \"/\" + payload.id + \"?access_token=\" + getCurrentAccessToken())\r\n        .then(response => response.json());\r\n};\r\n\r\nexport const createUser = (payload) => {\r\n\r\n    return axios({\r\n        method: 'post',\r\n        url: SERVER_API_URL + MODULE_USERS_API_CONTEXT + \"/create?access_token=\"+getCurrentAccessToken(),\r\n        data: payload.user,\r\n        headers:{\r\n                'Content-type':'application/json;utf-8'\r\n        }\r\n        }).then(response => response);\r\n};\r\n\r\nexport const deleteUser = (payload) => {\r\n    return axios({\r\n        method: 'delete',\r\n        url: SERVER_API_URL + MODULE_USERS_API_CONTEXT + \"/delete/\" + payload.user.id + \"?access_token=\"+getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n};\r\n\r\nexport const updateUser = (payload) => {\r\n    return axios({\r\n        method: 'put',\r\n        data: payload.user,\r\n        url: SERVER_API_URL + MODULE_USERS_API_CONTEXT + \"/update?access_token=\"+getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n};\r\n\r\nexport const resetPasswordUser = (payload) => {\r\n    return axios({\r\n        method: 'put',\r\n        data: payload.user,\r\n        url: SERVER_API_URL + MODULE_USERS_API_CONTEXT + \"/reset_password?access_token=\"+getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n};\r\n\r\nexport const fetchUsersFilteredByUsername = (payload) => {\r\n\r\n    return fetch(SERVER_API_URL + MODULE_USERS_API_CONTEXT + \"/all?page=\"+ payload.page +\"&size=\" + payload.size + \"&filter=\" + payload.filter + \"&access_token=\"+getCurrentAccessToken())\r\n        .then(response => response.json());\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { action } from '../../../index';\r\n\r\nimport { Grid, Paper, Table, TableCell, TableRow, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails, TextField, DialogActions, Button, } from \"@material-ui/core\";\r\nimport { fetchMainUserData } from './profile.actions';\r\nimport { handleLogout, hasAnyRole, refreshToken } from './../../shared/app.properties';\r\nimport Redirect from 'react-router-dom/Redirect';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {resetPasswordUser} from './../users/users.repo';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    loading = false;\r\n\r\n    unauthorized = false;\r\n\r\n    state = {\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        error: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchMainUserData();\r\n\r\n        this.unauthorized = !hasAnyRole('ROLE_ADMINISTRATION');\r\n\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n            refreshToken()\r\n        }\r\n    }\r\n\r\n    handleUserFormChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.newPassword === this.state.confirmPassword) {\r\n            let u = this.props.singleuser;\r\n            u['password']= this.state.newPassword;\r\n            resetPasswordUser({user:u}).then( res =>{\r\n                handleLogout();\r\n                window.location.replace(\"/login\")\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.props.singleuser) {\r\n\r\n        }\r\n        return (\r\n            <div className=\"my-profile\">\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                    <Redirect to=\"/app/error/unauthorized\" />\r\n                }\r\n                <h3 style={{ marginLeft: 30 + 'px' }}>MY PROFILE</h3>\r\n                <Paper style={{ marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px' }}>\r\n\r\n                    <Grid>\r\n                        <Grid xs={6}>\r\n                            {this.props.singleuser &&\r\n                            <div>\r\n                                <Table>\r\n                                    <TableRow>\r\n                                        <TableCell>Username</TableCell>\r\n                                        <TableCell>{this.props.singleuser.username}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>First name</TableCell>\r\n                                        <TableCell>{this.props.singleuser.name}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>Last name</TableCell>\r\n                                        <TableCell>{this.props.singleuser.surname}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>E-mail</TableCell>\r\n                                        <TableCell>{this.props.singleuser.email}</TableCell>\r\n                                    </TableRow>\r\n\r\n                                </Table>\r\n                                <br/><br/>\r\n                                <ExpansionPanel >\r\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Typography >Reset Password</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                    <form onSubmit={this.handleSubmit} autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                                    <TextField\r\n                                        id=\"last-name\"\r\n                                        fullWidth={true}\r\n                                        onChange={this.handleUserFormChange('newPassword')}\r\n                                        label=\"New Password:\"\r\n                                        value={this.state.newPassword ? this.state.newPassword : ''}\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"email-name\"\r\n                                        fullWidth={true}\r\n                                        label=\"Confirm Password\"\r\n                                        onChange={this.handleUserFormChange('confirmPassword')}\r\n                                        value={this.state.confirmPassword ? this.state.confirmPassword : ''}\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        error={this.state.error}\r\n                                        helperText={this.state.error ? 'Must match the previous entry' : ''}\r\n                                        required\r\n                                    />\r\n                                    <DialogActions>\r\n                                        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                                            Reset\r\n                                        </Button>\r\n                                    </DialogActions>\r\n                                </form>\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                                </div>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        singleuser: state.profileReducer.singleuser\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchMainUserData\r\n}))(ProfileContainer);\r\n\r\n","import axios from 'axios';\r\nimport {getCurrentAccessToken, getServerApiURL} from '../../shared/app.properties';\r\n\r\nconst SERVER_API_URL                = getServerApiURL();\r\n\r\nexport function getBooksAndFolders(type,year,name,page,size){\r\n    return axios.get(SERVER_API_URL+`/registerbooks/${type}/${year}/${name}?page=${page}&size=${size}`);\r\n}\r\nexport function deletePathFolder(id)\r\n{\r\n    return axios.delete(SERVER_API_URL+`/registerbooks/deleteFolder/${id}`);\r\n}\r\nexport function updateRegisterBook(registerBook)\r\n{\r\n    return axios.put(SERVER_API_URL+`/registerbooks`,registerBook);\r\n}\r\nexport function getRegisterBookById(id){\r\n    return axios.get(SERVER_API_URL+`/registerbooks/${id}`)\r\n}\r\nexport function getBooksAndRecords(type,year,name,dateFrom,dateTo,page,size){\r\n    return axios.get(SERVER_API_URL+`/registerbooks/records-date/${type}/${year}/${name}?dateFrom=${dateFrom}&dateTo=${dateTo}&page=${page}&size=${size}`)\r\n}\r\nexport function listAllFolders(){\r\n    return axios.get(SERVER_API_URL+`/registerbooks/folders/all`)\r\n}\r\nexport function getMissingfiles(pathFolder,totalFiles){\r\n    return axios.get(SERVER_API_URL+`/registerbooks/missing?pathFolder=${encodeURI(pathFolder)}&totalFiles=${totalFiles}`)\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {withStyles,makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getBooksAndFolders, deletePathFolder } from './folder.repo';\r\nimport {Table, TableHead, TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { fileURLToPath } from 'url';\r\nimport { dispatchAction } from '../../..';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n      '& label.Mui-focused': {\r\n        color: 'green',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'green',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: 'red',\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: 'yellow',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: 'green',\r\n        },\r\n      },\r\n    },\r\n  })(TextField);\r\n  \r\n  function buildFileSelector(){\r\n    const fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.setAttribute('multiple', 'multiple');\r\n    return fileSelector;\r\n  }\r\n  \r\n export default class FoldersContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          rowsPerPages: 5,\r\n          data: {},\r\n          formdata: {\r\n              registerName: undefined, \r\n              registerYear: undefined,\r\n              registerType: undefined \r\n          }\r\n        }\r\n      }\r\n        onClick = (type,year,name,page,size) => {\r\n        this.listBooksAndFolders(type,year,name,page,size)\r\n    }\r\n        // onClick1 = (id) => {\r\n        //   this.deletePathFolders(id);\r\n        // }\r\n    componentDidMount(){\r\n      this.fileSelector = buildFileSelector();\r\n    }\r\n    handleFileSelect = (e) => {\r\n      e.preventDefault();\r\n      this.fileSelector.click();\r\n    }\r\n        handleStatus(props){\r\n            if(props==1)\r\n            return \"Венчани\";\r\n            else if(props==0)\r\n            return \"Родени\";\r\n            else if(props==2)\r\n            return \"Умрени\";\r\n        }\r\n        handleFormInput = name => event => {      \r\n            var formdata = this.state.formdata;\r\n            formdata[name] = event.target.value;\r\n              this.setState({\r\n                formdata: formdata\r\n              });\r\n          }\r\n          handleChangePage = (event, page) => {\r\n             \r\n            if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n              this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,page,this.state.data.data.size);\r\n            }else{\r\n              this.listBooksAndFolders(page, 5);\r\n            }\r\n        }\r\n        onChangeRowsPerPage = (event) => {\r\n            this.setState({\r\n                rowsPerPages: event.target.value\r\n            })\r\n            this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0, event.target.value);\r\n        }\r\n         \r\n      \r\n      listBooksAndFolders = (type,year,name,page, size) => {\r\n        // console.log(this.state.formdata.registerName);\r\n        // console.log(this.state.formdata.registerType);\r\n        // console.log(this.state.formdata.registerYear);\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n        });\r\n        getBooksAndFolders(type,year,name,page,size).then(response => {\r\n          this.setState({\r\n            data: response\r\n          },\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          console.log(response);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }\r\n      deletePathFolders = (id) => {\r\n        // console.log(this.state.formdata.registerName);\r\n        // console.log(this.state.formdata.registerType);\r\n        // console.log(this.state.formdata.registerYear);\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n        });\r\n        deletePathFolder(id).then(response => {\r\n          this.setState({\r\n            data: response\r\n          },\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0,5);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }\r\n   \r\n        render(){\r\n        \r\n            return (\r\n        <form style={{marginLeft: '30px'}}><TextField\r\n        id=\"standard-input\"\r\n        label=\"Name Register Book\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        // onChange={handleChange('name')}\r\n        onChange={this.handleFormInput('registerName')}\r\n\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"standard-input\"\r\n        label=\"Year\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        onChange={this.handleFormInput('registerYear')}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"standard-input\"\r\n        label=\"Type Register Book\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        onChange={this.handleFormInput('registerType')}\r\n      />\r\n      <Button\r\n      onClick={this.listBooksAndFolders.bind(this,this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0,5)}\r\n      variant=\"contained\" \r\n      color=\"secondary\"\r\n      disabled={!this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear}\r\n      style={{marginTop: 50 + \"px\", marginLeft: 20 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n      >\r\n          Search</Button>\r\n          <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                      Year\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Type\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  Folder path\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.registerYear}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {this.handleStatus(item.registerType)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <b>{item.pathFolder? item.pathFolder : 'No folder'}</b>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                          <Button\r\n                            variant=\"contained\" \r\n                            color=\"secondary\"\r\n                            onClick={this.deletePathFolders.bind(this,item.id)}\r\n                            >Delete Folder\r\n                            </Button>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                          <Link to={'/app/folders/path/'+item.id+'?name='+item.name+'&type='+item.registerType+'&year='+item.registerYear} style={{textDecoration: 'none', color: 'white'}}>\r\n                              <Button\r\n                              onClick=\"\"\r\n                              variant=\"contained\" \r\n                              color=\"secondary\"\r\n                              type=\"file\"\r\n                              >Add Folder\r\n                              </Button>\r\n                          </Link>\r\n                         </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n\r\n      </form>\r\n            )\r\n    }\r\n}","import React from 'react';\r\nimport {Dialog,DialogTitle,Grid,TextField,DialogActions,Button, Select, Input, MenuItem} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { updateRegisterBook, getBooksAndRecords } from './folder.repo';\r\nimport {getRegisterBookById,listAllFolders} from './folder.repo';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport {TreeItem,TreeView} from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport {getBooksAndFolders} from './folder.repo';\r\nimport { dispatchAction } from '../../..';\r\n\r\nexport default class AddPathFolderContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          formdata: {},\r\n          data: {},\r\n          folders: [],\r\n          registerType: String,\r\n          registerName: String,\r\n          registerYear: String\r\n        }\r\n      }\r\n\r\n      componentDidMount(){\r\n        if(this.props.match.params.id){\r\n            this.loadRegisterBook(this.props.match.params.id);\r\n        }\r\n        var temp=this.props.location.search;\r\n        var array=temp.split(\"&\");\r\n        var registerName;\r\n        var registerType;\r\n        var registerYear;\r\n        var i;\r\n        for(i=0 ;i<array.length;i++){\r\n          var individual=array[i].split(\"=\")\r\n          if(i==0)\r\n          registerName=individual[1];\r\n         if(i==1)\r\n         registerType=individual[1];\r\n         if(i==2)\r\n         registerYear=individual[1];\r\n        }\r\n        this.setState({\r\n          registerName: this.registerName,\r\n          registerYear: this.registerYear,\r\n          registerType: this.registerYear\r\n        });\r\n        this.getAllFoders();\r\n      }\r\n      handleFormInput = name => event => {\r\n        var formdata = this.state.data;\r\n        formdata[name] = event.target.value;\r\n          this.setState({\r\n            data: formdata\r\n          });\r\n      }\r\n\r\n      getAllFoders = () => {\r\n        listAllFolders().then(response => {\r\n          this.setState({\r\n            folders: response.data,\r\n          });\r\n          console.log(response);\r\n        }).catch(error =>{\r\n          console.log(error);\r\n        });\r\n      }\r\n      loadRegisterBook = (id) => {\r\n        \r\n        getRegisterBookById(id).then(response => {\r\n            this.setState({\r\n                data: response.data,\r\n                linearProgressShown: false,\r\n            });\r\n            console.log(response);\r\n        }).catch(error =>{\r\n            console.log(error);\r\n            this.setState({\r\n                linearProgressShown: false\r\n            });\r\n        });\r\n      }\r\n    handleUpdate = () => {\r\n        this.setState({\r\n            linearProgressShown: true\r\n        });\r\n        updateRegisterBook(this.state.data).then(response => {\r\n            dispatchAction({\r\n                type: \"MAIN_LINEAR_PROGRESS_SHOW\",\r\n                payload: {\r\n                    snackbarMessage: 'Successfuly updated register book ' + response.data.name,\r\n                    snackbarType: 'success'\r\n                }\r\n            });\r\n            dispatchAction({\r\n              type: \"RELOAD ALL REGISTER BOOKS\",\r\n              payload: {}\r\n            });\r\n            this.setRedirect();\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n      }\r\n      listBooksAndFolders = (type,year,name,page, size) => {\r\n        // console.log(this.state.formdata.registerName);\r\n        // console.log(this.state.formdata.registerType);\r\n        // console.log(this.state.formdata.registerYear);\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n        });\r\n        getBooksAndFolders(type,year,name,page,size).then(response => {\r\n          this.setState({\r\n            data: response\r\n          },\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          console.log(response);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }\r\n    render(){\r\n        return(\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Add a path folder\"}</DialogTitle>\r\n              <Grid container>\r\n                  <Grid  style={{marginTop:10+\"px\", marginLeft:20+\"px\"}}>\r\n                  <span style={{height:30+\"px\"}}>Please insert the desired path for this registry book</span>\r\n                  <TextField\r\n                      style={{marginTop:30+\"px\"}}\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"pathFolder\"\r\n                      label=\"Folder Path\"\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      onChange={this.handleFormInput('pathFolder')}\r\n                      value={this.state.data.pathFolder || ''}\r\n                  />\r\n                      <Select\r\n                                      fullWidth={true}\r\n                                       value={this.state.pathFolder}\r\n                                       onChange={this.handleFormInput('pathFolder')}\r\n                                      //  input={<Input name=\"pathFolder\" id=\"pathFolderId\" />}\r\n                                       displayEmpty\r\n                                       style={{marginTop:\"10px\"}}\r\n                                       variant=\"outlined\"\r\n                                   >\r\n                                      \r\n                                       {\r\n                                            this.state.folders && this.state.folders && this.state.folders &&\r\n                                            this.state.folders.map(e => (\r\n                                               <MenuItem key={e} value={e}>{e}</MenuItem>\r\n                                           ))\r\n                                       }\r\n                                   </Select>\r\n                      </Grid>\r\n                  \r\n              </Grid>\r\n            <DialogActions>\r\n            <Link to=\"/app/folders\" style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button onClick={() => this.handleUpdate()} color=\"secondary\" variant=\"contained\">\r\n                    Save\r\n                </Button>\r\n            </Link>  \r\n            <Link to=\"/app/folders\" style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button onClick=\"\" color=\"secondary\" variant=\"outlined\">\r\n                    Cancel\r\n                </Button>\r\n            </Link>       \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n   \r\n}","export const GET_APP_HEALTH_REQUEST = \"GET_APP_HEALTH_REQUEST\";\r\nexport const GET_APP_HEALTH_SUCCESS = \"GET_APP_HEALTH_SUCCESS\";\r\nexport const GET_APP_HEALTH_FAIL = \"GET_APP_HEALTH_FAIL\";\r\n\r\n\r\nexport function getAppHealth() {\r\n    return {\r\n        type: GET_APP_HEALTH_REQUEST,\r\n        payload: {}\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport {\r\n    Bar,\r\n    BarChart,\r\n    CartesianGrid,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from 'recharts';\r\nimport {getAppHealth} from './dashboard.actions';\r\nimport format from \"date-fns/format\";\r\nimport {handleLogout, hasAnyRole, refreshToken} from '../../shared/app.properties';\r\nimport Redirect from 'react-router-dom/Redirect';\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n\r\n    state = {\r\n        data: [\r\n            {name: '1/1/2019', Requests: 12},\r\n            {name: '1/2/2019', Requests: 2}\r\n        ],\r\n\r\n    }\r\n\r\n    unauthorized = false;\r\n\r\n    componentWillMount() {\r\n        this.unauthorized = !hasAnyRole('ROLE_USER,ROLE_ADMINISTRATION');\r\n\r\n        // let refreshTime = new Date();\r\n        // refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        // if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n        //     refreshToken()\r\n        // }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAppHealth();\r\n\r\n    }\r\n\r\n    prepareDataHealth() {\r\n        if (this.props.reportHealth.data != undefined) {\r\n            var reportHealth = this.props.reportHealth.data[\"diskSpace\"];\r\n            var data = [\r\n                {name: \"Total\", GB: Math.round((reportHealth[\"total\"] / (1024 * 1024 * 1024)) * 10) / 10},\r\n                {\r\n                    name: \"Used\",\r\n                    GB: Math.round((reportHealth[\"total\"] - reportHealth[\"free\"]) / (1024 * 1024 * 1024) * 10) / 10\r\n                },\r\n                {name: \"Free\", GB: Math.round((reportHealth[\"free\"] / (1024 * 1024 * 1024)) * 10) / 10},\r\n\r\n                {name: \"Threshold\", GB: reportHealth[\"threshold\"] / (1024 * 1024 * 1024)}\r\n\r\n\r\n            ];\r\n            return data;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                <Redirect to=\"/app/error/unauthorized\"/>\r\n                }\r\n                <Grid container spacing={0}>\r\n                    <Grid md={6} className=\"formGrid\">\r\n                        <Paper style={{\r\n                            marginLeft: 30 + \"px\",\r\n                            marginRight: 15 + 'px',\r\n                            padding: 10 + 'px',\r\n                            width: '94%',\r\n                            height: '360px'\r\n                        }}>\r\n                            <h4>Disk Space</h4>\r\n                            <ResponsiveContainer width=\"95%\" height=\"80%\">\r\n                                <BarChart\r\n                                    data={this.prepareDataHealth() && this.prepareDataHealth()}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                                    <XAxis dataKey=\"name\"/>\r\n                                    <YAxis/>\r\n                                    <Tooltip/>\r\n                                    <Legend/>\r\n                                    <Bar dataKey=\"GB\" fill=\"#8884d8\"/>\r\n                            </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reportHealth: state.dashboardReducer.reportHealth,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n     getAppHealth\r\n}))(Dashboard);","import axios from 'axios';\r\nimport { getServerApiURL, getCurrentAccessToken, getAuthorizationHeader } from '../../shared/app.properties';\r\n\r\nconst SERVER_API_URL                = getServerApiURL();\r\nconst MODULE_AUDIT_API_CONTEXT      = \"/audit\";\r\n\r\nexport const queryAuditLog = (payload) => {\r\n    var page = payload.page;\r\n    var size = payload.size;\r\n    var auditType = payload.auditType;\r\n    return axios({\r\n        method: 'get',\r\n        url: SERVER_API_URL + MODULE_AUDIT_API_CONTEXT \r\n        + \"/query?access_token=\"+getCurrentAccessToken()\r\n        + \"&auditType=\" + auditType \r\n        + \"&page=\" + page\r\n        + \"&size=\" + size\r\n        ,\r\n        data: payload.user,\r\n        headers:{\r\n                'Content-type':'application/json;utf-8',\r\n                'Authorization' : getAuthorizationHeader()\r\n        }\r\n        }).then(response => response);\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    FormControl,\r\n    Grid,\r\n    Input,\r\n    InputLabel,\r\n    MenuItem,\r\n    Paper,\r\n    Select,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow\r\n} from \"@material-ui/core\";\r\nimport {queryAuditLog} from './audit.repo';\r\nimport {Chip} from '@material-ui/core/es';\r\nimport format from \"date-fns/format\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {handleLogout, hasRole, refreshToken} from '../../shared/app.properties';\r\n\r\n\r\nclass AuditContainer extends React.Component {\r\n\r\n    unauthorized = false;\r\n\r\n    state = {\r\n        auditType: \"USERS_AUD\",\r\n        data: undefined,\r\n        loading: false\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n        //I need this when I have login system\r\n        // this.unauthorized = !hasRole('ROLE_ADMINISTRATION');\r\n\r\n        // let refreshTime = new Date();\r\n        // refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        // if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n        //     refreshToken()\r\n        // }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        queryAuditLog({\r\n            auditType: this.state.auditType,\r\n            page: 0,\r\n            size: 10\r\n        }).then(res => {\r\n            this.setData(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        var newQueryPage = page;\r\n        queryAuditLog({\r\n            auditType: this.state.auditType,\r\n            page: newQueryPage,\r\n            size: 10\r\n        }).then(res => {\r\n            this.setData(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    setData = (data) => {\r\n        console.log(data);\r\n        this.setState({\r\n            data: data\r\n        });\r\n    }\r\n\r\n    handleChangeSelectField = name => event => {\r\n        var name1 = name;\r\n        var val = event.target.value;\r\n\r\n        queryAuditLog({\r\n            auditType: val,\r\n            page: 0,\r\n            size: 10\r\n        }).then(res => {\r\n            this.setData(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n        this.setState({\r\n            auditType: val\r\n        },\r\n\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"audit-log\">\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                    <Redirect to=\"/app/error/unauthorized\" />\r\n                }\r\n                <h3 style={{ marginLeft: 30 + 'px' }}>AUDIT LOG</h3>\r\n                <Paper style={{ marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px' }}>\r\n                    <Grid>\r\n                        <Grid xs={12}>\r\n                            {this.state.data &&\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n\r\n                                            <FormControl fullWidth={true} margin=\"normal\" >\r\n                                                <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                                                    Select object type<br /><br />\r\n                                                </InputLabel>\r\n                                                <Select\r\n                                                    required={true}\r\n                                                    fullWidth={true}\r\n                                                    value={this.state.auditType}\r\n                                                    onChange={this.handleChangeSelectField('auditType')}\r\n                                                    input={<Input name=\"auditType\" id=\"auditType-label-placeholder\" />}\r\n                                                    displayEmpty\r\n                                                >\r\n                                                    <MenuItem value=\"USERS_AUD\">USERS</MenuItem>\r\n                                                    <MenuItem value=\"GROUPS_AUD\">GROUPS</MenuItem>\r\n                                                    <MenuItem value=\"SYSTEM_SETTINGS_PROPS_AUD\">SYSTEM SETTINGS</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n\r\n                                            {this.state.data &&\r\n                                                <TablePagination\r\n                                                    rowsPerPageOptions={8}\r\n                                                    colSpan={5}\r\n                                                    count={this.state.data.totalElements}\r\n                                                    rowsPerPage={this.state.data.size}\r\n                                                    page={this.state.data.number}\r\n                                                    onChangePage={this.handleChangePage}\r\n                                                />\r\n                                            }\r\n\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n\r\n                                            <TableCell style={{ width: 150 + 'px' }}>\r\n                                                Rev ID\r\n                                                    </TableCell>\r\n                                            <TableCell style={{ width: 500 + 'px' }}>\r\n                                                Object value\r\n                                                </TableCell>\r\n                                            <TableCell style={{ width: 300 + 'px' }}>\r\n                                                Action taker\r\n                                                </TableCell>\r\n                                            <TableCell style={{ width: 300 + 'px' }}>\r\n                                                Date and time\r\n                                                </TableCell>\r\n                                            <TableCell style={{ textAlign: 'right' }}>\r\n                                                Action type\r\n                                                    </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            this.state.data.content && this.state.data.content.map(item =>\r\n                                                <TableRow>\r\n                                                    <TableCell>\r\n                                                        {item[1]}\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{ width: 500 + 'px' }}>\r\n                                                        <p style={{ wordWrap: 'break-word', width: 470 + 'px' }}>{JSON.stringify(item)}</p>\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {item[7]}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {format(item[item.length - 1], ['dd.MM.yyyy HH:mm:ss'])}\r\n                                                    </TableCell>\r\n                                                    <TableCell style={{ textAlign: 'right' }}>\r\n                                                        {item[2] == 0 ?\r\n                                                            <Chip style={{ backgroundColor: 'green', color: 'white' }}\r\n                                                                label='CREATE'></Chip>\r\n                                                            : item[2] == 1 ?\r\n                                                                <Chip color='primary' label='UPDATE'></Chip>\r\n                                                                : item[2] == 2 ?\r\n                                                                    <Chip color='secondary' label='DELETE'></Chip>\r\n                                                                    : 'UNKNOWN'}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: undefined\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n\r\n}))(AuditContainer);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { handleLogout, refreshToken } from '../../shared/app.properties';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nclass UnauthorizedContainer extends React.Component {\r\n\r\n    // componentWillMount() {\r\n\r\n    //     let refreshTime = new Date();\r\n    //     refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n    //     if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n    //         handleLogout()\r\n    //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n    //         handleLogout()\r\n    //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n    //         refreshToken()\r\n    //     }\r\n    // }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n            <Grid style={{marginTop:'10%'}}>\r\n            <Typography style={{zoom:1.3}} align=\"center\" component=\"h2\" variant=\"display4\" gutterBottom>401</Typography>\r\n            <Typography align=\"center\" component=\"h2\" variant=\"display3\" gutterBottom>Unauthorized Access!</Typography>\r\n            <Typography align=\"center\" component=\"h2\" variant=\"display1\" gutterBottom>Oops! You don't have permission to access this page.</Typography>\r\n            </Grid>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n};\r\n\r\nexport default connect(mapStateToProps, ({}))(UnauthorizedContainer);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { clearUser, fetchUser, resetRedirect, resetPasswordUser } from '../users.actions';\r\nimport { User } from '../../../model/user.model';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nexport class ResetPasswordUserContainer extends React.Component {\r\n\r\n    state = {\r\n        singleuser: new User({}),\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        error: false,\r\n        redirectBack: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUser(this.props.match.params.id);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearUser();\r\n    }\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n        return <Redirect to='/app/users' />\r\n    }\r\n\r\n\r\n    handleUserFormChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.newPassword === this.state.confirmPassword) {\r\n            let u = this.state.singleuser;\r\n            console.log(u);\r\n            u['password']= this.state.newPassword;\r\n            this.props.resetPasswordUser(u)\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        if ((this.props.singleuser != -1 && this.props.singleuser !== undefined) && (this.state.singleuser === undefined || this.state.singleuser.id === undefined)) {\r\n\r\n            let user = this.props.singleuser;\r\n            this.setState({\r\n                singleuser: user\r\n            });\r\n\r\n        }\r\n        return (\r\n            <div>\r\n                    <Dialog open={true} fullWidth={false} maxWidth=\"md\" aria-labelledby=\"responsive-dialog-title\">\r\n                        <DialogTitle id=\"simple-dialog-title\">Reset password for <strong>{this.props.singleuser ? this.props.singleuser.username : ''}</strong></DialogTitle>\r\n                        {this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{ height: 5 + 'px' }}></div>}\r\n\r\n                        {this.state.singleuser !== undefined ?\r\n\r\n\r\n                            <div>\r\n                                <form onSubmit={this.handleSubmit} autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                                    <TextField\r\n                                        id=\"last-name\"\r\n                                        fullWidth={true}\r\n                                        onChange={this.handleUserFormChange('newPassword')}\r\n                                        label=\"New Password:\"\r\n                                        value={this.state.newPassword ? this.state.newPassword : ''}\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"email-name\"\r\n                                        fullWidth={true}\r\n                                        label=\"Confirm Password\"\r\n                                        onChange={this.handleUserFormChange('confirmPassword')}\r\n                                        value={this.state.confirmPassword ? this.state.confirmPassword : ''}\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        error={this.state.error}\r\n                                        helperText={this.state.error ? 'Must match the previous entry' : ''}\r\n                                        required\r\n                                    />\r\n                                    <DialogActions>\r\n                                        <Link to=\"/app/users\">\r\n                                            <Button color=\"primary\">\r\n                                                Cancel\r\n                                </Button>\r\n                                        </Link>\r\n                                        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                                            Reset\r\n                                        </Button>\r\n                                    </DialogActions>\r\n                                </form>\r\n                            </div>\r\n\r\n                            : ''}\r\n                        {this.props.redirectBack ? this.redirectBack() : ''}\r\n                    </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        singleuser: state.usersReducer.singleuser,\r\n        redirectBack: state.usersReducer.redirectBack,\r\n        loading: state.usersReducer.loading\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchUser, clearUser, resetPasswordUser, resetRedirect\r\n}))(ResetPasswordUserContainer);\r\n\r\n","import axios from 'axios';\r\nimport {getAuthorizationHeader, getCurrentAccessToken, getServerApiURL} from '../../shared/app.properties';\r\n\r\nexport const fetchAllSystemSettingsProps = (payload) => {\r\n    return axios({\r\n        url: getServerApiURL() + '/settings/props/all?access_token=' + getCurrentAccessToken(),\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': getAuthorizationHeader()\r\n        }\r\n    }).then(response => response);\r\n};\r\n\r\nexport const updateSystemSettingsProp = (payload) => {\r\n    return axios({\r\n        url: getServerApiURL() + '/settings/props/update?access_token=' + getCurrentAccessToken() + \"&key=\" + payload.key + \"&val=\" + payload.val,\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': getAuthorizationHeader()\r\n        }\r\n    }).then(response => response);\r\n};\r\n","import React from 'react';\r\nimport {fetchAllSystemSettingsProps, updateSystemSettingsProp} from './settings.repo';\r\nimport {FormControlLabel, Grid, Paper, Switch, Table, TableCell, TableRow, TextField} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport {authorize, handleLogout, hasRole, refreshToken} from '../../shared/app.properties';\r\nimport Redirect from 'react-router/Redirect';\r\n\r\nclass SystemSettingsContainer extends React.Component {\r\n\r\n    unauthorized = false;\r\n\r\n    state = {\r\n        settingsMap: undefined\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.unauthorized = !hasRole('ROLE_ADMINISTRATION');\r\n\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n            refreshToken()\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchAllSettingsProps();\r\n    }\r\n\r\n    fetchAllSettingsProps = () => {\r\n        fetchAllSystemSettingsProps({}).then(res => {\r\n\r\n            this.setState({\r\n                asd: 'asd'\r\n            });\r\n\r\n            var tmpmap = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                tmpmap[res.data[i].key] = res.data[i].value;\r\n            }\r\n            this.setState({\r\n                settingsMap: tmpmap\r\n            });\r\n\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    handleExportEncryptionChange = (event, MAIN_SEARCH_ZIP_ENCRYPT_ENABLED) => {\r\n        var encBool = 'false';\r\n        if (MAIN_SEARCH_ZIP_ENCRYPT_ENABLED) {\r\n            encBool = 'true';   \r\n        }\r\n        var tmpmap = this.state.settingsMap;\r\n        updateSystemSettingsProp({ key: 'MAIN_SEARCH_ZIP_ENCRYPT_ENABLED', val: encBool })\r\n            .then(res => {\r\n                tmpmap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED = res.data.value;\r\n                this.setState({\r\n                    settingsMap: tmpmap\r\n                })\r\n            }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    handleSmsNotificationsEnabledChange = (event, SMS_NOTIFICATIONS_ENABLED) => {\r\n        var encBool = 'false';\r\n        if (SMS_NOTIFICATIONS_ENABLED) {\r\n            encBool = 'true';\r\n        }\r\n        var tmpmap = this.state.settingsMap;\r\n        updateSystemSettingsProp({key: 'SMS_NOTIFICATIONS_ENABLED', val: encBool})\r\n            .then(res => {\r\n                tmpmap.SMS_NOTIFICATIONS_ENABLED = res.data.value;\r\n                this.setState({\r\n                    settingsMap: tmpmap\r\n                })\r\n            }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    handleEmailNotificationsEnabledChange = (event, EMAIL_NOTIFICATIONS_ENABLED) => {\r\n        var encBool = 'false';\r\n        if (EMAIL_NOTIFICATIONS_ENABLED) {\r\n            encBool = 'true';\r\n        }\r\n        var tmpmap = this.state.settingsMap;\r\n        updateSystemSettingsProp({key: 'EMAIL_NOTIFICATIONS_ENABLED', val: encBool})\r\n            .then(res => {\r\n                tmpmap.EMAIL_NOTIFICATIONS_ENABLED = res.data.value;\r\n                this.setState({\r\n                    settingsMap: tmpmap\r\n                })\r\n            }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    handleFormChange = name => event => {\r\n        let tmpmap = this.state.settingsMap;\r\n        updateSystemSettingsProp({key: name, val: event.target.value})\r\n            .then(res => {\r\n                tmpmap[name] = res.data.value;\r\n                this.setState({\r\n                    settingsMap: tmpmap\r\n                })\r\n            }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"my-profile\">\r\n\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                <Redirect to=\"/app/error/unauthorized\"/>\r\n                }\r\n\r\n                <Grid>\r\n                    <Grid xs={6}>\r\n                        <h3 style={{ marginLeft: 30 + 'px' }}>SYSTEM SETTINGS</h3>\r\n\r\n                        <Paper style={{ marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px' }}>\r\n\r\n                            {this.state.settingsMap &&\r\n                                <Table>\r\n                                    <TableRow>\r\n                                        <TableCell>Main search export encrypt enabled</TableCell>\r\n                                        <TableCell>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={this.state.settingsMap &&\r\n                                                            this.state.settingsMap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED &&\r\n                                                            this.state.settingsMap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED == \"true\"}\r\n                                                        onChange={this.handleExportEncryptionChange}\r\n                                                        value=\"MAIN_SEARCH_ZIP_ENCRYPT_ENABLED\"\r\n                                                        color=\"primary\"\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMS notifications enabled</TableCell>\r\n                                        <TableCell>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={this.state.settingsMap &&\r\n                                                        this.state.settingsMap.SMS_NOTIFICATIONS_ENABLED &&\r\n                                                        this.state.settingsMap.SMS_NOTIFICATIONS_ENABLED == \"true\"}\r\n                                                        onChange={this.handleSmsNotificationsEnabledChange}\r\n                                                        value=\"SMS_NOTIFICATIONS_ENABLED\"\r\n                                                        color=\"primary\"\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>Email notifications enabled</TableCell>\r\n                                        <TableCell>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={this.state.settingsMap &&\r\n                                                        this.state.settingsMap.EMAIL_NOTIFICATIONS_ENABLED &&\r\n                                                        this.state.settingsMap.EMAIL_NOTIFICATIONS_ENABLED == \"true\"}\r\n                                                        onChange={this.handleEmailNotificationsEnabledChange}\r\n                                                        value=\"EMAIL_NOTIFICATIONS_ENABLED\"\r\n                                                        color=\"primary\"\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Table>\r\n                            }\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid xs={6}>\r\n                        <h3 style={{marginLeft: 30 + 'px'}}>SMPP PARAMETERS</h3>\r\n                        <Paper style={{marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px'}}>\r\n                            {this.state.settingsMap &&\r\n                            <Table>\r\n                                <TableRow>\r\n                                    <TableCell>SMPP Host</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppHost\"\r\n                                            onChange={this.handleFormChange('SMPP_HOST')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_HOST ? this.state.settingsMap.SMPP_HOST : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>SMPP Port</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppPort\"\r\n                                            onChange={this.handleFormChange('SMPP_PORT')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_PORT ? this.state.settingsMap.SMPP_PORT : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>SMPP Username</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppUsername\"\r\n                                            onChange={this.handleFormChange('SMPP_USERNAME')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_USERNAME ? this.state.settingsMap.SMPP_USERNAME : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>SMPP Password</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppPassword\"\r\n                                            onChange={this.handleFormChange('SMPP_PASSWORD')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_PASSWORD ? this.state.settingsMap.SMPP_PASSWORD : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>MSISDN</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppMsisdn\"\r\n                                            onChange={this.handleFormChange('SMPP_MSISDN')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_MSISDN ? this.state.settingsMap.SMPP_MSISDN : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </Table>\r\n                            }\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid xs={6}>\r\n                        <h3 style={{marginLeft: 30 + 'px'}}>SMTP PARAMETERS</h3>\r\n                        <Paper style={{marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px'}}>\r\n                            {this.state.settingsMap &&\r\n                            <div>\r\n                                <Table>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Host</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpHost\"\r\n                                                onChange={this.handleFormChange('SMTP_HOST')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_HOST ? this.state.settingsMap.SMTP_HOST : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Port</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpPort\"\r\n                                                onChange={this.handleFormChange('SMTP_PORT')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_PORT ? this.state.settingsMap.SMTP_PORT : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Username</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpUsername\"\r\n                                                onChange={this.handleFormChange('SMTP_USERNAME')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_USERNAME ? this.state.settingsMap.SMTP_USERNAME : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Password</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpPassword\"\r\n                                                onChange={this.handleFormChange('SMTP_PASSWORD')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_PASSWORD ? this.state.settingsMap.SMTP_PASSWORD : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Sender address</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpSender\"\r\n                                                onChange={this.handleFormChange('SMTP_SENDER_ADDRESS')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_SENDER_ADDRESS ? this.state.settingsMap.SMTP_SENDER_ADDRESS : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Table>\r\n                            </div>\r\n                            }\r\n                        </Paper>\r\n                        <br/><br/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allusersdata: undefined\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n\r\n}))(SystemSettingsContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { getBooksAndRecords } from '../module/Folders/folder.repo';\r\nimport {Table, TableHead, TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { dispatchAction } from '../..';\r\n\r\n\r\n\r\n\r\n\r\nexport default class ScansContainer extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props)\r\n      this.state ={\r\n        rowsPerPages: 5,\r\n        data: {},\r\n        formdata: {\r\n            registerName: undefined,\r\n            registerYear: undefined,\r\n            registerType: undefined\r\n        },\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n      }\r\n      \r\n    }\r\n    handleFormInput = name => event => {      \r\n      var formdata = this.state.formdata;\r\n      formdata[name] = event.target.value;\r\n        this.setState({\r\n          formdata: formdata\r\n        });\r\n    }\r\n    onChangeRowsPerPage = (event) => {\r\n      this.setState({\r\n          rowsPerPages: event.target.value\r\n      })\r\n      console.log(this.state.rowsPerPages)\r\n      this.listBooksAndRecords(this.state.formdata.registerType,this.state.formdata.registerYear,\r\n        this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n        this.state.dateTo.toISOString(),0,event.target.value);\r\n    }\r\n    handleChangePage = (event, page) => {\r\n             \r\n      if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n        this.listBooksAndRecords(this.state.formdata.registerType,this.state.formdata.registerYear,\r\n          this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n          this.state.dateTo.toISOString(),page,this.state.data.data.size);\r\n      }else{\r\n        this.listBooksAndRecords(page, 5);\r\n      }\r\n  }\r\n    handleChangeDateField = name => event => {\r\n        this.setState({\r\n            [name]: event\r\n        });\r\n    }\r\n    formatDate = (dateString) => {\r\n      var newDateStringArr = dateString.split('T');\r\n      newDateStringArr[1] = newDateStringArr[1].split('.000Z')[0];\r\n      return newDateStringArr[0] + ' ' + newDateStringArr[1];\r\n  }\r\n    handleStatus(props){\r\n      if(props==1)\r\n      return \"Венчани\";\r\n      else if(props==0)\r\n      return \"Родени\";\r\n      else if(props==2)\r\n      return \"Умрени\";\r\n  }\r\n    listBooksAndRecords = (type,year,name,dateFrom,dateTo,page, size) => {\r\n      // console.log(this.state.formdata.registerName);\r\n      // console.log(this.state.formdata.registerType);\r\n      // console.log(this.state.formdata.registerYear);\r\n      dispatchAction({\r\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n      });\r\n      getBooksAndRecords(type,year,name,dateFrom,dateTo,page,size).then(response => {\r\n        this.setState({\r\n          data: response\r\n        },\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n        })\r\n        );\r\n        console.log(response);\r\n      }).catch(error => {\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n        });\r\n        console.log(error);\r\n      });\r\n    }\r\n  \r\n  render(){\r\n      return (\r\n          <form style={{marginLeft: '30px'}}><div><TextField\r\n      id=\"standard-input\"\r\n      label=\"Name Register Book\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      // onChange={handleChange('name')}\r\n      onChange={this.handleFormInput('registerName')}\r\n  \r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n    />\r\n    <TextField\r\n      id=\"standard-input\"\r\n      label=\"Year\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      onChange={this.handleFormInput('registerYear')}\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n    />\r\n    <TextField\r\n      id=\"standard-input\"\r\n      label=\"Type Register Book\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n      onChange={this.handleFormInput('registerType')}\r\n    />\r\n    <Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 50 + \"px\", marginLeft: 20 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    onClick={this.listBooksAndRecords.bind(this,this.state.formdata.registerType,this.state.formdata.registerYear,\r\n      this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n      this.state.dateTo.toISOString(),0,5)}\r\n      disabled={!this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear}\r\n\r\n    >\r\n        Search</Button>\r\n        <Link to={'/app/scans/missingFiles'} style={{textDecoration: 'none', color: 'white'}}>\r\n        <Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 50+\"px\",marginLeft: 100 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    >\r\n        Missing Scans</Button>\r\n        </Link>\r\n        </div><div>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                   <DatePicker\r\n                                       id=\"standard-uncontrolled\"\r\n                                       value={this.state.dateFrom ? this.state.dateFrom : ''}\r\n                                       onChange={this.handleChangeDateField('dateFrom')}\r\n                                       label=\"Date From\"\r\n                                       keyboard\r\n                                       format=\"dd-MM-yyyy\"\r\n                                       mask={value =>\r\n                                           value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : []\r\n                                       }\r\n                                       margin=\"normal\"\r\n                                       required\r\n                                   />\r\n                                   <DatePicker\r\n                                       id=\"standard-uncontrolled\"\r\n                                       value={this.state.dateTo ? this.state.dateTo : ''}\r\n                                       onChange={this.handleChangeDateField('dateTo')}\r\n                                       label=\"Date To\"\r\n                                       keyboard\r\n                                       style={{marginLeft:20+\"px\"}}\r\n                                       format=\"dd-MM-yyyy\"\r\n                                       mask={value =>\r\n                                           value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : []\r\n                                       }\r\n                                       margin=\"normal\"\r\n                                       required\r\n                                   />\r\n                               </MuiPickersUtilsProvider>\r\n          \r\n       </div>\r\n        <div>\r\n        <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                      Year\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Type\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  Folder path\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Number of records\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.registerYear}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {this.handleStatus(item.registerType)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <b>{item.pathFolder ? item.pathFolder : 'No folder'}</b>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.numberOfRecords ? item.numberOfRecords : '0'}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n        </div>\r\n        </form>\r\n      )\r\n  }\r\n  }","import axios from 'axios';\r\nimport {getServerApiURL} from '../../shared/app.properties';\r\n\r\nconst SERVER_API_URL                = getServerApiURL();\r\n\r\nexport function getByDate(date,page,size){\r\n    return axios.get(SERVER_API_URL+`/registerbooks/by_date?date=${date}&page=${page}&size=${size}`);\r\n}\r\nexport function getByDateReport(month,year){\r\n    return axios.get(SERVER_API_URL+`/registerbooks/reports/by_date?month=${month}&year=${year}`);\r\n}\r\nexport function getAllScans(){\r\n    return axios.get(SERVER_API_URL+`/registerbooks/records`);\r\n\r\n}\r\n","import React from 'react';\r\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {Button,Fab,GridList,Grid} from '@material-ui/core';\r\nimport { isThisSecond } from 'date-fns/esm';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllScans } from './reports.repo';\r\n\r\n\r\nexport default class ReportsContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          rowsPerPages: 5,\r\n          data: {},\r\n          formdata: {},\r\n          dateFrom: new Date(),\r\n          dateTo: new Date(),\r\n          showMyComponent: undefined,\r\n          clickedDate: new Date(),\r\n          show: false,\r\n          showTotal:true\r\n        }\r\n        \r\n      }\r\n     getAllScans = () => {\r\n        \r\n          getAllScans().then(response => {\r\n            this.setState({\r\n              show:true,\r\n              showTotal:false,\r\n            },\r\n            );\r\n            console.log(response);\r\n          }).catch(error => {\r\n            console.log(error);\r\n          });\r\n     }\r\n      handleChangeDateField = name => event => {\r\n        this.setState({\r\n            [name]: event\r\n        });\r\n    }\r\n    changeVisibility = state => {\r\n        this.setState({\r\n            showMyComponent: true\r\n        })\r\n    }\r\n    changeShowTotal()\r\n    {\r\n        this.setState({\r\n            showTotal:true,\r\n            show:false\r\n        })\r\n    }\r\n     formatDate(n) {\r\n        return (n < 10) ? (\"0\" + n) : n;\r\n    }\r\n    formatDatesButtons(dateFrom,dateTo){\r\n        var dateMoving;\r\n        dateMoving=new Date(dateFrom);\r\n        let fabs = []\r\n        while(dateMoving<=dateTo)\r\n          {\r\n              fabs.push(\r\n                <Link to={'/app/reports/daily/'+dateMoving.toISOString()} style={{textDecoration: 'none', color: 'white'}}>\r\n                <Fab color=\"secondary\" aria-label=\"add\" style={{marginLeft: 5 +\"px\",marginTop: 5+\"px\"}}\r\n                onClick=\"\"\r\n                >\r\n                    {this.formatDate(dateMoving.getDate()) +\".\" + this.formatDate(dateMoving.getMonth()+1)}\r\n                </Fab> \r\n                </Link>\r\n              )\r\n              dateMoving.setUTCDate(dateMoving.getUTCDate() + 1);\r\n          }\r\n          return fabs;  \r\n    }\r\n    render(){\r\n        return (\r\n            <form style={{marginTop:50+\"px\",marginLeft: '30px'}}>\r\n                <span style={{color:\"gray\"}}><b>Generate report for all registry books</b></span>\r\n                <div style={{marginBottom: 20 + \"px\"}}>\r\n             <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                   <DatePicker\r\n                                       id=\"standard-uncontrolled\"\r\n                                       value={this.state.dateFrom ? this.state.dateFrom : ''}\r\n                                       onChange={this.handleChangeDateField('dateFrom')}\r\n                                       label=\"Date From\"\r\n                                       keyboard\r\n                                       format=\"dd-MM-yyyy\"\r\n                                       mask={value =>\r\n                                           value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : []\r\n                                       }\r\n                                       margin=\"normal\"\r\n                                       required\r\n                                   />\r\n                                   <DatePicker\r\n                                       id=\"standard-uncontrolled\"\r\n                                       value={this.state.dateTo ? this.state.dateTo : ''}\r\n                                       onChange={this.handleChangeDateField('dateTo')}\r\n                                       label=\"Date To\"\r\n                                       keyboard\r\n                                       style={{marginLeft:20+\"px\"}}\r\n                                       format=\"dd-MM-yyyy\"\r\n                                       mask={value =>\r\n                                           value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : []\r\n                                       }\r\n                                       margin=\"normal\"\r\n                                       required\r\n                                   />\r\n                               </MuiPickersUtilsProvider>\r\n                               \r\n                               <Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 10+\"px\",marginLeft: 30 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    onClick={this.changeVisibility}\r\n    >\r\n        Search</Button>\r\n\r\n        {!this.state.show && this.state.showTotal &&<Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 10+\"px\",marginLeft: 250 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    onClick={this.getAllScans}\r\n    >\r\n        Total scans</Button> }\r\n\r\n        {this.state.show && <Link to={'/reports/ALL_BOOKS_TOTAL_SCANS-REPORT.xls'} target=\"_blank\" download><Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 10+\"px\",marginLeft: 250 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    onClick={this.changeShowTotal.bind(this)}\r\n    >\r\n        Download</Button> </Link>}\r\n\r\n        <Link to={'/app/reports/generate/monthly'} style={{textDecoration: 'none', color: 'white'}}>    \r\n        <Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 10+\"px\",marginLeft: 15 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    >\r\n       Monthly Report</Button>\r\n       </Link>\r\n    </div>\r\n    <div style={{width:55+\"%\"}}>\r\n    <div style={this.state.showMyComponent ? {} : { display: 'none' }}>\r\n    {this.formatDatesButtons(this.state.dateFrom,this.state.dateTo)}\r\n    </div>\r\n    </div>\r\n\r\n            \r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Dialog,DialogTitle,Grid,DialogActions,Button,Table,TableHead,TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { getByDate } from './reports.repo';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { dispatchAction } from '../../..';\r\n\r\n\r\nexport default class ReportsIndividualContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          rowsPerPages: 5,\r\n          data: {},\r\n          formdata: {},\r\n          loading: true\r\n        }\r\n        \r\n      }\r\n      componentWillMount(){\r\n         this.listBooksAndRecords(this.props.match.params.date,0,5)\r\n      }\r\n    formatDate = (dateString) => {\r\n        var newDateStringArr = dateString.split('T')[0];\r\n        var dateYear=newDateStringArr.split('-')[0];\r\n        var dateMonth=newDateStringArr.split('-')[1];\r\n        var dateDay=newDateStringArr.split('-')[2];\r\n        return dateDay+\" \"+dateMonth+\" \"+dateYear;\r\n        }\r\n        handleChangePage = (event, page) => {\r\n             \r\n            if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n              this.listBooksAndRecords(this.props.match.params.date,page,this.state.data.data.size);\r\n            }else{\r\n              this.listBooksAndRecords(this.props.match.params.date,page, 5);\r\n            }\r\n        }\r\n        onChangeRowsPerPage = (event) => {\r\n            this.setState({\r\n                rowsPerPages: event.target.value\r\n            })\r\n            this.listBooksAndRecords(this.props.match.params.date,0,event.target.value);\r\n        }\r\n\r\n    listBooksAndRecords = (date,page,size) => {\r\n            dispatchAction({\r\n              type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n            });\r\n            getByDate(date,page,size).then(response => {\r\n              this.setState({\r\n                data: response,\r\n                loading:false\r\n              },\r\n              dispatchAction({\r\n                type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n              })\r\n              );\r\n              console.log(response);\r\n            }).catch(error => {\r\n              dispatchAction({\r\n                type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n              });\r\n              console.log(error);\r\n            });\r\n          }   \r\n    \r\n    render(){\r\n        return (\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Report for date \"+this.formatDate(this.props.match.params.date)}</DialogTitle>\r\n              <Grid container>\r\n              {this.state.loading && <div  style={{position: 'absolute',marginLeft:'420px',marginTop:'60px'}}>{<CircularProgress size={50} color=\"secondary\" />}</div>}\r\n\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Number of records on the date\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.nameRegisterBook}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.numberOfRecords}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n                  \r\n              </Grid>\r\n            <DialogActions> \r\n            <Link to=\"/app/reports\" style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button onClick=\"\" color=\"secondary\" variant=\"outlined\">\r\n                  Exit\r\n                </Button>\r\n            </Link>       \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Button,Dialog,DialogTitle,Grid,DialogActions} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport MonthYearPicker from 'react-month-year-picker';\r\nimport { Page, Text, View, Document, StyleSheet,PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { getByDateReport } from './reports.repo';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { dispatchAction } from '../../..';\r\n\r\n\r\n\r\n\r\nexport default class MonthlyReportContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          show:false,\r\n          data: {},\r\n          formdata: {},\r\n          month: new Date().getMonth(),\r\n          year: new Date().getFullYear(),\r\n          loading:false\r\n        }\r\n        \r\n      }\r\n      listMonthlyReport = (month,year) => {\r\n        dispatchAction({\r\n          type: \"CIRCULAR_PROGRESS_SHOW\"\r\n        });\r\n        this.setState({\r\n          loading:true\r\n        })\r\n        getByDateReport(month,year).then(response => {\r\n          this.setState({\r\n            data: response,\r\n            show:true,\r\n            loading:false\r\n          },\r\n          dispatchAction({\r\n            type: \"CIRCULAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          console.log(response);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }   \r\n\r\n    render(){\r\n        return (\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Monthly Report\"}</DialogTitle>\r\n              <Grid container>\r\n            <MonthYearPicker\r\n            selectedMonth={this.state.month}\r\n            selectedYear={this.state.year}\r\n            minYear={2000}\r\n            maxYear={2030}\r\n            onChangeYear={year => this.setState({ year: year })}\r\n            onChangeMonth={month => this.setState({ month: month })}\r\n            />\r\n            {this.state.loading && <div  style={{position: 'absolute', paddingLeft:'410px',paddingTop:'200px',width:'100%'}}>{<CircularProgress size={150} color=\"secondary\" />}</div>}\r\n\r\n              </Grid>\r\n            \r\n            <DialogActions>\r\n            {/* <a href={'C:\\Users\\User\\Desktop\\reports'+(this.state.month+1)+'-'+this.state.year+'-REPORT.xls'} download>Download</a> */}\r\n              {this.state.show && <Link to={'/reports/'+this.state.month+'-'+this.state.year+'-REPORT.xls'} target=\"_blank\" download>\r\n                <Button color=\"secondary\" variant=\"contained\">Download\r\n                  </Button>\r\n                  </Link>\r\n              \r\n              }\r\n            {/* <Link to={'/app/reports'} style={{textDecoration: 'none', color: 'white'}}> */}\r\n\r\n                <Button color=\"secondary\" variant=\"contained\"\r\n                onClick={this.listMonthlyReport.bind(this,this.state.month,this.state.year)}>\r\n                  {console.log(this.state.show)}\r\n                  Generate\r\n                </Button>\r\n            {/* </Link>     */}\r\n            <Link to={'/app/reports'} style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button color=\"secondary\" variant=\"outlined\">\r\n                  Exit\r\n                </Button>\r\n            </Link>       \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Dialog,DialogTitle,Grid,TextField,DialogActions,Button, Select, Input, MenuItem,Divider,Typography} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom';\r\nimport { listAllFolders } from '../module/Folders/folder.repo';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {getMissingfiles} from '../module/Folders/folder.repo';\r\n\r\n\r\nexport default class ScansMissingFilesContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          formdata: {},\r\n          data: {},\r\n          folders: [],\r\n          responseMissing: []\r\n        }\r\n      }\r\n      componentWillMount(){\r\n          this.getAllFoders();\r\n      }\r\n      handleFormInput = name => event => {\r\n        var formdata = this.state.data;\r\n        formdata[name] = event.target.value;\r\n          this.setState({\r\n            data: formdata\r\n          });\r\n      }\r\n      getAllFoders = () => {\r\n        listAllFolders().then(response => {\r\n          this.setState({\r\n            folders: response.data,\r\n          });\r\n          console.log(response);\r\n        }).catch(error =>{\r\n          console.log(error);\r\n        });\r\n      }\r\n      searchForMissingFiles = (pathFolder,totalFiles) =>{\r\n        getMissingfiles(pathFolder,totalFiles).then(response =>\r\n            {\r\n                this.setState({\r\n                    responseMissing: response.data,\r\n                });\r\n            }).catch(error =>{\r\n                console.log(error);\r\n            });\r\n      }\r\n    render(){\r\n        return(\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Search for missing files\"}</DialogTitle>\r\n              <Grid container>\r\n                  <div style={{marginLeft:'25px'}}>\r\n                  <span style={{height:15+\"px\",display:'block'}}>Please choose folder</span>\r\n              <Select\r\n                                        value={this.state.data.pathFolder}\r\n                                       onChange={this.handleFormInput('pathFolder')}\r\n                                       displayEmpty\r\n                                       style={{marginTop:\"10px\",width:'400px',float:\"left\"}}\r\n                                       variant=\"outlined\"\r\n                                   >\r\n                                      \r\n                                       {\r\n                                            this.state.folders && this.state.folders && this.state.folders &&\r\n                                            this.state.folders.map(e => (\r\n                                               <MenuItem key={e} value={e}>{e}</MenuItem>\r\n                                           ))\r\n                                       }\r\n                                   </Select>\r\n        <span style={{height:20+\"px\",display:'block',marginTop:'55px'}}>Please insert the correct amount of scans in the selected folder</span>\r\n        <TextField\r\n        id=\"total-files\"\r\n        label=\"Total files\"\r\n        variant=\"outlined\"\r\n        margin=\"dense\"\r\n        maxWidth={true}\r\n        style={{ marginTop:'10px',borderColor: 'red',display:'block'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        required\r\n        onChange={this.handleFormInput('totalFiles')}\r\n        variant=\"outlined\"\r\n      />       \r\n                    <Divider style={{ marginTop: '30px'}}/>\r\n                    <Typography variant=\"h6\">Result:</Typography>\r\n\r\n\r\n      <List style={{display:'block'}}> \r\n      {\r\n            this.state.responseMissing  && this.state.responseMissing &&\r\n            this.state.responseMissing.map(e => (\r\n            <ListItem>\r\n               <ListItemText\r\n                primary={e}\r\n                />\r\n              </ListItem>\r\n            ))\r\n            }\r\n            <ListItem>Total missing: {this.state.responseMissing && this.state.responseMissing.length}</ListItem>\r\n          </List>\r\n\r\n         </div>\r\n         \r\n           </Grid>\r\n            <DialogActions>\r\n            <Button onClick={this.searchForMissingFiles.bind(this,this.state.data.pathFolder,this.state.data.totalFiles)}\r\n             color=\"secondary\" variant=\"contained\">\r\n                    Search\r\n                </Button>\r\n            <Link to=\"/app/scans\" style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button onClick=\"\" color=\"secondary\" variant=\"outlined\">\r\n                    Cancel\r\n                </Button>\r\n            </Link>  \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/healthy-diet.b94a5c75.jpg\";","export default __webpack_public_path__ + \"static/media/weight-loss.6787d234.png\";","export default __webpack_public_path__ + \"static/media/weight-gain.8fe9249e.png\";","export default __webpack_public_path__ + \"static/media/sports.bb5e96db.png\";","export default __webpack_public_path__ + \"static/media/healthy.9530642f.jpg\";","export default __webpack_public_path__ + \"static/media/cloud1.d1562095.png\";","import React from 'react';\r\nimport logo from '../../Logo/tagama-png.png';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Badge, Button, CssBaseline, IconButton, List, ListItem, Menu, MenuItem, Paper, Select, TextField, } from \"@material-ui/core\";\r\nimport { AppBar, Toolbar, Typography, } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nexport function Navbar(props) {\r\n    const theme = createMuiTheme({\r\n        typography: {\r\n            fontFamily: [\r\n                '-apple-system',\r\n                'BlinkMacSystemFont',\r\n                '\"Segoe UI\"',\r\n                'Roboto',\r\n                '\"Helvetica Neue\"',\r\n                'Arial',\r\n                'sans-serif',\r\n                '\"Apple Color Emoji\"',\r\n                '\"Segoe UI Emoji\"',\r\n                '\"Segoe UI Symbol\"',\r\n            ].join(','),\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" style={{ backgroundColor: '#ebeee7' }}>\r\n                <Toolbar>\r\n                    <img src={logo} style={{ height: \"5%\", width: \"5%\" }} />\r\n                    <div>\r\n                        <IconButton >\r\n                            <Badge\r\n                                badgeContent={0}\r\n                                color=\"#FF7619\">\r\n                            </Badge>\r\n                            <a href=\"https://www.facebook.com/tagamatanja\" style={{ color: 'inherit' }}>\r\n                                <FacebookIcon />\r\n                            </a>\r\n                        </IconButton>\r\n                        <IconButton\r\n\r\n                        >\r\n                            <a href=\"https://www.instagram.com/tagamatanja\" style={{ color: 'inherit' }}>\r\n                                <InstagramIcon />\r\n                            </a>\r\n                        </IconButton>\r\n                        <IconButton\r\n\r\n                        >\r\n                            <a href={\"mailto:\" + \"tagama4@yahoo.com\"} style={{ color: 'inherit' }}>\r\n                                <MailOutlineIcon />\r\n                            </a>\r\n                        </IconButton>\r\n                        <a href=\"tel:+38970332752\" style={{ fontSize: '120%', color: '#6c6d6a' }}>+38970332752</a>\r\n                    </div>\r\n                    <div style={{ position: \"absolute\", right: 25 + 'px' }} className=\"pull-right\">\r\n                        <div >\r\n                            <ThemeProvider theme={theme}>\r\n                                <List className=\"listFont\" style={{ display: 'flex', flexDirection: 'row', padding: 0 }}>\r\n                                    <ListItem>\r\n                                        <Link to=\"/home\">\r\n                                            <Button>\r\n                                                <Typography variant=\"h6\" style={{ textAlign: 'center', color: \"#4a4a49\" }} ><b>Home</b></Typography>\r\n                                            </Button>\r\n                                        </Link>\r\n\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <Link to=\"/about_us\">\r\n                                            <Button>\r\n                                                <Typography noWrap variant=\"h6\" style={{ textAlign: 'center', color: \"#4a4a49\" }}><b>About us</b></Typography></Button></Link>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <Link to=\"/contact\">\r\n                                            <Button>\r\n                                                <Typography variant=\"h6\" style={{ textAlign: 'center', color: \"#4a4a49\" }} ><b>Contact</b></Typography>\r\n                                            </Button></Link>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <Link to=\"/faq\">\r\n                                            <Button>\r\n                                                <Typography variant=\"h6\" style={{ textAlign: 'center', color: \"#4a4a49\" }} ><b>FAQ</b></Typography>\r\n                                            </Button></Link>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </ThemeProvider>\r\n                        </div>\r\n                    </div>\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n\r\n        </div>\r\n\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/background2.4d28ca75.png\";","export default __webpack_public_path__ + \"static/media/background3.10eb39ca.png\";","export default __webpack_public_path__ + \"static/media/lastBackground.f052973c.png\";","export default __webpack_public_path__ + \"static/media/card1.3cc38bd0.png\";","export default __webpack_public_path__ + \"static/media/card2.4822faa4.png\";","export default __webpack_public_path__ + \"static/media/card3.7838bc91.png\";","import { Box, Button, Card, createMuiTheme, Grid, Paper, Typography, withStyles } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport backgroundPic from '../../../Logo/healthy-diet.jpg'\r\nimport weightLoss from '../../../Logo/weight-loss.png'\r\nimport weightGain from '../../../Logo/weight-gain.png'\r\nimport sports from '../../../Logo/sports.png'\r\nimport healthy from '../../../Logo/healthy.jpg'\r\nimport cloud from '../../../Logo/cloud1.png'\r\nimport { Navbar } from '../../shared/Navbar';\r\nimport backgroundFirst from '../../../Logo/background2.png'\r\nimport backgroundSecond from '../../../Logo/background3.png'\r\nimport last from '../../../Logo/lastBackground.png'\r\nimport cardOne from '../../../Logo/card1.png'\r\nimport cardTwo from '../../../Logo/card2.png'\r\nimport cardThree from '../../../Logo/card3.png'\r\nimport './home.css'\r\nimport { spacing } from '@material-ui/system';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nexport default class HomeContainer extends React.Component {\r\n\r\n  theme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: [\r\n        'Chilanka',\r\n        'cursive',\r\n      ].join(','),\r\n    },\r\n  });\r\n  StyledButton = withStyles({\r\n    root: {\r\n      background: '#15c39a',\r\n      borderRadius: 30,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      fontFamily: 'Montserrat,Helvetica,Arial,Lucida,sans-serif!important',\r\n      fontWeight: 500,\r\n      textTransform: 'uppercase',\r\n      fontSize: '18px',\r\n      letterSpacing: '2px',\r\n      lineHeight: '1.5em',\r\n      '&:hover': {\r\n        backgroundColor: '#14a382',\r\n        borderColor: '#14a382',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n  })(Button);\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div style={{ marginTop: '90px', width: '100%', backgroundColor: 'white' }}>\r\n        <Navbar></Navbar>\r\n        <div style={{ backgroundImage: `url(${backgroundFirst})`, width: '100%', height: '110vh', backgroundSize: 'cover', textAlign: 'center' }}>\r\n          <div style={{ paddingTop: '14%' }}>\r\n            <h2 className=\"first-intro\" style={{ color: '#4a4a49' }}>Welcome to Tagama</h2>\r\n            <h2 className=\"first-intro-sub\" style={{ color: '#4a4a49' }}>by Tanja Turundzieva</h2>\r\n            <h2 className=\"second-intro\" style={{ color: '#4a4a49' }}>Maintaining healthy habits and positive lifestyle since 1995</h2>\r\n            <Link to=\"/contact\">\r\n              <this.StyledButton className=\"second-intro\" style={{ marginTop: '0px' }}>GET IN CONTACT</this.StyledButton>\r\n            </Link>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div style={{ backgroundImage: `url(${backgroundSecond})`, width: '100%', height: '110vh', backgroundSize: 'cover', textAlign: 'center', position: 'relative' }}>\r\n          <div style={{ marginTop: '24%', marginLeft: '30%', position: 'absolute' }}>\r\n            <Paper elevation={3} style={{ width: '319px', height: '393px', backgroundImage: `url(${cardOne})`, display: 'inline-block', marginRight: '25px' }} >\r\n              <h2 className=\"headlines\" style={{ paddingTop: '40%', color: \"#4a4a49\" }}>Губење на вишок килограми</h2>{/*Weight loss */}\r\n              <Box m={2} style={{ fontSize: '18px', fontFamily: 'Open Sans,Arial,sans-serif' }}>\r\n                Персонализиран индивидуален режим на исхрана базиран на анамнеза, крвна анализа и секојдневни индивидуални консултации.\r\n              </Box>\r\n            </Paper>\r\n            <Paper elevation={3} style={{ width: '316px', height: '393px', backgroundImage: `url(${cardTwo})`, display: 'inline-block', marginRight: '25px' }} >\r\n              <h2 className=\"headlines\" style={{ paddingTop: '40%', color: \"#4a4a49\" }}>Одржување на здравје</h2> {/*Health Maintanence */}\r\n              <Box m={2} style={{ fontSize: '18px', fontFamily: 'Open Sans,Arial,sans-serif' }}>\r\n                Детален преглед низ здравствените проблеми со цел подобрување на целокупната здравствена состојба. Постојан индивидуален пристап кон решавање кон проблемот.\r\n\r\n              </Box>\r\n            </Paper>\r\n            <Paper elevation={3} style={{ width: '310px', height: '393px', backgroundImage: `url(${cardThree})`, display: 'inline-block' }} >\r\n              <h2 className=\"headlines\" style={{ paddingTop: '40%', color: \"#4a4a49\" }}>Менаџмент на здрав начин на живот</h2> {/*Lifestyle Management */}\r\n              <Box m={2} style={{ fontSize: '18px', fontFamily: 'Open Sans,Arial,sans-serif' }}>\r\n                Промена на лошите навики кон храната со цел целокупно подобрување на начинот на живот. Со заеднички сили до посакуваното здравје и начин на живот.\r\n              </Box>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <div style={{ backgroundImage: `url(${last})`, width: '100%', height: '42vh', backgroundSize: 'cover', textAlign: 'center', position: 'relative', marginTop: '-1%' }}>\r\n          <div>\r\n            <h2 className=\"first-intro\" style={{ color: '#4a4a49' }}>Start today!</h2>\r\n            <div >\r\n              <h2 className=\"emails\" style={{ color: '#4a4a49' }}>Making a decision is the first step</h2>\r\n              <h2 className=\"emails\" style={{ color: '#4a4a49' }}>towards change!</h2>\r\n              <Link to=\"/contact\">\r\n                <this.StyledButton style={{\r\n                  marginTop: '0px', fontFamily: 'Montserrat,Helvetica,Arial,Lucida,sans-serif', fontWeight: '500', textTransform: 'uppercase',\r\n                  fontSize: '21px', letterSpacing: '3px', lineHeight: '1.5em'\r\n                }}>START THE CHANGE FROM TODAY</this.StyledButton>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ height: '30px' }}>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/about_us_pic.cde96a2d.jpg\";","export default __webpack_public_path__ + \"static/media/left.bd7c1b5c.png\";","export default __webpack_public_path__ + \"static/media/back.d9d7b3ca.png\";","import { Button, Container, Grid, Paper, withStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Navbar } from '../../shared/Navbar'\r\nimport aboutUs from '../../../Logo/about_us_pic.jpg'\r\nimport left from '../../../Logo/left.png'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport { Link } from 'react-router-dom'\r\nimport back from '../../../Logo/back.png'\r\n\r\n\r\nexport default class aboutUsContainer extends React.Component {\r\n\r\n    StyledButton = withStyles({\r\n        root: {\r\n            background: '#6dce7f',\r\n            borderRadius: 30,\r\n            border: 0,\r\n            color: 'white',\r\n            height: 48,\r\n            padding: '0 30px',\r\n            fontFamily: 'Montserrat,Helvetica,Arial,Lucida,sans-serif!important',\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            fontSize: '18px',\r\n            letterSpacing: '2px',\r\n            lineHeight: '1.5em',\r\n            '&:hover': {\r\n                backgroundColor: '#6dab79',\r\n                borderColor: '#6dab79',\r\n                boxShadow: 'none',\r\n            },\r\n        },\r\n        label: {\r\n            textTransform: 'capitalize',\r\n        },\r\n    })(Button);\r\n    render() {\r\n        return (\r\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\" style={{\r\n                marginTop: '7%'\r\n            }}>\r\n                <Navbar></Navbar>\r\n                <Grid item xs={6} style={{}}>\r\n                    <img style={{ float: 'left' }} src={left}></img>\r\n                    <div style={{ marginTop: '15%', width: '100%', marginLeft: '20%' }}>\r\n                        <h2 style={{ fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: '700', fontSize: '40px', marginBottom: '10px' }}>\r\n                            My Story\r\n                        </h2>\r\n                        <h3 style={{ fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: '700', fontSize: '25px', marginTop: '0px', color: '#6dce7f' }}>\r\n                            Meet Tanja Turundzieva, Professional Nutricionist\r\n                        </h3>\r\n                        <p style={{ fontWeight: '500', color: '#999', fontFamily: 'Open Sans,Arial,sans-serif', fontSize: '19px' }}>\r\n                            Со повеќе од 25 години во нутриционизмот, имам постигнато големи успеси во однос на намалување или зголемување на килограмите, решавање на\r\n                            здравствени проблеми, подготовка на персонализирани спортски режими и овозможување на режими за исхрана на доилки и трудници. Еден од рекордите на симнати килограми\r\n                            од еден маж е 128кг, додека од една жена 87кг и од дете 45кг. Многу регулирани здравствени проблеми и победени битки со карцином. Заедно ќе движиме кон посакуваната\r\n                            цел, тимската работа секогаш победува. Сметам дека нутриционизмот ќе е идната најважна наука во светот. Храната е лек или уништувач на нашето здравје. Како ќе се храниме така ќе живееме.\r\n                        </p>\r\n                        <a href=\"https://www.facebook.com/tagamatanja\">\r\n                            <FacebookIcon style={{ color: '#6dce7f', width: '4%', height: '4%' }} />\r\n                        </a>\r\n                        <Link to=\"/contact\">\r\n                            <this.StyledButton className=\"second-intro\" style={{ marginLeft: '3%', marginTop: '-3%' }}>JOIN ME</this.StyledButton>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </Grid>\r\n                <Grid item xs={6} style={{ textAlign: 'center' }}>\r\n                    <img src={aboutUs} style={{ maxWidth: '60%', height: 'auto' }}></img>\r\n                </Grid>\r\n                <div style={{ backgroundImage: `url(${back})`, width: '100%', height: '40vh', backgroundSize: 'cover', textAlign: 'center' }} >\r\n\r\n                </div>\r\n            </Grid >\r\n\r\n        )\r\n    }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/slika1edit.60f82879.jpg\";","import { Grid, Paper, Typography, TextField, withStyles, Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport backgroundPic from '../../../Logo/slika1edit.jpg'\r\nimport { Navbar } from '../../shared/Navbar';\r\nimport emailjs from 'emailjs-com';\r\nimport './contact.css';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { CountryDropdown, CountryRegionData } from 'react-country-region-selector';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/material.css'\r\n\r\nexport default class contactContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      formdata: {},\r\n      data: {}\r\n    }\r\n  }\r\n\r\n  selectCountry(val) {\r\n    var formdata = this.state.data;\r\n    formdata[\"country\"] = val;\r\n    this.setState({\r\n      data: formdata\r\n    });\r\n  }\r\n  handleFormInput = name => event => {\r\n    var formdata = this.state.data;\r\n    formdata[name] = event.target.value;\r\n    this.setState({\r\n      data: formdata\r\n    });\r\n  }\r\n  sendEmail = () => {\r\n    const templateParams = {\r\n      name: this.state.data.name,\r\n      number: this.state.data.number,\r\n      email: this.state.data.email,\r\n      place: this.state.data.place,\r\n      message: this.state.data.message\r\n    };\r\n    emailjs.send('service_2hxvcm6', 'template_bmy29ke', templateParams, 'user_xKoRQkVDVTUKokzzNiLy9')\r\n      .then((response) => {\r\n        console.log('SUCCESS!', response.status, response.text);\r\n      }, (err) => {\r\n        console.log('FAILED...', err);\r\n      });\r\n  }\r\n  StyledButton = withStyles({\r\n    root: {\r\n      background: '#6dce7f',\r\n      borderRadius: 30,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      fontFamily: 'Montserrat,Helvetica,Arial,Lucida,sans-serif!important',\r\n      fontWeight: 500,\r\n      textTransform: 'uppercase',\r\n      fontSize: '18px',\r\n      letterSpacing: '2px',\r\n      lineHeight: '1.5em',\r\n      '&:hover': {\r\n        backgroundColor: '#6dab79',\r\n        borderColor: '#6dab79',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n  })(Button);\r\n  // StyledButton = withStyles({\r\n  //     root: {\r\n  //       background: 'linear-gradient(45deg, #6dce7f 7%, #05481a 96%)',\r\n  //       borderRadius: 3,\r\n  //       border: 0,\r\n  //       color: 'white',\r\n  //       height: 48,\r\n  //       padding: '0 30px',\r\n  //       boxShadow: '0 3px 5px 2px rgba(109,157,99, .9)',\r\n  //     },\r\n  //     label: {\r\n  //       textTransform: 'capitalize',\r\n  //     },\r\n  //   })(Button);\r\n\r\n\r\n  render() {\r\n    return (\r\n      //dodadi navBar\r\n      <div style={{ backgroundColor: '#ebeee7' }}>\r\n        <Navbar></Navbar>\r\n        <div style={{\r\n          backgroundImage: `url(${backgroundPic})`, height: '167vh', backgroundRepeat: 'no-repeat', backgroundSize: '90%',\r\n          textAlign: 'center', marginLeft: '10%', backgroundColor: '#ebeee7'\r\n        }}>\r\n          <div style={{ paddingTop: '16%' }}></div>\r\n          <Paper elevation={0} style={{ height: '50%', width: '50%', marginLeft: '21%', backgroundColor: '#ebeee7' }}>\r\n            <h1 style={{ color: '#292216', fontSize: '250%' }}>\r\n              You Want To Start Your Healthy Journey?\r\n            </h1>\r\n            <h2 style={{ marginTop: '2px', color: '#292216', }}>\r\n              Fill out the contact form, send us a message\r\n              <br></br> and we will contact you for a free consultation.\r\n            </h2>\r\n            <TextField\r\n              id=\"outlined-secondary\"\r\n              label=\"Name & Surname\"\r\n              variant=\"outlined\"\r\n              color='#544f32'\r\n              style={{ marginTop: '7%', width: '35%' }}\r\n              onChange={this.handleFormInput('name')}\r\n              value={this.state.data.name || ''}\r\n            />\r\n            <PhoneInput\r\n              country={'mk'}\r\n              value={this.state.phone}\r\n              onChange={phone => this.setState({ phone })}\r\n              style={{ marginTop: '7%', marginLeft: '3%', width: '35%' }}\r\n            />\r\n            {/* <TextField\r\n              id=\"outlined-secondary\"\r\n              label=\"Phone Number\"\r\n              variant=\"outlined\"\r\n              color='#544f32'\r\n              style={{ marginTop: '7%', marginLeft: '3%', width: '35%' }}\r\n              onChange={this.handleFormInput('number')}\r\n              value={this.state.data.number || ''}\r\n            /> */}\r\n            <TextField\r\n              id=\"outlined-secondary\"\r\n              label=\"Email Address\"\r\n              variant=\"outlined\"\r\n              color='#544f32'\r\n              style={{ marginTop: '3%', width: '35%' }}\r\n              onChange={this.handleFormInput('email')}\r\n              value={this.state.data.email || ''}\r\n            />\r\n            <TextField\r\n              id=\"outlined-secondary\"\r\n              label=\"Place of Living\"\r\n              variant=\"outlined\"\r\n              color='#544f32'\r\n              style={{ marginTop: '3%', marginLeft: '3%', width: '35%' }}\r\n              onChange={this.handleFormInput('place')}\r\n              value={this.state.data.place || ''}\r\n            />\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Message\"\r\n              multiline\r\n              rows={6}\r\n              // defaultValue=\"Default Value\"\r\n              style={{ width: '73%', marginTop: '3%' }}\r\n              variant=\"outlined\"\r\n              onChange={this.handleFormInput('message')}\r\n              value={this.state.data.message || ''}\r\n            />\r\n            <br></br>\r\n            <Link to=\"/contact/done\">\r\n              <this.StyledButton onClick={this.sendEmail} style={{ marginTop: '3%' }}><b>SEND CONTACT FORM</b></this.StyledButton>\r\n            </Link>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default class SimpleDialog extends React.Component {\r\n  // StyledButton = withStyles({\r\n  //     root: {\r\n  //       background: 'linear-gradient(45deg, #6dce7f 7%, #05481a 96%)',\r\n  //       borderRadius: 3,\r\n  //       border: 0,\r\n  //       color: 'white',\r\n  //       height: 48,\r\n  //       padding: '0 30px',\r\n  //       boxShadow: '0 3px 5px 2px rgba(109,157,99, .9)',\r\n  //     },\r\n  //     label: {\r\n  //       textTransform: 'capitalize',\r\n  //     },\r\n  //   })(Button);\r\n  StyledButton = withStyles({\r\n    root: {\r\n      background: '#6dce7f',\r\n      borderRadius: 30,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      fontFamily: 'Montserrat,Helvetica,Arial,Lucida,sans-serif!important',\r\n      fontWeight: 500,\r\n      textTransform: 'uppercase',\r\n      fontSize: '18px',\r\n      letterSpacing: '2px',\r\n      lineHeight: '1.5em',\r\n      '&:hover': {\r\n        backgroundColor: '#6dab79',\r\n        borderColor: '#6dab79',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n  })(Button);\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={true}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth={'sm'}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\"><b>{\"Thank you!\"}</b></DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {console.log(\"dsadsadsa\")}\r\n            We will contact you shortly.\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Link to=\"/home\">\r\n              <this.StyledButton>\r\n                Go back\r\n              </this.StyledButton>\r\n            </Link>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport Users from '../module/users/users.container';\r\nimport Groups from '../module/groups/groups.container';\r\nimport Privileges from '../module/privileges/privileges.container';\r\nimport AddPrivilegeToGroupContainer from '../module/privileges/manage.privileges/addgroup.dialog.privileges';\r\nimport AddPrivilegeToUserContainer from '../module/privileges/manage.privileges/adduser.dialog.privileges';\r\nimport CreateUserContainer from '../module/users/create.users/create.users.container';\r\nimport UpdateUserContainer from '../module/users/update.users/update.users.container';\r\nimport DetailsUserContainer from '../module/users/details.users/details.users.container';\r\nimport DeleteUserContainer from '../module/users/delete.users/delete.users.container';\r\nimport { NavbarMain } from './NavbarMain';\r\nimport NavbarRight from './NavbarRight';\r\nimport { SidebarMenu } from './SidebarMenu';\r\nimport { AppBar, Toolbar, Typography, } from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MySnackbarContent from './SnackbarContentWrapper';\r\nimport { CLEAR_NOTIFICATIONS } from './Main.Reducer';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport createGroupsContainer from '../module/groups/create.groups/create.groups.container';\r\nimport DeleteGroupsContainer from '../module/groups/delete.groups/delete.groups.container';\r\nimport UpdateGroupContainer from '../module/groups/update.groups/update.groups.container';\r\nimport DetailsGroupsContainer from '../module/groups/details.groups/details.groups.container';\r\nimport AddUserToGroupContainer from '../module/groups/manage.groups/adduser.dialog.groups';\r\nimport ProfileContainer from '../module/profile/profile.container';\r\nimport FoldersContainer from '../module/Folders/folders.container';\r\nimport AddPathFolderContainer from '../module/Folders/addPathfolder.container';\r\nimport { authorize } from './app.properties';\r\nimport dashboardContainer from '../module/dashboard/dashboard.container';\r\nimport AuditContainer from './../module/audit/audit.container';\r\nimport UnauthorizedContainer from '../module/error/unauthorized.container';\r\nimport ResetPasswordUserContainer from '../module/users/update.users/resetPassword.users.container';\r\nimport SystemSettingsContainer from '../module/settings/system_settings.container';\r\nimport ScansContainer from '../scans/scans.container';\r\nimport ReportsContainer from '../module/reports/reports.container';\r\nimport ReportsIndividualContainer from '../module/reports/reportsIndividual.container';\r\nimport MonthlyReportContainer from '../module/reports/monthlyreport.container';\r\nimport ScansMissingFilesContainer from '../scans/scansMissingFiles.container';\r\nimport HomeContainer from '../module/pages/home.container';\r\nimport logo from '../../Logo/tagama-png.png';\r\nimport aboutUsContainer from '../module/pages/aboutUs.container';\r\nimport contactContainer from '../module/pages/contact.container';\r\nimport SimpleDialog from '../module/pages/SimpleDialog';\r\n\r\n\r\n\r\nclass MainLayout extends React.Component {\r\n\r\n    handleClose = () => {\r\n        this.props.clearNotifications();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <CssBaseline />\r\n                    <AppBar position=\"fixed\" style={{ backgroundColor: '#f2f2f2' }}>\r\n                        <Toolbar>\r\n                        <img src={logo} style={{height:\"5%\",width: \"5%\"}}/>\r\n                        <NavbarMain/>\r\n                        <NavbarRight/>\r\n                        \r\n\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n{/* \r\n                    <Slide direction=\"left\" in={this.props.open} unmountOnExit>\r\n                        <Snackbar\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={this.props.open}\r\n                            variant={this.props.variant}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                            ContentProps={{\r\n                                'aria-describedby': 'message-id',\r\n                            }}\r\n                        >\r\n                            <MySnackbarContent\r\n                                onClose={this.handleClose}\r\n                                variant={this.props.variant}\r\n                                message={this.props.message}\r\n                            />\r\n                        </Snackbar>\r\n                    </Slide> */}\r\n\r\n                    <main>\r\n                        {this.props.loading == true ? <LinearProgress  color=\"primary\"/> :\r\n                            <div style={{ height: 10+ 'px' }}></div>}\r\n\r\n                        <Route path=\"/home\" component={HomeContainer}/>\r\n                        <Route path=\"/about_us\" component={aboutUsContainer}/>\r\n                        <Route path=\"/contact\" component={contactContainer}/>\r\n                        <Route path=\"/done\" component={SimpleDialog}/>\r\n                        <Route path=\"/dashboard\" component={dashboardContainer} />\r\n                        <Route path=\"/app/users\" component={Users} />\r\n                        <Route path=\"/app/users/update/:id\" component={UpdateUserContainer} />\r\n                        <Route path=\"/app/users/delete/:id\" component={DeleteUserContainer} />\r\n                        <Route path=\"/app/users/details/:id\" component={DetailsUserContainer} />\r\n                        <Route path=\"/app/users/create\" component={CreateUserContainer} />\r\n                        <Route path=\"/app/users/reset_password/:id\" component={ResetPasswordUserContainer} />\r\n\r\n                        <Route path=\"/app/groups\" component={Groups} />\r\n                        <Route path=\"/app/groups/create\" component={createGroupsContainer} />\r\n                        <Route path=\"/app/groups/details/:id\" component={DetailsGroupsContainer} />\r\n                        <Route path=\"/app/groups/delete/:id\" component={DeleteGroupsContainer} />\r\n                        <Route path=\"/app/groups/update/:id\" component={UpdateGroupContainer} />\r\n                        <Route path=\"/app/groups/:id/users\" component={AddUserToGroupContainer} />\r\n\r\n                        <Route path=\"/app/privileges\" component={Privileges} />\r\n                        <Route path=\"/app/privileges/:id/users\" component={AddPrivilegeToUserContainer} />\r\n                        <Route path=\"/app/privileges/:id/groups\" component={AddPrivilegeToGroupContainer} />\r\n\r\n                        <Route path=\"/app/profile\" component={ProfileContainer} />\r\n\r\n                        <Route path=\"/app/settings\" component={SystemSettingsContainer} />\r\n\r\n                        <Route path=\"/app/audit\" component={AuditContainer} />\r\n\r\n                        <Route path=\"/app/error/unauthorized\" component={UnauthorizedContainer} />\r\n\r\n                        <Route path=\"/app/folders\" component={FoldersContainer}/>\r\n                        <Route path=\"/app/folders/path/:id\" component={AddPathFolderContainer}/>\r\n\r\n                        <Route path=\"/app/scans\" component={ScansContainer}/>\r\n                        <Route path=\"/app/scans/missingFiles\" component={ScansMissingFilesContainer}/>\r\n                        \r\n                        <Route path=\"/app/reports\" component={ReportsContainer}/>\r\n                        <Route path=\"/app/reports/daily/:date\" component={ReportsIndividualContainer}/>\r\n                        <Route path=\"/app/reports/generate/monthly\" component={MonthlyReportContainer}/>\r\n\r\n\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMainLayout.propTypes = {\r\n    //   classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        open: state.mainReducer.open,\r\n        variant: state.mainReducer.variant,\r\n        message: state.mainReducer.message,\r\n        loading: state.mainReducer.loading\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, ({\r\n    clearNotifications() {\r\n        return { type: CLEAR_NOTIFICATIONS, payload: null }\r\n    },\r\n\r\n}))(MainLayout);","import {call, put, select, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    CLEAR_USER_REQUEST,\r\n    CREATE_USER_FAIL,\r\n    CREATE_USER_REQUEST,\r\n    CREATE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_REQUEST,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_USER_FAIL,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    RESET_PASSWORD_USER_REQUEST,\r\n    RESET_PASSWORD_USER_SUCCESS,\r\n    RESET_PASSWORD_USER_FAIL\r\n} from \"./users.actions\";\r\nimport {createUser, deleteUser, fetchUser, fetchUsersFilteredByUsername, updateUser, resetPasswordUser} from \"./users.repo\";\r\n\r\nexport const getAllUsersData = state => state.usersReducer.allusersdata;\r\nexport const getState = state => state;\r\n\r\n\r\nexport function* usersSagas () {\r\n    \r\n    yield takeEvery(GET_ALL_USERS_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(fetchUsersFilteredByUsername,action.payload);\r\n            yield put({type: GET_ALL_USERS_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_USERS_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(GET_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n        try {\r\n            const res = yield call(fetchUser,action.payload);\r\n            yield put({type: GET_USER_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n\r\n    });\r\n\r\n    yield takeEvery(CREATE_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n        try {\r\n            const res = yield call(createUser, action.payload);\r\n            yield put({type: CREATE_USER_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_USERS_REQUEST, payload: {page: 0, size: 8, filter: \"\"}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: CREATE_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(DELETE_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n        try {\r\n            const res = yield call(deleteUser, action.payload);\r\n            yield put({type: DELETE_USER_SUCCESS, payload: res});\r\n            let allusersdata = yield select(getAllUsersData);\r\n\r\n            yield put({type: GET_ALL_USERS_REQUEST, payload: {page: 0, size: 8,filter: \"\"}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: DELETE_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    }); \r\n\r\n    yield takeEvery(UPDATE_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n\r\n        try {\r\n            const res = yield call(updateUser, action.payload);\r\n            yield put({type: UPDATE_USER_SUCCESS, payload: res});\r\n            let allusersdata = yield select(getAllUsersData);\r\n            yield put({type: GET_ALL_USERS_REQUEST, payload: {page: 0, size: 8,filter: \"\"}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: UPDATE_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(RESET_PASSWORD_USER_REQUEST, function*(action){\r\n        put({type: CLEAR_USER_REQUEST, payload: undefined});\r\n\r\n\r\n        try {\r\n            const res = yield call(resetPasswordUser, action.payload);\r\n            yield put({type: RESET_PASSWORD_USER_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            yield put({type: RESET_PASSWORD_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n}\r\n","import axios from 'axios';\r\nimport {getServerApiURL, getCurrentAccessToken} from '../../shared/app.properties';\r\n\r\nconst SERVER_API_URL                =  getServerApiURL();\r\nconst MODULE_GROUPS_API_CONTEXT      = \"/groups\";\r\n\r\nexport const fetchAllGroups = (payload) => {\r\n\r\n    return fetch(SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + \"/all?page=\"+ payload.page +\"&size=\" + payload.size + \"&access_token=\"+getCurrentAccessToken() )\r\n        .then(response => response.json());\r\n};\r\nexport const fetchGroup = (payload) => {\r\n\r\n    return fetch(SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + \"/\" + payload.id + \"?access_token=\"+getCurrentAccessToken() )\r\n            .then(response => response.json());\r\n    };\r\n\r\nexport const createGroup = (payload) => {\r\n\r\n    return axios({\r\n        method: 'post',\r\n        url: SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + \"/create?access_token=\"+getCurrentAccessToken(),\r\n        data: payload.group,\r\n        headers:{\r\n                'Content-type':'application/json;utf-8'\r\n        }\r\n        }).then(response => response);\r\n};\r\n\r\nexport const fetchGroupsFilteredByName = (payload) => {\r\n    return fetch(SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + \"/all?page=\"+ payload.page +\"&size=\" + payload.size + \"&filter=\" + payload.filter + \"&access_token=\"+getCurrentAccessToken())\r\n        .then(response => response.json());\r\n};\r\nexport const deleteGroup = (payload) => {\r\n\r\n\r\n    return axios({\r\n            method: 'delete',\r\n            url: SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + \"/delete/\" + payload.group.id+\"?access_token=\"+getCurrentAccessToken(),\r\n            headers:{\r\n                    'Content-type':'application/json;'\r\n            }\r\n            }).then(response => response);\r\n    };\r\n    \r\n    export const updateGroup = (payload) => {\r\n\r\n\r\n        return axios({\r\n            method: 'put',\r\n            data: payload.group,\r\n            url: SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + \"/update?access_token=\"+getCurrentAccessToken(),\r\n            headers:{\r\n                    'Content-type':'application/json;'\r\n            }\r\n            }).then(response => response);\r\n    };\r\n\r\n\r\n\r\n    export const fetchAllUsersByGroup = (payload) => {\r\n        return axios({\r\n            method: 'get',\r\n            url: SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + \"/\" + payload.id + \"/members?page=0&size=10000\" + \"&access_token=\"+getCurrentAccessToken(),\r\n            headers:{\r\n                    'Content-type':'application/json;'\r\n            }\r\n            }).then(response => response);\r\n    };\r\n\r\n    export const addUserToGroup = (payload) => {\r\n        return axios({\r\n                method: 'post',\r\n                url: SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + \"/\" + payload.group.id + \"/add_member?userId=\" + payload.user.id + \"&access_token=\"+getCurrentAccessToken(),\r\n                headers:{\r\n                'Content-type':'application/json;'\r\n                }\r\n        }).then(response => response);\r\n    }\r\n\r\n    export const removeUserFromGroup = (payload) => {\r\n            return axios({\r\n                method: 'delete',\r\n                url: SERVER_API_URL + MODULE_GROUPS_API_CONTEXT + '/' + payload.group.id  + \"/remove_member\" + \"?userId=\" + payload.user.id + \"&access_token=\"+getCurrentAccessToken(),\r\n                headers:{\r\n                        'Content-type':'application/json;'\r\n                }\r\n                }).then(response => response);\r\n        \r\n    }","import {call, put, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    ADD_USER_TO_GROUP_FAIL,\r\n    ADD_USER_TO_GROUP_REQUEST,\r\n    ADD_USER_TO_GROUP_SUCCESS,\r\n    CLEAR_GROUP_REQUEST,\r\n    CREATE_GROUP_FAIL,\r\n    CREATE_GROUP_REQUEST,\r\n    CREATE_GROUP_SUCCESS,\r\n    DELETE_GROUP_FAIL,\r\n    DELETE_GROUP_REQUEST,\r\n    DELETE_GROUP_SUCCESS,\r\n    GET_ALL_GROUPS_FAIL,\r\n    GET_ALL_GROUPS_REQUEST,\r\n    GET_ALL_GROUPS_SUCCESS,\r\n    GET_ALL_USERS_BY_GROUP_FAIL,\r\n    GET_ALL_USERS_BY_GROUP_REQUEST,\r\n    GET_ALL_USERS_BY_GROUP_SUCCESS,\r\n    GET_GROUP_FAIL,\r\n    GET_GROUP_REQUEST,\r\n    GET_GROUP_SUCCESS,\r\n    REMOVE_USER_FROM_GROUP_FAIL,\r\n    REMOVE_USER_FROM_GROUP_REQUEST,\r\n    REMOVE_USER_FROM_GROUP_SUCCESS,\r\n    UPDATE_GROUP_FAIL,\r\n    UPDATE_GROUP_REQUEST,\r\n    UPDATE_GROUP_SUCCESS\r\n} from '../groups/groups.actions';\r\nimport {\r\n    addUserToGroup,\r\n    createGroup,\r\n    deleteGroup,\r\n    fetchAllGroups,\r\n    fetchAllUsersByGroup,\r\n    fetchGroup,\r\n    removeUserFromGroup,\r\n    updateGroup\r\n} from '../groups/groups.repo'\r\n\r\nexport const getAllGroupsData = state => state.groupsReducer.allgroupsdata;\r\nexport const getState = state => state;\r\n\r\nexport function* groupsSagas () {\r\n    yield takeEvery(GET_ALL_GROUPS_REQUEST, function* (action) {\r\n\r\n\r\n        try {\r\n\r\n            const res = yield call(fetchAllGroups,action.payload);\r\n            yield put({type: GET_ALL_GROUPS_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_GROUPS_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(CREATE_GROUP_REQUEST, function*(action){\r\n        // put({type: CLEAR_GROUP_REQUEST, payload: undefined});\r\n\r\n\r\n        try {\r\n            const res = yield call(createGroup, action.payload);\r\n            yield put({type: CREATE_GROUP_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_GROUPS_REQUEST, payload: {page: 0, size: 10000}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: CREATE_GROUP_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n    yield takeEvery(DELETE_GROUP_REQUEST, function*(action){\r\n        put({type: CLEAR_GROUP_REQUEST, payload: undefined});\r\n\r\n\r\n        try {\r\n            const res = yield call(deleteGroup, action.payload);\r\n            yield put({type: DELETE_GROUP_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_GROUPS_REQUEST, payload: {page: 0, size: 10000}});\r\n\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: DELETE_GROUP_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(GET_GROUP_REQUEST, function*(action){\r\n        put({type: CLEAR_GROUP_REQUEST, payload: undefined});\r\n\r\n\r\n        try {\r\n            const res = yield call(fetchGroup,action.payload);\r\n            yield put({type: GET_GROUP_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_GROUP_FAIL, payload: {message: e.message}});\r\n        }\r\n\r\n    });\r\n    yield takeEvery(UPDATE_GROUP_REQUEST, function*(action){\r\n        put({type: CLEAR_GROUP_REQUEST, payload: undefined});\r\n\r\n\r\n        try {\r\n            const res = yield call(updateGroup, action.payload);\r\n            yield put({type: UPDATE_GROUP_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_GROUPS_REQUEST, payload: {page: 0, size: 10000}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: UPDATE_GROUP_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(GET_ALL_USERS_BY_GROUP_REQUEST, function*(action){\r\n\r\n\r\n        try {\r\n            const res = yield call(fetchAllUsersByGroup, action.payload);\r\n            yield put({type: GET_ALL_USERS_BY_GROUP_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_USERS_BY_GROUP_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    //add user to group\r\n    yield takeEvery(ADD_USER_TO_GROUP_REQUEST, function* (action) {\r\n\r\n        try {\r\n            const res = yield call(addUserToGroup,action.payload);\r\n            yield put({type: ADD_USER_TO_GROUP_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_USERS_BY_GROUP_REQUEST, payload: {id: action.payload.group.id}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: ADD_USER_TO_GROUP_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    //remove user from group\r\n    yield takeEvery(REMOVE_USER_FROM_GROUP_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(removeUserFromGroup,action.payload);\r\n            yield put({type: REMOVE_USER_FROM_GROUP_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_USERS_BY_GROUP_REQUEST, payload: {id: action.payload.group.id}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: REMOVE_USER_FROM_GROUP_FAIL, payload: {message: e.message}});\r\n        }\r\n});\r\n\r\n\r\n\r\n}\r\n\r\n","import axios from 'axios';\r\nimport {getCurrentAccessToken, getAuthorizationHeader, getServerApiURL} from '../../shared/app.properties';\r\n\r\nexport const fetchMainUserData = (payload) => {\r\n    return axios({\r\n        url: getServerApiURL() + '/users/me?access_token=' + getCurrentAccessToken(),\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization' : getAuthorizationHeader()\r\n        }\r\n    });\r\n};\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Lock from '@material-ui/icons/Lock';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport Redirect from 'react-router-dom/Redirect'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport {getAuthorizationHeader, handleLogout, SERVER_API_URL} from '../../shared/app.properties';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MySnackbarContent from '../../shared/SnackbarContentWrapper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nexport default class LoginContainer extends React.Component {\r\n\r\n    username;\r\n    password;\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        shakeClass: '',\r\n        redirect: false,\r\n        snackbarOpen: false,\r\n        snackbarMessage: '',\r\n        fieldUsernameError: false,\r\n        messageVariant: 'error',\r\n        fieldPasswordError: false\r\n    }\r\n\r\n    componentWillMount() {\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        // if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n        //     handleLogout()\r\n        // }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var idm = localStorage.getItem('idm');\r\n        idm = JSON.parse(localStorage.getItem('idm'));\r\n        if(idm && idm.access_token !== undefined){\r\n            // refreshToken();\r\n            if(idm.expires_at <= 300){\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    enterPressed(event) {\r\n        var code = event.keyCode || event.which;\r\n        if(code === 13) { //13 is the enter keycode\r\n           this.authenticate();\r\n        } \r\n    }\r\n\r\n    authenticate = () => {\r\n        this.setState({shakeClass: '', snackbarOpen: false, loading: true});\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n\r\n\r\n        let goterr = false;\r\n        if(username == undefined || username == '' || username == ' '){\r\n            this.setState({fieldUsernameError: true, \r\n                snackbarOpen: true,\r\n                loading: false,\r\n                snackbarMessage: 'Some required fields are empty!'});\r\n            goterr = true;\r\n        }else{\r\n            this.setState({fieldUsernameError: false});\r\n        }\r\n        if(password == undefined || password == '' || password == ''){\r\n            this.setState({fieldPasswordError: true, \r\n                snackbarOpen: true,\r\n                loading: false,\r\n                snackbarMessage: 'Some required fields are empty!'});\r\n            goterr = true;\r\n        }else{\r\n            this.setState({fieldPasswordError: false});\r\n        }\r\n        if(goterr) return;\r\n\r\n        axios({\r\n            url: SERVER_API_URL + '/oauth/token?username='\r\n            + username \r\n            + '&password='\r\n            + password\r\n            + '&grant_type=password',\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization' : getAuthorizationHeader()\r\n            }\r\n        }).then(res => {\r\n            this.handleAuthSuccess(res);\r\n        }).catch(err => {\r\n            this.handleAuthError(err);\r\n        })\r\n    }\r\n\r\n    handleAuthSuccess = res => {\r\n\r\n        this.setState({\r\n            messageVariant: 'success',\r\n            snackbarMessage: '',\r\n            shakeClass: '',\r\n            snackbarOpen: false,\r\n            loading: false\r\n        });\r\n        var expires_at_date = new Date();\r\n        // expires_at_date.setSeconds(expires_at_date.getSeconds() + res.data.expires_in);\r\n        expires_at_date = new Date(expires_at_date.getTime() + res.data.expires_in * 1000);\r\n        res.data.expires_at = expires_at_date;\r\n\r\n\r\n        res.data.username = this.state.username;\r\n        localStorage.setItem('idm', JSON.stringify(res.data));\r\n        \r\n        axios({\r\n            url: SERVER_API_URL + '/users/me?access_token='\r\n            + res.data.access_token, \r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : 'Basic bXktdHJ1c3RlZC1jbGllbnQ6c2VjcmV0'\r\n            }\r\n        }).then(response => {\r\n            localStorage.setItem('me', JSON.stringify(response.data));\r\n            this.setState({\r\n                logedin: true\r\n            })\r\n        }).catch(err => {\r\n\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n\r\n    handleAuthError = err => {\r\n\r\n\r\n        this.setState({\r\n            snackbarOpen: true,\r\n            messageVariant: 'error',\r\n            snackbarMessage: 'Wrong credentials',\r\n            shakeClass: 'apply-shake',\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    handleCloseSnackbar = () =>{\r\n        this.setState({snackbarOpen: false});\r\n    }\r\n\r\n    handleFormChange = name => event => {\r\n        let val = event.target.value;\r\n        this.setState({\r\n         [name]: val\r\n        });\r\n     }; \r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem('idm') && <Redirect to='/app/'/>\r\n            }\r\n            {\r\n                this.logedin && <Redirect to='/app/'/>\r\n            }\r\n            <Card className={this.state.shakeClass} style={{width: 600+\"px\", padding: 15+\"px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 10+\"%\"}}>\r\n            \r\n            <Typography variant=\"h5\" style={{marginBottom: 20+\"px\", textAlign: 'center'}} >Log in</Typography>\r\n            <form>\r\n            <TextField\r\n                id=\"input-username\"\r\n                onKeyPress={this.enterPressed.bind(this)}\r\n                label=\"Username\"\r\n                fullWidth={true}\r\n                onChange={this.handleFormChange('username')}\r\n                error={this.state.fieldUsernameError}\r\n                value={this.state.username}\r\n                InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                    <AccountCircle />\r\n                    </InputAdornment>\r\n                ),\r\n                }}\r\n            />\r\n\r\n            <br/><br/>\r\n                <TextField\r\n                id=\"input-password\"\r\n                onKeyPress={this.enterPressed.bind(this)}\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={this.handleFormChange('password')}\r\n                value={this.state.password}\r\n                error={this.state.fieldPasswordError}\r\n                fullWidth={true}\r\n                InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                    <Lock />\r\n                    </InputAdornment>\r\n                ),\r\n                }}\r\n            />\r\n            <br/><br/><br/>\r\n            <Button onClick={this.authenticate} color=\"primary\" fullWidth={true} variant=\"contained\">\r\n                    {!this.state.loading && 'Login' }\r\n                    {this.state.loading && <CircularProgress style={{color: 'white'}} size={24} />}\r\n            </Button>\r\n            </form>\r\n            </Card>\r\n            \r\n\r\n          <Snackbar\r\n            width={600+'px'}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            onClose={this.handleCloseSnackbar}\r\n            open={this.state.snackbarOpen}\r\n            variant={this.state.messageVariant}\r\n            autoHideDuration={6000}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id',\r\n            }}\r\n          >\r\n            <MySnackbarContent\r\n              onClose={this.handleCloseSnackbar}\r\n              variant={this.state.messageVariant}\r\n              message={this.state.snackbarMessage}\r\n            />\r\n          </Snackbar>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { GET_MAIN_USER_FAIL, GET_MAIN_USER_SUCCESS, GET_MAIN_USER_REQUEST } from './profile.actions';\r\nimport { fetchMainUserData } from './profile.repo';\r\n\r\nexport function* profileSagas () {\r\n    \r\n    yield takeEvery(GET_MAIN_USER_REQUEST, function* (action) {\r\n        try {\r\n            yield put({type: 'SHOW_LOADING', payload: res});\r\n            const res = yield call(fetchMainUserData,action.payload);\r\n            yield put({type: GET_MAIN_USER_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            yield put({type: GET_MAIN_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n}\r\n","import axios from 'axios';\r\nimport {getServerApiURL} from '../../shared/app.properties';\r\nimport { getCurrentAccessToken } from './../../shared/app.properties';\r\n\r\nconst SERVER_API_URL                = getServerApiURL();\r\nconst MODULE_PRIVILEGES_API_CONTEXT      = \"/privileges\";\r\n\r\nexport const fetchAllPrivileges = (payload) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: SERVER_API_URL + MODULE_PRIVILEGES_API_CONTEXT + \"/all\" + \"?access_token=\"+ getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n};\r\n\r\nexport const fetchAllUsersByPrivilege = (payload) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: SERVER_API_URL + MODULE_PRIVILEGES_API_CONTEXT + \"/\" + payload.id + \"/users\" + \"?access_token=\"+ getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n};\r\n\r\nexport const fetchAllGroupsByPrivilege = (payload) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: SERVER_API_URL + MODULE_PRIVILEGES_API_CONTEXT + \"/\" + payload.id + \"/groups\" + \"?access_token=\"+ getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n};\r\n\r\n\r\nexport const addPrivilegeToUser = (payload) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: SERVER_API_URL + MODULE_PRIVILEGES_API_CONTEXT + \"/\" + payload.privilege.id + \"/users/add?userId=\" + payload.user.id + \"&access_token=\"+ getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n}\r\n\r\nexport const removePrivilegeFromUser = (payload) => {\r\n\r\n    return axios({\r\n        method: 'delete',\r\n        url: SERVER_API_URL + MODULE_PRIVILEGES_API_CONTEXT + \"/\" + payload.privilege.id + \"/users/\" + payload.user.id + \"?access_token=\"+ getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n}\r\n\r\nexport const addPrivilegeToGroup = (payload) => {\r\n\r\n    return axios({\r\n        method: 'post',\r\n        url: SERVER_API_URL + MODULE_PRIVILEGES_API_CONTEXT + \"/\" + payload.privilege.id + \"/groups/add?groupId=\" + payload.group.id + \"&access_token=\"+ getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n}\r\n\r\nexport const removePrivilegeFromGroup = (payload) => {\r\n\r\n\r\n    return axios({\r\n        method: 'delete',\r\n        url: SERVER_API_URL + MODULE_PRIVILEGES_API_CONTEXT + \"/\" + payload.privilege.id + \"/groups/\" + payload.group.id + \"?access_token=\"+ getCurrentAccessToken(),\r\n        headers:{\r\n                'Content-type':'application/json;'\r\n        }\r\n        }).then(response => response);\r\n}","import {call, put, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    ADD_GROUP_PRIVILEGE_FAIL,\r\n    ADD_GROUP_PRIVILEGE_REQUEST,\r\n    ADD_GROUP_PRIVILEGE_SUCCESS,\r\n    ADD_USER_PRIVILEGE_FAIL,\r\n    ADD_USER_PRIVILEGE_REQUEST,\r\n    ADD_USER_PRIVILEGE_SUCCESS,\r\n    GET_ALL_GROUPS_BY_PRIVILEGE_FAIL,\r\n    GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST,\r\n    GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS,\r\n    GET_ALL_PRIVILEGES_FAIL,\r\n    GET_ALL_PRIVILEGES_REQUEST,\r\n    GET_ALL_PRIVILEGES_SUCCESS,\r\n    GET_ALL_USERS_BY_PRIVILEGE_FAIL,\r\n    GET_ALL_USERS_BY_PRIVILEGE_REQUEST,\r\n    GET_ALL_USERS_BY_PRIVILEGE_SUCCESS,\r\n    GET_GROUPS_FILTERED_BY_NAME_REQUEST,\r\n    GET_GROUPS_FILTERED_BY_NAME_SUCCESS,\r\n    GET_USERS_FILTERED_BY_NAME_REQUEST,\r\n    GET_USERS_FILTERED_BY_NAME_SUCCESS,\r\n    REMOVE_GROUP_PRIVILEGE_FAIL,\r\n    REMOVE_GROUP_PRIVILEGE_REQUEST,\r\n    REMOVE_GROUP_PRIVILEGE_SUCCESS,\r\n    REMOVE_USER_PRIVILEGE_FAIL,\r\n    REMOVE_USER_PRIVILEGE_REQUEST,\r\n    REMOVE_USER_PRIVILEGE_SUCCESS\r\n} from './privileges.actions';\r\nimport {\r\n    addPrivilegeToGroup,\r\n    addPrivilegeToUser,\r\n    fetchAllGroupsByPrivilege,\r\n    fetchAllPrivileges,\r\n    fetchAllUsersByPrivilege,\r\n    removePrivilegeFromGroup,\r\n    removePrivilegeFromUser\r\n} from './privileges.repo';\r\nimport {fetchUsersFilteredByUsername} from '../users/users.repo';\r\nimport {fetchGroupsFilteredByName} from '../groups/groups.repo';\r\n\r\nexport function* privilegesSagas () {\r\n    \r\n    yield takeEvery(GET_ALL_PRIVILEGES_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(fetchAllPrivileges,action.payload);\r\n            yield put({type: GET_ALL_PRIVILEGES_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_PRIVILEGES_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(GET_ALL_USERS_BY_PRIVILEGE_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(fetchAllUsersByPrivilege,action.payload);\r\n            yield put({type: GET_ALL_USERS_BY_PRIVILEGE_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_USERS_BY_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    yield takeEvery(GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(fetchAllGroupsByPrivilege,action.payload);\r\n            yield put({type: GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: GET_ALL_GROUPS_BY_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    //add privilege to user\r\n    yield takeEvery(ADD_USER_PRIVILEGE_REQUEST, function* (action) {\r\n\r\n        try {\r\n            const res = yield call(addPrivilegeToUser,action.payload);\r\n            yield put({type: ADD_USER_PRIVILEGE_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_USERS_BY_PRIVILEGE_REQUEST, payload: {id: action.payload.privilege.id}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: ADD_USER_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n    //remove privilege from user\r\n    yield takeEvery(REMOVE_USER_PRIVILEGE_REQUEST, function* (action) {\r\n            try {\r\n\r\n\r\n                const res = yield call(removePrivilegeFromUser,action.payload);\r\n                yield put({type: REMOVE_USER_PRIVILEGE_SUCCESS, payload: res});\r\n                yield put({type: GET_ALL_USERS_BY_PRIVILEGE_REQUEST, payload: action.payload.privilege});\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                //yield put(showNotification('error.error_nesto'));\r\n                yield put({type: REMOVE_USER_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n            }\r\n    });\r\n\r\n    //add privilege to group\r\n    yield takeEvery(ADD_GROUP_PRIVILEGE_REQUEST, function* (action) {\r\n\r\n        try {\r\n            const res = yield call(addPrivilegeToGroup,action.payload);\r\n            yield put({type: ADD_GROUP_PRIVILEGE_SUCCESS, payload: res});\r\n            yield put({type: GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST, payload: {id: action.payload.privilege.id}});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            //yield put(showNotification('error.error_nesto'));\r\n            yield put({type: ADD_GROUP_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n\r\n\r\n        //remove privilege from group\r\n    yield takeEvery(REMOVE_GROUP_PRIVILEGE_REQUEST, function* (action) {\r\n            try {\r\n\r\n\r\n                const res = yield call(removePrivilegeFromGroup,action.payload);\r\n                yield put({type: REMOVE_GROUP_PRIVILEGE_SUCCESS, payload: res});\r\n                yield put({type: GET_ALL_GROUPS_BY_PRIVILEGE_REQUEST, payload: action.payload.privilege});\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                //yield put(showNotification('error.error_nesto'));\r\n                yield put({type: REMOVE_GROUP_PRIVILEGE_FAIL, payload: {message: e.message}});\r\n            }\r\n    });\r\n\r\n\r\n    //get users filtered\r\n    yield takeEvery(GET_USERS_FILTERED_BY_NAME_REQUEST, function* (action) {\r\n\r\n        try {\r\n                const res = yield call(fetchUsersFilteredByUsername,action.payload);\r\n                yield put({type: GET_USERS_FILTERED_BY_NAME_SUCCESS, payload: res});\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                //yield put(showNotification('error.error_nesto'));\r\n            }\r\n    });\r\n\r\n    //get groups filtered\r\n    yield takeEvery(GET_GROUPS_FILTERED_BY_NAME_REQUEST, function* (action) {\r\n                try {\r\n                    const res = yield call(fetchGroupsFilteredByName,action.payload);\r\n                    yield put({type: GET_GROUPS_FILTERED_BY_NAME_SUCCESS, payload: res});\r\n                }\r\n                catch (e) {\r\n                    console.error(e);\r\n                    //yield put(showNotification('error.error_nesto'));\r\n                }\r\n    });\r\n}","import axios from 'axios';\r\nimport {getServerApiURL} from '../../shared/app.properties';\r\nimport {getCurrentAccessToken} from './../../shared/app.properties';\r\n\r\nconst SERVER_API_URL = getServerApiURL();\r\nconst MODULE_SEARCH_REQUEST_API_CONTEXT = \"/main_search_requests\";\r\n\r\n\r\nexport const getAppHealth = () => {\r\n    return axios({\r\n        method: 'get',\r\n        url: SERVER_API_URL + \"/health\" + \"?access_token=\"+ getCurrentAccessToken(),\r\n        headers: {\r\n            'Content-type': 'application/json;utf-8',\r\n        }\r\n    }).then(response => response);\r\n};","import {call, put, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    CREATE_REPORT_REQUEST,\r\n    CREATE_REPORT_SUCCESS,\r\n    GET_APP_HEALTH_REQUEST,\r\n    GET_APP_HEALTH_SUCCESS,\r\n    GET_QUEUE_REPORT_REQUEST,\r\n    GET_QUEUE_REPORT_SUCCESS\r\n} from './dashboard.actions'\r\nimport {getAppHealth} from './dashboard.repo';\r\n\r\nexport function* dashboardSagas() {\r\n\r\n    yield takeEvery(GET_APP_HEALTH_REQUEST, function* (action) {\r\n        try {\r\n            const res = yield call(getAppHealth, action.payload);\r\n            yield put({type: GET_APP_HEALTH_SUCCESS, payload: res});\r\n        } catch (e) {\r\n        }\r\n    });\r\n}","export default __webpack_public_path__ + \"static/media/faq_back.5b10318b.png\";","import { Grid, Paper } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Navbar } from '../../shared/Navbar';\r\nimport back from '../../../Logo/faq_back.png'\r\n\r\n\r\nexport default class faqContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Grid justify='center' container style={{ textAlign: 'center', width: \"100%\" }}>\r\n                <Navbar></Navbar>\r\n                <div style={{ backgroundImage: `url(${back})`, width: '100%', height: '130vh', backgroundSize: 'cover', textAlign: 'center' }}>\r\n                    <Grid item style={{ marginTop: '7%' }}>\r\n                        <h2 style={{ fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 700, fontSize: '40px', lineHeight: '1.6em', marginBottom: '0px' }}>Frequently Asked Questions </h2>\r\n                        <h3 style={{ fontFamily: 'Montserrat,Helvetica,Arial,Lucida,sans-serif', fontWeight: 500, fontSize: '22px', lineHeight: '1.5em', textTransform: 'uppercase', letterSpacing: '2px' }}>Learn How it Works!</h3>\r\n                    </Grid>\r\n                    <Grid container spacing={5} style={{ marginLeft: \"13%\" }}>\r\n                        <Grid item xs={3} >\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>What is the first step towards getting a healthy diet from you?</b><br /> - The first step is making contact with me!</Paper>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>Where can people reach you?</b><br /> - You can reach me through all social networks, my number and email which are listed in your left upper corner.</Paper>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>Where can people reach you?</b><br /> - You can reach me through all social networks, my number and email which are listed in your left upper corner.</Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={5} style={{ marginLeft: \"13%\" }}>\r\n                        <Grid item xs={3}>\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>Where can people reach you?</b><br /> - You can reach me through all social networks, my number and email which are listed in your left upper corner.</Paper>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>Where can people reach you?</b><br /> - You can reach me through all social networks, my number and email which are listed in your left upper corner.</Paper>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>Where can people reach you?</b><br /> - You can reach me through all social networks, my number and email which are listed in your left upper corner.</Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={5} style={{ marginLeft: \"13%\" }}>\r\n                        <Grid item xs={3}>\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>Where can people reach you?</b><br /> - You can reach me through all social networks, my number and email which are listed in your left upper corner.</Paper>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>Where can people reach you?</b><br /> - You can reach me through all social networks, my number and email which are listed in your left upper corner.</Paper>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Paper elevation={3} style={{\r\n                                fontFamily: 'Merriweather,Georgia,\"Times New Roman\",serif', fontWeight: 450, fontSize: '19px', lineHeight: '1.6em'\r\n                            }}><b>Where can people reach you?</b><br /> - You can reach me through all social networks, my number and email which are listed in your left upper corner.</Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid >\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainLayout from './app/shared/MainLayout';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport { usersReducer } from './app/module/users/users.reducer';\r\nimport { mainReducer } from './app/shared/Main.Reducer';\r\nimport { usersSagas } from './app/module/users/users.saga';\r\nimport { groupsSagas } from './app/module/groups/groups.saga';\r\nimport { groupsReducer } from './app/module/groups/groups.reducer';\r\nimport LoginContainer from './app/auth/login/login.container';\r\nimport { profileSagas } from './app/module/profile/profile.saga';\r\nimport { profileReducer } from './app/module/profile/profile.reducer';\r\nimport { privilegesSagas } from './app/module/privileges/privileges.saga';\r\nimport { privilegesReducer } from './app/module/privileges/privileges.reducer';\r\nimport { dashboardSagas } from './app/module/dashboard/dashboard.saga';\r\nimport { dashboardReducer } from './app/module/dashboard/dashboard.reducer';\r\nimport { getCurrentAccessToken } from './app/shared/app.properties';\r\nimport HomeContainer from './app/module/pages/home.container';\r\nimport aboutUsContainer from './app/module/pages/aboutUs.container';\r\nimport contactContainer from './app/module/pages/contact.container';\r\nimport SimpleDialog from './app/module/pages/SimpleDialog';\r\nimport faqContainer from './app/module/pages/faq.container';\r\n\r\n\r\nconst appReducer = combineReducers({\r\n    usersReducer,\r\n    mainReducer,\r\n    groupsReducer,\r\n    profileReducer,\r\n    privilegesReducer,\r\n    dashboardReducer\r\n\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === 'USER_LOGOUT') {\r\n        state = undefined\r\n    }\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport function dispatchAction(action) {\r\n    store.dispatch(action);\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(usersSagas);\r\nsagaMiddleware.run(groupsSagas);\r\nsagaMiddleware.run(privilegesSagas);\r\nsagaMiddleware.run(profileSagas);\r\nsagaMiddleware.run(dashboardSagas);\r\n\r\n// Add a request interceptor\r\naxios.interceptors.request.use(function (config) {\r\n    // Do something before request is sent\r\n    dispatchAction({ type: 'SHOW_LOADING' });\r\n    if (!config.url.includes('access_token='))\r\n        if (config.url.includes('&'))\r\n            config.url = config.url + '&access_token=' + getCurrentAccessToken();\r\n        else\r\n            config.url = config.url + '?access_token=' + getCurrentAccessToken();\r\n    return config;\r\n}, function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    dispatchAction({ type: 'HIDE_LOADING' });\r\n    return response;\r\n}, function (err) {\r\n    dispatchAction({ type: 'HIDE_LOADING' });\r\n    return Promise.reject(err);\r\n});\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <div>\r\n                        {/*<Route path=\"/login\" component={LoginContainer}/>*/}\r\n                        {/* <Route path=\"/app\" component={MainLayout}/> */}\r\n                        <Route path=\"/home\" component={HomeContainer} />\r\n                        <Route path=\"/about_us\" component={aboutUsContainer} />\r\n                        <Route path=\"/contact\" component={contactContainer} />\r\n                        <Route path=\"/contact/done\" component={SimpleDialog} />\r\n                        <Route path=\"/faq\" component={faqContainer} />\r\n\r\n                        {/* <Route path=\"/error\"  /> */}\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n","import {\r\n    GET_ALL_USERS_SUCCESS, GET_USER_SUCCESS, RESET_REDIRECT, CLEAR_USER_REQUEST,\r\n    INIT_USER_REQUEST, CREATE_USER_SUCCESS, CREATE_USER_FAIL,\r\n    DELETE_USER_SUCCESS, DELETE_USER_FAIL, DELETE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, GET_ALL_USERS_REQUEST, CREATE_USER_REQUEST, UPDATE_USER_REQUEST, GET_USER_REQUEST, RESET_PASSWORD_USER_SUCCESS, RESET_PASSWORD_USER_FAIL\r\n} from \"./users.actions\";\r\nimport { User } from \"../../model/user.model\";\r\n\r\nexport function usersReducer(currentState = { allusersdata: -1, singleuser: -1, user: -1 }, action) {\r\n    switch (action.type) {\r\n        case GET_ALL_USERS_SUCCESS:\r\n            action.payload.data = action.payload.content.map(function (obj) { return new User(obj) }\r\n            );\r\n            return {\r\n                ...currentState,\r\n                allusersdata: action.payload\r\n            };\r\n\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                singleuser: action.payload,\r\n                redirectBack: true,\r\n                loading: false\r\n\r\n            };\r\n\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...currentState,\r\n                error: true,\r\n                loading: false\r\n                // singleuser: action.payload\r\n            };\r\n\r\n        case UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                singleuser: action.payload,\r\n                redirectBack: true,\r\n                loading: false\r\n            };\r\n\r\n        case UPDATE_USER_FAIL:\r\n            return {\r\n                ...currentState,\r\n                error: true,\r\n                loading: false\r\n                // singleuser: action.payload\r\n            };\r\n\r\n        case RESET_PASSWORD_USER_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                singleuser: action.payload,\r\n                redirectBack: true,\r\n                loading: false\r\n            };\r\n\r\n        case RESET_PASSWORD_USER_FAIL:\r\n            return {\r\n                ...currentState,\r\n                error: true,\r\n                loading: false\r\n                // singleuser: action.payload\r\n            };\r\n\r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                removed: action.payload.data,\r\n                redirectBack: true,\r\n                loading: false\r\n                // singleuser: action.payload\r\n            };\r\n\r\n        case DELETE_USER_FAIL:\r\n            return {\r\n                ...currentState,\r\n                removed: action.payload.data,\r\n                redirectBack: true,\r\n                loading: false\r\n\r\n                // singleuser: action.payload\r\n            };\r\n\r\n        case GET_USER_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n        case DELETE_USER_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n        case CREATE_USER_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n        case UPDATE_USER_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n\r\n        case GET_USER_SUCCESS:\r\n            action.payload = new User(action.payload);\r\n\r\n            return {\r\n                ...currentState,\r\n                singleuser: action.payload,\r\n                loading: false\r\n\r\n            };\r\n\r\n        case CLEAR_USER_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                singleuser: undefined\r\n            };\r\n\r\n        case RESET_REDIRECT:\r\n            return {\r\n                ...currentState,\r\n                redirectBack: false\r\n            };\r\n\r\n        default:\r\n            return currentState;\r\n    }\r\n}","import {\r\n    ADD_USER_TO_GROUP_SUCCESS,\r\n    CLEAR_GROUP_REQUEST,\r\n    CREATE_GROUP_FAIL,\r\n    CREATE_GROUP_SUCCESS,\r\n    DELETE_GROUP_FAIL,\r\n    DELETE_GROUP_SUCCESS,\r\n    GET_ALL_GROUPS_SUCCESS,\r\n    GET_ALL_USERS_BY_GROUP_SUCCESS,\r\n    GET_GROUP_SUCCESS,\r\n    REMOVE_USER_FROM_GROUP_FAIL,\r\n    REMOVE_USER_FROM_GROUP_SUCCESS,\r\n    RESET_REDIRECT,\r\n    UPDATE_GROUP_FAIL,\r\n    UPDATE_GROUP_REQUEST,\r\n    UPDATE_GROUP_SUCCESS\r\n} from \"../groups/groups.actions\"\r\n\r\nexport function groupsReducer(currentState = {allgroupsdata: -1, singlegroup: -1, group: -1}, action) {\r\n    switch (action.type) {  \r\n        case GET_ALL_GROUPS_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                allgroupsdata: action.payload\r\n            };\r\n\r\n        case CREATE_GROUP_SUCCESS:\r\n\r\n            return {\r\n                ...currentState,\r\n                singlegroup: action.payload,\r\n                redirectBack: true,\r\n                loading: false\r\n\r\n            };\r\n    \r\n        case CREATE_GROUP_FAIL:\r\n\r\n\r\n            return {\r\n                ...currentState,\r\n                error: true,\r\n                loading: false\r\n                // singleuser: action.payload\r\n            };\r\n            case GET_GROUP_SUCCESS:\r\n\r\n\r\n                return {\r\n                ...currentState,\r\n               singlegroup: action.payload,\r\n                loading: false\r\n\r\n            };\r\n            case DELETE_GROUP_SUCCESS:\r\n\r\n\r\n                return {\r\n                ...currentState,\r\n                removed: action.payload.data,\r\n                redirectBack: true,\r\n                loading: false,\r\n                singlegroup: action.payload\r\n            };\r\n\r\n        case DELETE_GROUP_FAIL:\r\n\r\n\r\n            return {\r\n                ...currentState,\r\n                removed: action.payload.data,\r\n                redirectBack: true,\r\n                loading: false,\r\n\r\n                singlegroup: action.payload\r\n            };\r\n        case UPDATE_GROUP_SUCCESS:\r\n\r\n            return {\r\n                ...currentState,\r\n                singlegroup: action.payload,\r\n                redirectBack: true,\r\n                loading: false\r\n            };\r\n    \r\n        case UPDATE_GROUP_FAIL:\r\n\r\n\r\n            return {\r\n                ...currentState,\r\n                error: true,\r\n                loading: false\r\n                // singleuser: action.payload\r\n            };\r\n\r\n        case GET_ALL_USERS_BY_GROUP_SUCCESS:\r\n        // action.payload.data = action.payload.data.data.map(function(obj)\r\n        //         {return new User(obj)}\r\n        //     );\r\n\r\n            return{\r\n                ...currentState,\r\n                error:false,\r\n                loading:false,\r\n                allusersdata: action.payload.data\r\n            }\r\n\r\n        case ADD_USER_TO_GROUP_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                loading: false\r\n            };\r\n\r\n        //remove user from group\r\n        case REMOVE_USER_FROM_GROUP_SUCCESS:\r\n        return {\r\n            ...currentState,\r\n            success: action.payload,\r\n            loading: false\r\n\r\n        };\r\n\r\n        //remove user from group\r\n        case REMOVE_USER_FROM_GROUP_FAIL:\r\n        return {\r\n            ...currentState,\r\n            loading: false\r\n\r\n        };\r\n\r\n        \r\n\r\n        case UPDATE_GROUP_REQUEST:\r\n\r\n            return {\r\n                    ...currentState,\r\n                    loading: true\r\n            };\r\n            \r\n        case CLEAR_GROUP_REQUEST:\r\n            return{\r\n                ...currentState,\r\n                singlegroup: undefined\r\n            }\r\n        \r\n\r\n        case RESET_REDIRECT:\r\n            return {\r\n                ...currentState,\r\n                redirectBack: false\r\n            };\r\n            \r\n\r\n            default:\r\n            return currentState;\r\n        }\r\n\r\n        \r\n        \r\n    }","import { User } from \"../../model/user.model\";\r\nimport { GET_MAIN_USER_SUCCESS } from \"./profile.actions\";\r\n\r\nexport function profileReducer(currentState = {}, action) {\r\n    switch (action.type) {  \r\n        case GET_MAIN_USER_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                singleuser: action.payload.data\r\n            };\r\n        \r\n        default:\r\n            return {\r\n                currentState\r\n            }; \r\n    }\r\n}","import {\r\n    ADD_USER_PRIVILEGE_FAIL,\r\n    ADD_USER_PRIVILEGE_REQUEST,\r\n    ADD_USER_PRIVILEGE_SUCCESS,\r\n    GET_ALL_GROUPS_BY_PRIVILEGE_FAIL,\r\n    GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS,\r\n    GET_ALL_PRIVILEGES_FAIL,\r\n    GET_ALL_PRIVILEGES_SUCCESS,\r\n    GET_ALL_USERS_BY_PRIVILEGE_FAIL,\r\n    GET_ALL_USERS_BY_PRIVILEGE_SUCCESS,\r\n    GET_GROUPS_FILTERED_BY_NAME_SUCCESS,\r\n    GET_USERS_FILTERED_BY_NAME_SUCCESS,\r\n    REMOVE_USER_PRIVILEGE_FAIL,\r\n    REMOVE_USER_PRIVILEGE_REQUEST,\r\n    REMOVE_USER_PRIVILEGE_SUCCESS\r\n} from \"./privileges.actions\";\r\n\r\nexport function privilegesReducer(currentState = \r\n    {selectedPrivilege:{id: 1,\r\n                name: \"ADMIN\"}}, action) {\r\n    switch (action.type) {  \r\n            case GET_ALL_PRIVILEGES_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                allprivilegesdata: action.payload.data\r\n            };\r\n\r\n            case GET_ALL_PRIVILEGES_FAIL:\r\n            return {\r\n                ...currentState,\r\n                error: true\r\n            };\r\n\r\n            //users by privilege\r\n            case GET_ALL_USERS_BY_PRIVILEGE_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                allusersdata: action.payload.data\r\n            };\r\n\r\n            case GET_ALL_USERS_BY_PRIVILEGE_FAIL:\r\n            return {\r\n                ...currentState,\r\n                error: true\r\n            };\r\n\r\n\r\n            //groups by privilege\r\n            case GET_ALL_GROUPS_BY_PRIVILEGE_SUCCESS:\r\n\r\n            return {\r\n                ...currentState,\r\n                allgroupsdata: action.payload.data\r\n            };\r\n\r\n            case GET_ALL_GROUPS_BY_PRIVILEGE_FAIL:\r\n            return {\r\n                ...currentState,\r\n                error: true\r\n            };\r\n\r\n\r\n            //add privilege to user\r\n            case ADD_USER_PRIVILEGE_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                loading: false\r\n            };\r\n\r\n            case ADD_USER_PRIVILEGE_FAIL:\r\n            return {\r\n                ...currentState,\r\n                loading: false\r\n            };\r\n\r\n            //remove privilege from user\r\n            case REMOVE_USER_PRIVILEGE_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                success: action.payload,\r\n                loading: false\r\n\r\n            };\r\n\r\n            case REMOVE_USER_PRIVILEGE_FAIL:\r\n            return {\r\n                ...currentState,\r\n                loading: false\r\n            };\r\n\r\n            //add privilege to group\r\n\r\n\r\n            //remove privilege from group\r\n\r\n\r\n            // catch filtered users\r\n            case GET_USERS_FILTERED_BY_NAME_SUCCESS:\r\n            \r\n            return {\r\n                ...currentState,\r\n                filteredUsers: action.payload\r\n            };\r\n\r\n            case GET_GROUPS_FILTERED_BY_NAME_SUCCESS:\r\n\r\n                return {\r\n                ...currentState,\r\n                filteredGroups: action.payload\r\n            };\r\n\r\n\r\n            // loading and notify\r\n            case ADD_USER_PRIVILEGE_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n\r\n            case REMOVE_USER_PRIVILEGE_REQUEST:\r\n            return {\r\n                ...currentState,\r\n                loading: true\r\n            };\r\n\r\n\r\n            default:\r\n            return currentState;\r\n    }\r\n}","import {GET_APP_HEALTH_SUCCESS} from './dashboard.actions';\r\n\r\nexport function dashboardReducer(currentState = {reportHealth: -1}, action) {\r\n    switch (action.type) {\r\n\r\n        case GET_APP_HEALTH_SUCCESS:\r\n            return {\r\n                ...currentState,\r\n                reportHealth: action.payload\r\n            }\r\n\r\n        default:\r\n            return currentState;\r\n    }\r\n}"],"sourceRoot":""}