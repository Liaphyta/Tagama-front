{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\tagama\\\\Tagama-front\\\\Tagama-front\\\\src\\\\app\\\\module\\\\profile\\\\profile.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { action } from '../../../index';\nimport { Grid, Paper, Table, TableCell, TableRow, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails, TextField, DialogActions, Button } from \"@material-ui/core\";\nimport { fetchMainUserData } from './profile.actions';\nimport { handleLogout, hasAnyRole, refreshToken } from './../../shared/app.properties';\nimport Redirect from 'react-router-dom/Redirect';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { resetPasswordUser } from './../users/users.repo';\n\nclass ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.loading = false;\n    this.unauthorized = false;\n    this.state = {\n      newPassword: '',\n      confirmPassword: '',\n      error: false\n    };\n\n    this.handleUserFormChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.newPassword === this.state.confirmPassword) {\n        var u = this.props.singleuser;\n        u['password'] = this.state.newPassword;\n        resetPasswordUser({\n          user: u\n        }).then(res => {\n          handleLogout();\n          window.location.replace(\"/login\");\n        });\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMainUserData();\n    this.unauthorized = !hasAnyRole('ROLE_ADMINISTRATION');\n    var refreshTime = new Date();\n    refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\n\n    if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\n      handleLogout();\n    } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\n      handleLogout();\n    } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\n      refreshToken();\n    }\n  }\n\n  render() {\n    if (this.props.singleuser) {}\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/app/error/unauthorized\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginLeft: 30 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"MY PROFILE\"), /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        marginLeft: 30 + \"px\",\n        marginRight: 30 + 'px',\n        padding: 10 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, this.props.singleuser && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, this.props.singleuser.username)), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, \"First name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, this.props.singleuser.name)), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, \"Last name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }, this.props.singleuser.surname)), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, \"E-mail\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    }, this.props.singleuser.email))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(ExpansionPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 72\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, \"Reset Password\")), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      autoComplete: \"off\",\n      maxWidth: \"md\",\n      className: \"dialog-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"last-name\",\n      fullWidth: true,\n      onChange: this.handleUserFormChange('newPassword'),\n      label: \"New Password:\",\n      value: this.state.newPassword ? this.state.newPassword : '',\n      margin: \"normal\",\n      type: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"email-name\",\n      fullWidth: true,\n      label: \"Confirm Password\",\n      onChange: this.handleUserFormChange('confirmPassword'),\n      value: this.state.confirmPassword ? this.state.confirmPassword : '',\n      margin: \"normal\",\n      type: \"password\",\n      error: this.state.error,\n      helperText: this.state.error ? 'Must match the previous entry' : '',\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }, \"Reset\"))))))))));\n  }\n\n}\n\nvar mapStateToProps = state => {\n  return {\n    singleuser: state.profileReducer.singleuser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMainUserData\n})(ProfileContainer);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/src/app/module/profile/profile.container.js"],"names":["React","connect","action","Grid","Paper","Table","TableCell","TableRow","ExpansionPanel","ExpansionPanelSummary","Typography","ExpansionPanelDetails","TextField","DialogActions","Button","fetchMainUserData","handleLogout","hasAnyRole","refreshToken","Redirect","ExpandMoreIcon","resetPasswordUser","ProfileContainer","Component","loading","unauthorized","state","newPassword","confirmPassword","error","handleUserFormChange","name","event","setState","target","value","handleSubmit","preventDefault","u","props","singleuser","user","then","res","window","location","replace","componentDidMount","refreshTime","Date","setSeconds","getSeconds","localStorage","getItem","JSON","parse","expires_at","render","marginLeft","marginRight","padding","username","surname","email","mapStateToProps","profileReducer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { action } from '../../../index';\r\n\r\nimport { Grid, Paper, Table, TableCell, TableRow, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails, TextField, DialogActions, Button, } from \"@material-ui/core\";\r\nimport { fetchMainUserData } from './profile.actions';\r\nimport { handleLogout, hasAnyRole, refreshToken } from './../../shared/app.properties';\r\nimport Redirect from 'react-router-dom/Redirect';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {resetPasswordUser} from './../users/users.repo';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    loading = false;\r\n\r\n    unauthorized = false;\r\n\r\n    state = {\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        error: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchMainUserData();\r\n\r\n        this.unauthorized = !hasAnyRole('ROLE_ADMINISTRATION');\r\n\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n            refreshToken()\r\n        }\r\n    }\r\n\r\n    handleUserFormChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.newPassword === this.state.confirmPassword) {\r\n            let u = this.props.singleuser;\r\n            u['password']= this.state.newPassword;\r\n            resetPasswordUser({user:u}).then( res =>{\r\n                handleLogout();\r\n                window.location.replace(\"/login\")\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.props.singleuser) {\r\n\r\n        }\r\n        return (\r\n            <div className=\"my-profile\">\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                    <Redirect to=\"/app/error/unauthorized\" />\r\n                }\r\n                <h3 style={{ marginLeft: 30 + 'px' }}>MY PROFILE</h3>\r\n                <Paper style={{ marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px' }}>\r\n\r\n                    <Grid>\r\n                        <Grid xs={6}>\r\n                            {this.props.singleuser &&\r\n                            <div>\r\n                                <Table>\r\n                                    <TableRow>\r\n                                        <TableCell>Username</TableCell>\r\n                                        <TableCell>{this.props.singleuser.username}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>First name</TableCell>\r\n                                        <TableCell>{this.props.singleuser.name}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>Last name</TableCell>\r\n                                        <TableCell>{this.props.singleuser.surname}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>E-mail</TableCell>\r\n                                        <TableCell>{this.props.singleuser.email}</TableCell>\r\n                                    </TableRow>\r\n\r\n                                </Table>\r\n                                <br/><br/>\r\n                                <ExpansionPanel >\r\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Typography >Reset Password</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                    <form onSubmit={this.handleSubmit} autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                                    <TextField\r\n                                        id=\"last-name\"\r\n                                        fullWidth={true}\r\n                                        onChange={this.handleUserFormChange('newPassword')}\r\n                                        label=\"New Password:\"\r\n                                        value={this.state.newPassword ? this.state.newPassword : ''}\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"email-name\"\r\n                                        fullWidth={true}\r\n                                        label=\"Confirm Password\"\r\n                                        onChange={this.handleUserFormChange('confirmPassword')}\r\n                                        value={this.state.confirmPassword ? this.state.confirmPassword : ''}\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        error={this.state.error}\r\n                                        helperText={this.state.error ? 'Must match the previous entry' : ''}\r\n                                        required\r\n                                    />\r\n                                    <DialogActions>\r\n                                        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                                            Reset\r\n                                        </Button>\r\n                                    </DialogActions>\r\n                                </form>\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                                </div>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        singleuser: state.profileReducer.singleuser\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchMainUserData\r\n}))(ProfileContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}