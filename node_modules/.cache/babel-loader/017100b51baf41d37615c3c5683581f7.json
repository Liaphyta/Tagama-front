{"ast":null,"code":"import _curry1 from './internal/_curry1.js';\n/**\r\n * Creates a new object from a list key-value pairs. If a key appears in\r\n * multiple pairs, the rightmost pair is included in the object.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.3.0\r\n * @category List\r\n * @sig [[k,v]] -> {k: v}\r\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\r\n * @return {Object} The object made by pairing up `keys` and `values`.\r\n * @see R.toPairs, R.pair\r\n * @example\r\n *\r\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\r\n */\n\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/ramda/es/fromPairs.js"],"names":["_curry1","fromPairs","pairs","result","idx","length"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS,GAAG,aAAaD,OAAO,CAAC,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7D,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAG,CAAV;;AACA,SAAOA,GAAG,GAAGF,KAAK,CAACG,MAAnB,EAA2B;AACzBF,IAAAA,MAAM,CAACD,KAAK,CAACE,GAAD,CAAL,CAAW,CAAX,CAAD,CAAN,GAAwBF,KAAK,CAACE,GAAD,CAAL,CAAW,CAAX,CAAxB;AACAA,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,SAAOD,MAAP;AACD,CARmC,CAApC;;AASA,eAAeF,SAAf","sourcesContent":["import _curry1 from './internal/_curry1.js';\r\n\r\n/**\r\n * Creates a new object from a list key-value pairs. If a key appears in\r\n * multiple pairs, the rightmost pair is included in the object.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.3.0\r\n * @category List\r\n * @sig [[k,v]] -> {k: v}\r\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\r\n * @return {Object} The object made by pairing up `keys` and `values`.\r\n * @see R.toPairs, R.pair\r\n * @example\r\n *\r\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\r\n */\r\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\r\n  var result = {};\r\n  var idx = 0;\r\n  while (idx < pairs.length) {\r\n    result[pairs[idx][0]] = pairs[idx][1];\r\n    idx += 1;\r\n  }\r\n  return result;\r\n});\r\nexport default fromPairs;"]},"metadata":{},"sourceType":"module"}