{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar defaultConnector = /*#__PURE__*/React.createElement(StepConnector, null);\nvar Stepper = /*#__PURE__*/React.forwardRef(function Stepper(props, ref) {\n  var _props$activeStep = props.activeStep,\n      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$connector = props.connector,\n      connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector,\n      _props$nonLinear = props.nonLinear,\n      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutPropertiesLoose(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var connector = /*#__PURE__*/React.isValidElement(connectorProp) ? /*#__PURE__*/React.cloneElement(connectorProp, {\n    orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map((step, index) => {\n    var state = {\n      index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(step, _extends({\n      alternativeLabel,\n      connector,\n      last: index + 1 === childrenArray.length,\n      orientation\n    }, state, step.props));\n  });\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Set the active step (zero based index).\r\n   * Set to -1 to disable all the steps.\r\n   */\n  activeStep: PropTypes.number,\n\n  /**\r\n   * If set to 'true' and orientation is horizontal,\r\n   * then the step label will be positioned under the icon.\r\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\r\n   * Two or more `<Step />` components.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * An element to be placed between each step.\r\n   */\n  connector: PropTypes.element,\n\n  /**\r\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\r\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\r\n   * The stepper orientation (layout flow direction).\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/Stepper/Stepper.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","Paper","StepConnector","styles","root","display","padding","horizontal","flexDirection","alignItems","vertical","alternativeLabel","defaultConnector","createElement","Stepper","forwardRef","props","ref","activeStep","children","classes","className","connector","connectorProp","nonLinear","orientation","other","isValidElement","cloneElement","childrenArray","Children","toArray","steps","map","step","index","state","active","completed","disabled","last","length","square","elevation","process","env","NODE_ENV","propTypes","number","bool","node","object","string","element","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport Paper from '../Paper';\r\nimport StepConnector from '../StepConnector';\r\nexport const styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'flex',\r\n    padding: 24\r\n  },\r\n\r\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n\r\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\r\n  vertical: {\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\r\n  alternativeLabel: {\r\n    alignItems: 'flex-start'\r\n  }\r\n};\r\nconst defaultConnector = /*#__PURE__*/React.createElement(StepConnector, null);\r\nconst Stepper = /*#__PURE__*/React.forwardRef(function Stepper(props, ref) {\r\n  const {\r\n    activeStep = 0,\r\n    alternativeLabel = false,\r\n    children,\r\n    classes,\r\n    className,\r\n    connector: connectorProp = defaultConnector,\r\n    nonLinear = false,\r\n    orientation = 'horizontal'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\r\n\r\n  const connector = /*#__PURE__*/React.isValidElement(connectorProp) ? /*#__PURE__*/React.cloneElement(connectorProp, {\r\n    orientation\r\n  }) : null;\r\n  const childrenArray = React.Children.toArray(children);\r\n  const steps = childrenArray.map((step, index) => {\r\n    const state = {\r\n      index,\r\n      active: false,\r\n      completed: false,\r\n      disabled: false\r\n    };\r\n\r\n    if (activeStep === index) {\r\n      state.active = true;\r\n    } else if (!nonLinear && activeStep > index) {\r\n      state.completed = true;\r\n    } else if (!nonLinear && activeStep < index) {\r\n      state.disabled = true;\r\n    }\r\n\r\n    return /*#__PURE__*/React.cloneElement(step, _extends({\r\n      alternativeLabel,\r\n      connector,\r\n      last: index + 1 === childrenArray.length,\r\n      orientation\r\n    }, state, step.props));\r\n  });\r\n  return /*#__PURE__*/React.createElement(Paper, _extends({\r\n    square: true,\r\n    elevation: 0,\r\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),\r\n    ref: ref\r\n  }, other), steps);\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Set the active step (zero based index).\r\n   * Set to -1 to disable all the steps.\r\n   */\r\n  activeStep: PropTypes.number,\r\n\r\n  /**\r\n   * If set to 'true' and orientation is horizontal,\r\n   * then the step label will be positioned under the icon.\r\n   */\r\n  alternativeLabel: PropTypes.bool,\r\n\r\n  /**\r\n   * Two or more `<Step />` components.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * An element to be placed between each step.\r\n   */\r\n  connector: PropTypes.element,\r\n\r\n  /**\r\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\r\n   */\r\n  nonLinear: PropTypes.bool,\r\n\r\n  /**\r\n   * The stepper orientation (layout flow direction).\r\n   */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiStepper'\r\n})(Stepper);"]},"metadata":{},"sourceType":"module"}