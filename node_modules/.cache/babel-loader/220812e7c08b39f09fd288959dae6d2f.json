{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\scans\\\\scansMissingFiles.container.js\";\nimport React from 'react';\nimport { Dialog, DialogTitle, Grid, TextField, DialogActions, Button, Select, Input, MenuItem, Divider, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { listAllFolders } from '../module/Folders/folder.repo';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { getMissingfiles } from '../module/Folders/folder.repo';\n\nvar ScansMissingFilesContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScansMissingFilesContainer, _React$Component);\n\n  function ScansMissingFilesContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ScansMissingFilesContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScansMissingFilesContainer).call(this, props));\n\n    _this.handleFormInput = function (name) {\n      return function (event) {\n        var formdata = _this.state.data;\n        formdata[name] = event.target.value;\n\n        _this.setState({\n          data: formdata\n        });\n      };\n    };\n\n    _this.getAllFoders = function () {\n      listAllFolders().then(function (response) {\n        _this.setState({\n          folders: response.data\n        });\n\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.searchForMissingFiles = function (pathFolder, totalFiles) {\n      getMissingfiles(pathFolder, totalFiles).then(function (response) {\n        _this.setState({\n          responseMissing: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      formdata: {},\n      data: {},\n      folders: [],\n      responseMissing: []\n    };\n    return _this;\n  }\n\n  _createClass(ScansMissingFilesContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getAllFoders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(Dialog, {\n        open: true,\n        maxWidth: \"md\",\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        \"aria-describedby\": \"max-width-dialog-description\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Search for missing files\"), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginLeft: '25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          height: 15 + \"px\",\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Please choose folder\"), React.createElement(Select, {\n        value: this.state.data.pathFolder,\n        onChange: this.handleFormInput('pathFolder'),\n        displayEmpty: true,\n        style: {\n          marginTop: \"10px\",\n          width: '400px',\n          float: \"left\"\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.folders && this.state.folders && this.state.folders && this.state.folders.map(function (e) {\n        return React.createElement(MenuItem, {\n          key: e,\n          value: e,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, e);\n      })), React.createElement(\"span\", {\n        style: {\n          height: 20 + \"px\",\n          display: 'block',\n          marginTop: '55px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Please insert the correct amount of scans in the selected folder\"), React.createElement(TextField, (_React$createElement = {\n        id: \"total-files\",\n        label: \"Total files\",\n        variant: \"outlined\",\n        margin: \"dense\",\n        maxWidth: true,\n        style: {\n          marginTop: '10px',\n          borderColor: 'red',\n          display: 'block'\n        },\n        inputProps: {\n          style: {\n            borderColor: 'red'\n          }\n        },\n        required: true,\n        onChange: this.handleFormInput('totalFiles')\n      }, _defineProperty(_React$createElement, \"variant\", \"outlined\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(Divider, {\n        style: {\n          marginTop: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Result:\"), React.createElement(List, {\n        style: {\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.responseMissing && this.state.responseMissing && this.state.responseMissing.map(function (e) {\n        return React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: e,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }));\n      }), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Total missing: \", this.state.responseMissing && this.state.responseMissing.length)))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.searchForMissingFiles.bind(this, this.state.data.pathFolder, this.state.data.totalFiles),\n        color: \"secondary\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Link, {\n        to: \"/app/scans\",\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: \"\",\n        color: \"secondary\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return ScansMissingFilesContainer;\n}(React.Component);\n\nexport { ScansMissingFilesContainer as default };","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/scans/scansMissingFiles.container.js"],"names":["React","Dialog","DialogTitle","Grid","TextField","DialogActions","Button","Select","Input","MenuItem","Divider","Typography","Link","listAllFolders","List","ListItem","ListItemText","getMissingfiles","ScansMissingFilesContainer","props","handleFormInput","name","event","formdata","state","data","target","value","setState","getAllFoders","then","response","folders","console","log","catch","error","searchForMissingFiles","pathFolder","totalFiles","responseMissing","marginLeft","height","display","marginTop","width","float","map","e","borderColor","style","length","bind","textDecoration","color","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Dialog,DialogTitle,Grid,TextField,DialogActions,Button, Select, Input, MenuItem,Divider,Typography} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom';\r\nimport { listAllFolders } from '../module/Folders/folder.repo';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {getMissingfiles} from '../module/Folders/folder.repo';\r\n\r\n\r\nexport default class ScansMissingFilesContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          formdata: {},\r\n          data: {},\r\n          folders: [],\r\n          responseMissing: []\r\n        }\r\n      }\r\n      componentWillMount(){\r\n          this.getAllFoders();\r\n      }\r\n      handleFormInput = name => event => {\r\n        var formdata = this.state.data;\r\n        formdata[name] = event.target.value;\r\n          this.setState({\r\n            data: formdata\r\n          });\r\n      }\r\n      getAllFoders = () => {\r\n        listAllFolders().then(response => {\r\n          this.setState({\r\n            folders: response.data,\r\n          });\r\n          console.log(response);\r\n        }).catch(error =>{\r\n          console.log(error);\r\n        });\r\n      }\r\n      searchForMissingFiles = (pathFolder,totalFiles) =>{\r\n        getMissingfiles(pathFolder,totalFiles).then(response =>\r\n            {\r\n                this.setState({\r\n                    responseMissing: response.data,\r\n                });\r\n            }).catch(error =>{\r\n                console.log(error);\r\n            });\r\n      }\r\n    render(){\r\n        return(\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Search for missing files\"}</DialogTitle>\r\n              <Grid container>\r\n                  <div style={{marginLeft:'25px'}}>\r\n                  <span style={{height:15+\"px\",display:'block'}}>Please choose folder</span>\r\n              <Select\r\n                                        value={this.state.data.pathFolder}\r\n                                       onChange={this.handleFormInput('pathFolder')}\r\n                                       displayEmpty\r\n                                       style={{marginTop:\"10px\",width:'400px',float:\"left\"}}\r\n                                       variant=\"outlined\"\r\n                                   >\r\n                                      \r\n                                       {\r\n                                            this.state.folders && this.state.folders && this.state.folders &&\r\n                                            this.state.folders.map(e => (\r\n                                               <MenuItem key={e} value={e}>{e}</MenuItem>\r\n                                           ))\r\n                                       }\r\n                                   </Select>\r\n        <span style={{height:20+\"px\",display:'block',marginTop:'55px'}}>Please insert the correct amount of scans in the selected folder</span>\r\n        <TextField\r\n        id=\"total-files\"\r\n        label=\"Total files\"\r\n        variant=\"outlined\"\r\n        margin=\"dense\"\r\n        maxWidth={true}\r\n        style={{ marginTop:'10px',borderColor: 'red',display:'block'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        required\r\n        onChange={this.handleFormInput('totalFiles')}\r\n        variant=\"outlined\"\r\n      />       \r\n                    <Divider style={{ marginTop: '30px'}}/>\r\n                    <Typography variant=\"h6\">Result:</Typography>\r\n\r\n\r\n      <List style={{display:'block'}}> \r\n      {\r\n            this.state.responseMissing  && this.state.responseMissing &&\r\n            this.state.responseMissing.map(e => (\r\n            <ListItem>\r\n               <ListItemText\r\n                primary={e}\r\n                />\r\n              </ListItem>\r\n            ))\r\n            }\r\n            <ListItem>Total missing: {this.state.responseMissing && this.state.responseMissing.length}</ListItem>\r\n          </List>\r\n\r\n         </div>\r\n         \r\n           </Grid>\r\n            <DialogActions>\r\n            <Button onClick={this.searchForMissingFiles.bind(this,this.state.data.pathFolder,this.state.data.totalFiles)}\r\n             color=\"secondary\" variant=\"contained\">\r\n                    Search\r\n                </Button>\r\n            <Link to=\"/app/scans\" style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button onClick=\"\" color=\"secondary\" variant=\"outlined\">\r\n                    Cancel\r\n                </Button>\r\n            </Link>  \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}