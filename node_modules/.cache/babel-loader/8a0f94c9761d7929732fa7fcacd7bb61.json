{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\n/**\r\n * Advance width between two string indices\r\n *\r\n * @param  {number}  start glyph index\r\n * @param  {number}  end glyph index\r\n * @param  {Object}  run\r\n * @return {Object} advanced width run\r\n */\n\n\nvar advanceWidthBetween = function advanceWidthBetween(start, end, run) {\n  var runStart = R.propOr(0, 'start', run);\n  var glyphStartIndex = Math.max(0, (0, _glyphIndexAt[\"default\"])(start - runStart, run));\n  var glyphEndIndex = Math.max(0, (0, _glyphIndexAt[\"default\"])(end - runStart, run));\n  return R.compose(R.reduce(R.useWith(R.add, [R.identity, R.propOr(0, 'xAdvance')]), 0), R.slice(glyphStartIndex, glyphEndIndex), R.propOr([], 'positions'))(run);\n};\n\nvar _default = R.curryN(3, advanceWidthBetween);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@react-pdf/textkit/run/advanceWidthBetween.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_glyphIndexAt","advanceWidthBetween","start","end","run","runStart","propOr","glyphStartIndex","Math","max","glyphEndIndex","compose","reduce","useWith","add","identity","slice","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGH,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,aAAa,GAAGN,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAA1C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIM,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,GAApC,EAAyCC,GAAzC,EAA8C;AACtE,MAAIC,QAAQ,GAAGN,CAAC,CAACO,MAAF,CAAS,CAAT,EAAY,OAAZ,EAAqBF,GAArB,CAAf;AACA,MAAIG,eAAe,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,GAAGT,aAAa,CAAC,SAAD,CAAjB,EAA8BE,KAAK,GAAGG,QAAtC,EAAgDD,GAAhD,CAAZ,CAAtB;AACA,MAAIM,aAAa,GAAGF,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,GAAGT,aAAa,CAAC,SAAD,CAAjB,EAA8BG,GAAG,GAAGE,QAApC,EAA8CD,GAA9C,CAAZ,CAApB;AACA,SAAOL,CAAC,CAACY,OAAF,CAAUZ,CAAC,CAACa,MAAF,CAASb,CAAC,CAACc,OAAF,CAAUd,CAAC,CAACe,GAAZ,EAAiB,CAACf,CAAC,CAACgB,QAAH,EAAahB,CAAC,CAACO,MAAF,CAAS,CAAT,EAAY,UAAZ,CAAb,CAAjB,CAAT,EAAkE,CAAlE,CAAV,EAAgFP,CAAC,CAACiB,KAAF,CAAQT,eAAR,EAAyBG,aAAzB,CAAhF,EAAyHX,CAAC,CAACO,MAAF,CAAS,EAAT,EAAa,WAAb,CAAzH,EAAoJF,GAApJ,CAAP;AACD,CALD;;AAOA,IAAIa,QAAQ,GAAGlB,CAAC,CAACmB,MAAF,CAAS,CAAT,EAAYjB,mBAAZ,CAAf;;AAEAJ,OAAO,CAAC,SAAD,CAAP,GAAqBoB,QAArB","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar R = _interopRequireWildcard(require(\"ramda\"));\r\n\r\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\r\n\r\n/**\r\n * Advance width between two string indices\r\n *\r\n * @param  {number}  start glyph index\r\n * @param  {number}  end glyph index\r\n * @param  {Object}  run\r\n * @return {Object} advanced width run\r\n */\r\nvar advanceWidthBetween = function advanceWidthBetween(start, end, run) {\r\n  var runStart = R.propOr(0, 'start', run);\r\n  var glyphStartIndex = Math.max(0, (0, _glyphIndexAt[\"default\"])(start - runStart, run));\r\n  var glyphEndIndex = Math.max(0, (0, _glyphIndexAt[\"default\"])(end - runStart, run));\r\n  return R.compose(R.reduce(R.useWith(R.add, [R.identity, R.propOr(0, 'xAdvance')]), 0), R.slice(glyphStartIndex, glyphEndIndex), R.propOr([], 'positions'))(run);\r\n};\r\n\r\nvar _default = R.curryN(3, advanceWidthBetween);\r\n\r\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}