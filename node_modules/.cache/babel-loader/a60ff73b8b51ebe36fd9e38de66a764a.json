{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOrientation = getOrientation;\nexports.sameOrientation = sameOrientation;\n/**\r\n * An arrow key on the keyboard\r\n * @typedef {'up'|'right'|'down'|'left'} ArrowKey\r\n */\n\n/**\r\n *\r\n * @param direction {string}\r\n * @returns value usable in aria-orientation or undefined if no ArrowKey given\r\n */\n\nfunction getOrientation(direction) {\n  if (direction === 'up' || direction === 'down') {\n    return 'vertical';\n  }\n\n  if (direction === 'right' || direction === 'left') {\n    return 'horizontal';\n  }\n\n  return undefined;\n}\n/**\r\n * @param {string} directionA\r\n * @param {string} directionB\r\n * @returns {boolean}\r\n */\n\n\nfunction sameOrientation(directionA, directionB) {\n  return getOrientation(directionA) === getOrientation(directionB);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/lab/SpeedDial/utils.js"],"names":["Object","defineProperty","exports","value","getOrientation","sameOrientation","direction","undefined","directionA","directionB"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBA,cAAzB;AACAF,OAAO,CAACG,eAAR,GAA0BA,eAA1B;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASD,cAAT,CAAwBE,SAAxB,EAAmC;AACjC,MAAIA,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,MAAxC,EAAgD;AAC9C,WAAO,UAAP;AACD;;AAED,MAAIA,SAAS,KAAK,OAAd,IAAyBA,SAAS,KAAK,MAA3C,EAAmD;AACjD,WAAO,YAAP;AACD;;AAED,SAAOC,SAAP;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASF,eAAT,CAAyBG,UAAzB,EAAqCC,UAArC,EAAiD;AAC/C,SAAOL,cAAc,CAACI,UAAD,CAAd,KAA+BJ,cAAc,CAACK,UAAD,CAApD;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOrientation = getOrientation;\nexports.sameOrientation = sameOrientation;\n\n/**\r\n * An arrow key on the keyboard\r\n * @typedef {'up'|'right'|'down'|'left'} ArrowKey\r\n */\n\n/**\r\n *\r\n * @param direction {string}\r\n * @returns value usable in aria-orientation or undefined if no ArrowKey given\r\n */\nfunction getOrientation(direction) {\n  if (direction === 'up' || direction === 'down') {\n    return 'vertical';\n  }\n\n  if (direction === 'right' || direction === 'left') {\n    return 'horizontal';\n  }\n\n  return undefined;\n}\n/**\r\n * @param {string} directionA\r\n * @param {string} directionB\r\n * @returns {boolean}\r\n */\n\n\nfunction sameOrientation(directionA, directionB) {\n  return getOrientation(directionA) === getOrientation(directionB);\n}"]},"metadata":{},"sourceType":"script"}