{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = theme => _extends({\n  color: theme.palette.text.primary\n}, theme.typography.body2, {\n  backgroundColor: theme.palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: theme.palette.common.white\n  }\n});\nexport var styles = theme => ({\n  '@global': {\n    html,\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: theme.palette.background.default\n      }\n    })\n  }\n});\n/**\r\n * Kickstart an elegant, consistent, and simple baseline to build upon.\r\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * You can wrap a node.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/CssBaseline/CssBaseline.js"],"names":["_extends","React","PropTypes","withStyles","exactProp","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","theme","color","palette","text","primary","typography","body2","backgroundColor","background","default","common","white","styles","fontWeight","fontWeightBold","margin","CssBaseline","props","children","classes","createElement","Fragment","process","env","NODE_ENV","propTypes","node","object","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAO,IAAMC,IAAI,GAAG;AAClBC,EAAAA,mBAAmB,EAAE,aADH;AAElB;AACAC,EAAAA,mBAAmB,EAAE,WAHH;AAIlB;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AAPO,CAAb;AASP,OAAO,IAAMC,IAAI,GAAGC,KAAK,IAAIV,QAAQ,CAAC;AACpCW,EAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmBC;AADU,CAAD,EAElCJ,KAAK,CAACK,UAAN,CAAiBC,KAFiB,EAEV;AACzBC,EAAAA,eAAe,EAAEP,KAAK,CAACE,OAAN,CAAcM,UAAd,CAAyBC,OADjB;AAEzB,kBAAgB;AACd;AACAF,IAAAA,eAAe,EAAEP,KAAK,CAACE,OAAN,CAAcQ,MAAd,CAAqBC;AAFxB;AAFS,CAFU,CAA9B;AASP,OAAO,IAAMC,MAAM,GAAGZ,KAAK,KAAK;AAC9B,aAAW;AACTL,IAAAA,IADS;AAET,8BAA0B;AACxBG,MAAAA,SAAS,EAAE;AADa,KAFjB;AAKT,iBAAa;AACXe,MAAAA,UAAU,EAAEb,KAAK,CAACK,UAAN,CAAiBS;AADlB,KALJ;AAQTf,IAAAA,IAAI,EAAET,QAAQ,CAAC;AACbyB,MAAAA,MAAM,EAAE;AADK,KAAD,EAEXhB,IAAI,CAACC,KAAD,CAFO,EAEE;AACd;AACA;AACA,qBAAe;AACbO,QAAAA,eAAe,EAAEP,KAAK,CAACE,OAAN,CAAcM,UAAd,CAAyBC;AAD7B;AAHD,KAFF;AARL;AADmB,CAAL,CAApB;AAoBP;AACA;AACA;;AAEA,SAASO,WAAT,CAAqBC,KAArB,EAA4B;AAC1B;AAD0B,wBAKtBA,KALsB,CAGxBC,QAHwB;AAAA,MAGxBA,QAHwB,gCAGb,IAHa;AAAA,MAIxBC,OAJwB,GAKtBF,KALsB,CAIxBE,OAJwB;AAM1B;;AAEA,SAAO,aAAa5B,KAAK,CAAC6B,aAAN,CAAoB7B,KAAK,CAAC8B,QAA1B,EAAoC,IAApC,EAA0CH,QAA1C,CAApB;AACD;;AAEDI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCR,WAAW,CAACS,SAAZ,GAAwB;AAC9D;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEP,EAAAA,QAAQ,EAAE1B,SAAS,CAACkC,IAT0C;;AAW9D;AACF;AACA;AACA;AACEP,EAAAA,OAAO,EAAE3B,SAAS,CAACmC;AAf2C,CAAhE,GAgBI,KAAK,CAhBT;;AAkBA,IAAIL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAR,EAAAA,WAAW,CAAC,cAAc,EAAf,CAAX,GAAgCtB,SAAS,CAACsB,WAAW,CAACS,SAAb,CAAzC;AACD;;AAED,eAAehC,UAAU,CAACmB,MAAD,EAAS;AAChCgB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZZ,WAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '../styles/withStyles';\r\nimport { exactProp } from '@material-ui/utils';\r\nexport const html = {\r\n  WebkitFontSmoothing: 'antialiased',\r\n  // Antialiasing.\r\n  MozOsxFontSmoothing: 'grayscale',\r\n  // Antialiasing.\r\n  // Change from `box-sizing: content-box` so that `width`\r\n  // is not affected by `padding` or `border`.\r\n  boxSizing: 'border-box'\r\n};\r\nexport const body = theme => _extends({\r\n  color: theme.palette.text.primary\r\n}, theme.typography.body2, {\r\n  backgroundColor: theme.palette.background.default,\r\n  '@media print': {\r\n    // Save printer ink.\r\n    backgroundColor: theme.palette.common.white\r\n  }\r\n});\r\nexport const styles = theme => ({\r\n  '@global': {\r\n    html,\r\n    '*, *::before, *::after': {\r\n      boxSizing: 'inherit'\r\n    },\r\n    'strong, b': {\r\n      fontWeight: theme.typography.fontWeightBold\r\n    },\r\n    body: _extends({\r\n      margin: 0\r\n    }, body(theme), {\r\n      // Add support for document.body.requestFullScreen().\r\n      // Other elements, if background transparent, are not supported.\r\n      '&::backdrop': {\r\n        backgroundColor: theme.palette.background.default\r\n      }\r\n    })\r\n  }\r\n});\r\n/**\r\n * Kickstart an elegant, consistent, and simple baseline to build upon.\r\n */\r\n\r\nfunction CssBaseline(props) {\r\n  /* eslint-disable no-unused-vars */\r\n  const {\r\n    children = null,\r\n    classes\r\n  } = props;\r\n  /* eslint-enable no-unused-vars */\r\n\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\r\n}\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * You can wrap a node.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object\r\n} : void 0;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // eslint-disable-next-line\r\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\r\n}\r\n\r\nexport default withStyles(styles, {\r\n  name: 'MuiCssBaseline'\r\n})(CssBaseline);"]},"metadata":{},"sourceType":"module"}