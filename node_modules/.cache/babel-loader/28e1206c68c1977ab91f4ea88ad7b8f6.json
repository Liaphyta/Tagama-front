{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/**\r\n * Returns new array starting with zero, and keeping same relation between consecutive values\r\n *\r\n * @param  {Array[number]}  list\r\n * @return {boolean} normalized array\r\n */\n\n\nvar normalize = function normalize(array) {\n  return R.map(R.subtract(R.__, R.head(array)))(array);\n};\n\nvar _default = normalize;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@react-pdf/textkit/indices/normalize.js"],"names":["_interopRequireWildcard","require","exports","__esModule","R","normalize","array","map","subtract","__","head","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGJ,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAII,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxC,SAAOF,CAAC,CAACG,GAAF,CAAMH,CAAC,CAACI,QAAF,CAAWJ,CAAC,CAACK,EAAb,EAAiBL,CAAC,CAACM,IAAF,CAAOJ,KAAP,CAAjB,CAAN,EAAuCA,KAAvC,CAAP;AACD,CAFD;;AAIA,IAAIK,QAAQ,GAAGN,SAAf;AACAH,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar R = _interopRequireWildcard(require(\"ramda\"));\r\n\r\n/**\r\n * Returns new array starting with zero, and keeping same relation between consecutive values\r\n *\r\n * @param  {Array[number]}  list\r\n * @return {boolean} normalized array\r\n */\r\nvar normalize = function normalize(array) {\r\n  return R.map(R.subtract(R.__, R.head(array)))(array);\r\n};\r\n\r\nvar _default = normalize;\r\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}