{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    zIndex: theme.zIndex.modal,\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0\n  },\n\n  /* Styles applied to the root element if the `Modal` has exited. */\n  hidden: {\n    visibility: 'hidden'\n  }\n});\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutPropertiesLoose(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = () => ownerDocument(mountNodeRef.current);\n\n  var getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(() => {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  var handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(() => {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = () => {\n    setExited(false);\n  };\n\n  var handleExited = () => {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = event => {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\r\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\r\n   * A single child content element.\r\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\r\n   * A HTML element, component instance, or function that returns either.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, clicking the backdrop will not fire `onClose`.\r\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, hitting escape will not fire `onClose`.\r\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\r\n   * Disable the portal behavior.\r\n   * The children stay within it's parent DOM hierarchy.\r\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\r\n   * Disable the scroll lock behavior.\r\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  manager: PropTypes.object,\n\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired when the escape key is pressed,\r\n   * `disableEscapeKeyDown` is false and the modal is in focus.\r\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\r\n   * Callback fired once the children has been mounted into the `container`.\r\n   * It signals that the `open={true}` prop took effect.\r\n   *\r\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\r\n   */\n  onRendered: PropTypes.func,\n\n  /**\r\n   * If `true`, the modal is open.\r\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/Modal/Modal.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","ReactDOM","PropTypes","getThemeProps","useTheme","elementAcceptingRef","HTMLElementType","ownerDocument","Portal","createChainedFunction","useForkRef","useEventCallback","zIndex","ModalManager","ariaHidden","TrapFocus","SimpleBackdrop","getContainer","container","findDOMNode","getHasTransition","props","children","hasOwnProperty","defaultManager","styles","theme","root","position","modal","right","bottom","top","left","hidden","visibility","Modal","forwardRef","inProps","ref","name","BackdropComponent","BackdropProps","closeAfterTransition","disableAutoFocus","disableBackdropClick","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open","other","useState","exited","setExited","useRef","mountNodeRef","modalRef","handleRef","hasTransition","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","inlineStyle","childProps","tabIndex","undefined","onEnter","onExited","createElement","onKeyDown","role","style","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","elementType","object","isRequired","bool","oneOfType","instanceOf","Component","func"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getThemeProps, useTheme } from '@material-ui/styles';\r\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport Portal from '../Portal';\r\nimport createChainedFunction from '../utils/createChainedFunction';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport zIndex from '../styles/zIndex';\r\nimport ModalManager, { ariaHidden } from './ModalManager';\r\nimport TrapFocus from '../Unstable_TrapFocus';\r\nimport SimpleBackdrop from './SimpleBackdrop';\r\n\r\nfunction getContainer(container) {\r\n  container = typeof container === 'function' ? container() : container;\r\n  return ReactDOM.findDOMNode(container);\r\n}\r\n\r\nfunction getHasTransition(props) {\r\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\r\n} // A modal manager used to track and manage the state of open Modals.\r\n// Modals don't open on the server so this won't conflict with concurrent requests.\r\n\r\n\r\nconst defaultManager = new ModalManager();\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    position: 'fixed',\r\n    zIndex: theme.zIndex.modal,\r\n    right: 0,\r\n    bottom: 0,\r\n    top: 0,\r\n    left: 0\r\n  },\r\n\r\n  /* Styles applied to the root element if the `Modal` has exited. */\r\n  hidden: {\r\n    visibility: 'hidden'\r\n  }\r\n});\r\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\r\n\r\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\r\n  const theme = useTheme();\r\n  const props = getThemeProps({\r\n    name: 'MuiModal',\r\n    props: _extends({}, inProps),\r\n    theme\r\n  });\r\n\r\n  const {\r\n    BackdropComponent = SimpleBackdrop,\r\n    BackdropProps,\r\n    children,\r\n    closeAfterTransition = false,\r\n    container,\r\n    disableAutoFocus = false,\r\n    disableBackdropClick = false,\r\n    disableEnforceFocus = false,\r\n    disableEscapeKeyDown = false,\r\n    disablePortal = false,\r\n    disableRestoreFocus = false,\r\n    disableScrollLock = false,\r\n    hideBackdrop = false,\r\n    keepMounted = false,\r\n    manager = defaultManager,\r\n    onBackdropClick,\r\n    onClose,\r\n    onEscapeKeyDown,\r\n    onRendered,\r\n    open\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\r\n\r\n  const [exited, setExited] = React.useState(true);\r\n  const modal = React.useRef({});\r\n  const mountNodeRef = React.useRef(null);\r\n  const modalRef = React.useRef(null);\r\n  const handleRef = useForkRef(modalRef, ref);\r\n  const hasTransition = getHasTransition(props);\r\n\r\n  const getDoc = () => ownerDocument(mountNodeRef.current);\r\n\r\n  const getModal = () => {\r\n    modal.current.modalRef = modalRef.current;\r\n    modal.current.mountNode = mountNodeRef.current;\r\n    return modal.current;\r\n  };\r\n\r\n  const handleMounted = () => {\r\n    manager.mount(getModal(), {\r\n      disableScrollLock\r\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\r\n\r\n    modalRef.current.scrollTop = 0;\r\n  };\r\n\r\n  const handleOpen = useEventCallback(() => {\r\n    const resolvedContainer = getContainer(container) || getDoc().body;\r\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\r\n\r\n    if (modalRef.current) {\r\n      handleMounted();\r\n    }\r\n  });\r\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\r\n  const handlePortalRef = useEventCallback(node => {\r\n    mountNodeRef.current = node;\r\n\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    if (onRendered) {\r\n      onRendered();\r\n    }\r\n\r\n    if (open && isTopModal()) {\r\n      handleMounted();\r\n    } else {\r\n      ariaHidden(modalRef.current, true);\r\n    }\r\n  });\r\n  const handleClose = React.useCallback(() => {\r\n    manager.remove(getModal());\r\n  }, [manager]);\r\n  React.useEffect(() => {\r\n    return () => {\r\n      handleClose();\r\n    };\r\n  }, [handleClose]);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      handleOpen();\r\n    } else if (!hasTransition || !closeAfterTransition) {\r\n      handleClose();\r\n    }\r\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\r\n\r\n  if (!keepMounted && !open && (!hasTransition || exited)) {\r\n    return null;\r\n  }\r\n\r\n  const handleEnter = () => {\r\n    setExited(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    setExited(true);\r\n\r\n    if (closeAfterTransition) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.target !== event.currentTarget) {\r\n      return;\r\n    }\r\n\r\n    if (onBackdropClick) {\r\n      onBackdropClick(event);\r\n    }\r\n\r\n    if (!disableBackdropClick && onClose) {\r\n      onClose(event, 'backdropClick');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    // The handler doesn't take event.defaultPrevented into account:\r\n    //\r\n    // event.preventDefault() is meant to stop default behaviours like\r\n    // clicking a checkbox to check it, hitting a button to submit a form,\r\n    // and hitting left arrow to move the cursor in a text input etc.\r\n    // Only special HTML elements have these default behaviors.\r\n    if (event.key !== 'Escape' || !isTopModal()) {\r\n      return;\r\n    }\r\n\r\n    if (onEscapeKeyDown) {\r\n      onEscapeKeyDown(event);\r\n    }\r\n\r\n    if (!disableEscapeKeyDown) {\r\n      // Swallow the event, in case someone is listening for the escape key on the body.\r\n      event.stopPropagation();\r\n\r\n      if (onClose) {\r\n        onClose(event, 'escapeKeyDown');\r\n      }\r\n    }\r\n  };\r\n\r\n  const inlineStyle = styles(theme || {\r\n    zIndex\r\n  });\r\n  const childProps = {};\r\n\r\n  if (children.props.tabIndex === undefined) {\r\n    childProps.tabIndex = children.props.tabIndex || '-1';\r\n  } // It's a Transition like component\r\n\r\n\r\n  if (hasTransition) {\r\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\r\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(Portal, {\r\n    ref: handlePortalRef,\r\n    container: container,\r\n    disablePortal: disablePortal\r\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    ref: handleRef,\r\n    onKeyDown: handleKeyDown,\r\n    role: \"presentation\"\r\n  }, other, {\r\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\r\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\r\n    open: open,\r\n    onClick: handleBackdropClick\r\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\r\n    disableEnforceFocus: disableEnforceFocus,\r\n    disableAutoFocus: disableAutoFocus,\r\n    disableRestoreFocus: disableRestoreFocus,\r\n    getDoc: getDoc,\r\n    isEnabled: isTopModal,\r\n    open: open\r\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\r\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   */\r\n  BackdropComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\r\n   */\r\n  BackdropProps: PropTypes.object,\r\n\r\n  /**\r\n   * A single child content element.\r\n   */\r\n  children: elementAcceptingRef.isRequired,\r\n\r\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   */\r\n  closeAfterTransition: PropTypes.bool,\r\n\r\n  /**\r\n   * A HTML element, component instance, or function that returns either.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\r\n  container: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\r\n\r\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  disableAutoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, clicking the backdrop will not fire `onClose`.\r\n   */\r\n  disableBackdropClick: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  disableEnforceFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, hitting escape will not fire `onClose`.\r\n   */\r\n  disableEscapeKeyDown: PropTypes.bool,\r\n\r\n  /**\r\n   * Disable the portal behavior.\r\n   * The children stay within it's parent DOM hierarchy.\r\n   */\r\n  disablePortal: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   */\r\n  disableRestoreFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Disable the scroll lock behavior.\r\n   */\r\n  disableScrollLock: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   */\r\n  hideBackdrop: PropTypes.bool,\r\n\r\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   */\r\n  keepMounted: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  manager: PropTypes.object,\r\n\r\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the escape key is pressed,\r\n   * `disableEscapeKeyDown` is false and the modal is in focus.\r\n   */\r\n  onEscapeKeyDown: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired once the children has been mounted into the `container`.\r\n   * It signals that the `open={true}` prop took effect.\r\n   *\r\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\r\n   */\r\n  onRendered: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the modal is open.\r\n   */\r\n  open: PropTypes.bool.isRequired\r\n} : void 0;\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}