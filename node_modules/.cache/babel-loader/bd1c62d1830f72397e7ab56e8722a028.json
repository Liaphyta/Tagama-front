{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\r\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\r\n * It provides compact row layout.\r\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\r\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Display group of elements in a compact row.\r\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/FormGroup/FormGroup.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","styles","root","display","flexDirection","flexWrap","row","FormGroup","forwardRef","props","ref","classes","className","other","createElement","process","env","NODE_ENV","propTypes","children","node","object","string","bool","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAFc;;AAQpB;AACAC,EAAAA,GAAG,EAAE;AACHF,IAAAA,aAAa,EAAE;AADZ;AATe,CAAf;AAaP;AACA;AACA;AACA;AACA;;AAEA,IAAMG,SAAS,GAAG,aAAaV,KAAK,CAACW,UAAN,CAAiB,SAASD,SAAT,CAAmBE,KAAnB,EAA0BC,GAA1B,EAA+B;AAAA,MAE3EC,OAF2E,GAKzEF,KALyE,CAE3EE,OAF2E;AAAA,MAG3EC,SAH2E,GAKzEH,KALyE,CAG3EG,SAH2E;AAAA,mBAKzEH,KALyE,CAI3EH,GAJ2E;AAAA,MAI3EA,GAJ2E,2BAIrE,KAJqE;AAAA,MAMvEO,KANuE,GAM/DjB,6BAA6B,CAACa,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,KAAzB,CAAR,CANkC;;AAQ7E,SAAO,aAAaZ,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2BnB,QAAQ,CAAC;AACtDiB,IAAAA,SAAS,EAAEb,IAAI,CAACY,OAAO,CAACT,IAAT,EAAeU,SAAf,EAA0BN,GAAG,IAAIK,OAAO,CAACL,GAAzC,CADuC;AAEtDI,IAAAA,GAAG,EAAEA;AAFiD,GAAD,EAGpDG,KAHoD,CAAnC,CAApB;AAID,CAZ8B,CAA/B;AAaAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,SAAS,CAACW,SAAV,GAAsB;AAC5D;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,IATwC;;AAW5D;AACF;AACA;AACA;AACET,EAAAA,OAAO,EAAEb,SAAS,CAACuB,MAfyC;;AAiB5D;AACF;AACA;AACET,EAAAA,SAAS,EAAEd,SAAS,CAACwB,MApBuC;;AAsB5D;AACF;AACA;AACEhB,EAAAA,GAAG,EAAER,SAAS,CAACyB;AAzB6C,CAA9D,GA0BI,KAAK,CA1BT;AA2BA,eAAevB,UAAU,CAACC,MAAD,EAAS;AAChCuB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZjB,SAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nexport const styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap'\r\n  },\r\n\r\n  /* Styles applied to the root element if `row={true}`. */\r\n  row: {\r\n    flexDirection: 'row'\r\n  }\r\n};\r\n/**\r\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\r\n * It provides compact row layout.\r\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\r\n */\r\n\r\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\r\n  const {\r\n    classes,\r\n    className,\r\n    row = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"row\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    className: clsx(classes.root, className, row && classes.row),\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Display group of elements in a compact row.\r\n   */\r\n  row: PropTypes.bool\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiFormGroup'\r\n})(FormGroup);"]},"metadata":{},"sourceType":"module"}