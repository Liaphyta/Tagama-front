{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\module\\\\reports\\\\reportsIndividual.container.js\";\nimport React from 'react';\nimport { Dialog, DialogTitle, Grid, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { getByDate } from './reports.repo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { dispatchAction } from '../../..';\n\nvar ReportsIndividualContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportsIndividualContainer, _React$Component);\n\n  function ReportsIndividualContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ReportsIndividualContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReportsIndividualContainer).call(this, props));\n\n    _this.formatDate = function (dateString) {\n      var newDateStringArr = dateString.split('T')[0];\n      var dateYear = newDateStringArr.split('-')[0];\n      var dateMonth = newDateStringArr.split('-')[1];\n      var dateDay = newDateStringArr.split('-')[2];\n      return dateDay + \" \" + dateMonth + \" \" + dateYear;\n    };\n\n    _this.handleChangePage = function (event, page) {\n      if (_this.state.data && _this.state.data.data && _this.state.data.data.size) {\n        _this.listBooksAndRecords(_this.props.match.params.date, page, _this.state.data.data.size);\n      } else {\n        _this.listBooksAndRecords(_this.props.match.params.date, page, 5);\n      }\n    };\n\n    _this.onChangeRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPages: event.target.value\n      });\n\n      _this.listBooksAndRecords(_this.props.match.params.date, 0, event.target.value);\n    };\n\n    _this.listBooksAndRecords = function (date, page, size) {\n      dispatchAction({\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\n      });\n      getByDate(date, page, size).then(function (response) {\n        _this.setState({\n          data: response,\n          loading: false\n        }, dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        }));\n\n        console.log(response);\n      }).catch(function (error) {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      rowsPerPages: 5,\n      data: {},\n      formdata: {},\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(ReportsIndividualContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.listBooksAndRecords(this.props.match.params.date, 0, 5);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Dialog, {\n        open: true,\n        maxWidth: \"md\",\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        \"aria-describedby\": \"max-width-dialog-description\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Report for date \" + this.formatDate(this.props.match.params.date)), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.loading && React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          marginLeft: '420px',\n          marginTop: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 50,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Number of records on the date\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.data && this.state.data.data && this.state.data.data.content && this.state.data.data.content.map(function (item) {\n        return React.createElement(TableRow, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, item.nameRegisterBook), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, item.numberOfRecords));\n      }))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: this.state.data.data ? this.state.data.data.totalElements : 0,\n        rowsPerPage: this.state.rowsPerPages,\n        page: this.state.data.data ? this.state.data.data.number : 0,\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.onChangeRowsPerPage,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/app/reports\",\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: \"\",\n        color: \"secondary\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Exit\"))));\n    }\n  }]);\n\n  return ReportsIndividualContainer;\n}(React.Component);\n\nexport { ReportsIndividualContainer as default };","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/module/reports/reportsIndividual.container.js"],"names":["React","Dialog","DialogTitle","Grid","DialogActions","Button","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Link","getByDate","CircularProgress","dispatchAction","ReportsIndividualContainer","props","formatDate","dateString","newDateStringArr","split","dateYear","dateMonth","dateDay","handleChangePage","event","page","state","data","size","listBooksAndRecords","match","params","date","onChangeRowsPerPage","setState","rowsPerPages","target","value","type","then","response","loading","console","log","catch","error","formdata","position","marginLeft","marginTop","content","map","item","id","nameRegisterBook","numberOfRecords","totalElements","number","textDecoration","color","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Dialog,DialogTitle,Grid,DialogActions,Button,Table,TableHead,TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { getByDate } from './reports.repo';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { dispatchAction } from '../../..';\r\n\r\n\r\nexport default class ReportsIndividualContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          rowsPerPages: 5,\r\n          data: {},\r\n          formdata: {},\r\n          loading: true\r\n        }\r\n        \r\n      }\r\n      componentWillMount(){\r\n         this.listBooksAndRecords(this.props.match.params.date,0,5)\r\n      }\r\n    formatDate = (dateString) => {\r\n        var newDateStringArr = dateString.split('T')[0];\r\n        var dateYear=newDateStringArr.split('-')[0];\r\n        var dateMonth=newDateStringArr.split('-')[1];\r\n        var dateDay=newDateStringArr.split('-')[2];\r\n        return dateDay+\" \"+dateMonth+\" \"+dateYear;\r\n        }\r\n        handleChangePage = (event, page) => {\r\n             \r\n            if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n              this.listBooksAndRecords(this.props.match.params.date,page,this.state.data.data.size);\r\n            }else{\r\n              this.listBooksAndRecords(this.props.match.params.date,page, 5);\r\n            }\r\n        }\r\n        onChangeRowsPerPage = (event) => {\r\n            this.setState({\r\n                rowsPerPages: event.target.value\r\n            })\r\n            this.listBooksAndRecords(this.props.match.params.date,0,event.target.value);\r\n        }\r\n\r\n    listBooksAndRecords = (date,page,size) => {\r\n            dispatchAction({\r\n              type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n            });\r\n            getByDate(date,page,size).then(response => {\r\n              this.setState({\r\n                data: response,\r\n                loading:false\r\n              },\r\n              dispatchAction({\r\n                type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n              })\r\n              );\r\n              console.log(response);\r\n            }).catch(error => {\r\n              dispatchAction({\r\n                type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n              });\r\n              console.log(error);\r\n            });\r\n          }   \r\n    \r\n    render(){\r\n        return (\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Report for date \"+this.formatDate(this.props.match.params.date)}</DialogTitle>\r\n              <Grid container>\r\n              {this.state.loading && <div  style={{position: 'absolute',marginLeft:'420px',marginTop:'60px'}}>{<CircularProgress size={50} color=\"secondary\" />}</div>}\r\n\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Number of records on the date\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.nameRegisterBook}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.numberOfRecords}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n                  \r\n              </Grid>\r\n            <DialogActions> \r\n            <Link to=\"/app/reports\" style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button onClick=\"\" color=\"secondary\" variant=\"outlined\">\r\n                  Exit\r\n                </Button>\r\n            </Link>       \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}