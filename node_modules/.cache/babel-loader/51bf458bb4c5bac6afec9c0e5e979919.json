{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: theme.palette.text.primary,\n    fontSize: theme.typography.pxToRem(14),\n    overflow: 'auto',\n    // Increase the specificity to override TableCell.\n    '&:last-child': {\n      padding: 0\n    }\n  },\n\n  /* Styles applied to the Toolbar component. */\n  toolbar: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n\n  /* Styles applied to the spacer element. */\n  spacer: {\n    flex: '1 1 100%'\n  },\n\n  /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n  caption: {\n    flexShrink: 0\n  },\n  // TODO v5: `.selectRoot` should be merged with `.input`\n\n  /* Styles applied to the Select component root element. */\n  selectRoot: {\n    marginRight: 32,\n    marginLeft: 8\n  },\n\n  /* Styles applied to the Select component `select` class. */\n  select: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  },\n  // TODO v5: remove\n\n  /* Styles applied to the Select component `icon` class. */\n  selectIcon: {},\n\n  /* Styles applied to the `InputBase` component. */\n  input: {\n    color: 'inherit',\n    fontSize: 'inherit',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the MenuItem component. */\n  menuItem: {},\n\n  /* Styles applied to the internal `TablePaginationActions` component. */\n  actions: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n});\n\nvar defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count\n}) => \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutPropertiesLoose(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/React.createElement(MenuItemComponent, {\n    className: classes.menuItem,\n    key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n    value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n  }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, props => {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/core/es/TablePagination/TablePagination.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","chainPropTypes","clsx","withStyles","InputBase","MenuItem","Select","TableCell","Toolbar","Typography","TablePaginationActions","useId","styles","theme","root","color","palette","text","primary","fontSize","typography","pxToRem","overflow","padding","toolbar","minHeight","paddingRight","spacer","flex","caption","flexShrink","selectRoot","marginRight","marginLeft","select","paddingLeft","textAlign","textAlignLast","selectIcon","input","menuItem","actions","defaultLabelDisplayedRows","from","to","count","defaultRowsPerPageOptions","TablePagination","forwardRef","props","ref","ActionsComponent","backIconButtonProps","backIconButtonText","classes","className","colSpanProp","colSpan","component","Component","labelDisplayedRows","labelRowsPerPage","nextIconButtonProps","nextIconButtonText","onChangePage","onChangeRowsPerPage","page","rowsPerPage","rowsPerPageOptions","SelectProps","other","selectId","labelId","MenuItemComponent","native","createElement","length","variant","id","icon","value","onChange","map","rowsPerPageOption","key","label","Math","min","title","process","env","NODE_ENV","propTypes","elementType","object","string","isRequired","number","func","node","newLastPage","max","ceil","Error","array","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: theme.palette.text.primary,\n    fontSize: theme.typography.pxToRem(14),\n    overflow: 'auto',\n    // Increase the specificity to override TableCell.\n    '&:last-child': {\n      padding: 0\n    }\n  },\n\n  /* Styles applied to the Toolbar component. */\n  toolbar: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n\n  /* Styles applied to the spacer element. */\n  spacer: {\n    flex: '1 1 100%'\n  },\n\n  /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n  caption: {\n    flexShrink: 0\n  },\n  // TODO v5: `.selectRoot` should be merged with `.input`\n\n  /* Styles applied to the Select component root element. */\n  selectRoot: {\n    marginRight: 32,\n    marginLeft: 8\n  },\n\n  /* Styles applied to the Select component `select` class. */\n  select: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  },\n  // TODO v5: remove\n\n  /* Styles applied to the Select component `icon` class. */\n  selectIcon: {},\n\n  /* Styles applied to the `InputBase` component. */\n  input: {\n    color: 'inherit',\n    fontSize: 'inherit',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the MenuItem component. */\n  menuItem: {},\n\n  /* Styles applied to the internal `TablePaginationActions` component. */\n  actions: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n});\n\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count\n}) => `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`;\n\nconst defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    backIconButtonText = 'Previous page',\n    classes,\n    className,\n    colSpan: colSpanProp,\n    component: Component = TableCell,\n    count,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    nextIconButtonText = 'Next page',\n    onChangePage,\n    onChangeRowsPerPage,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = defaultRowsPerPageOptions,\n    SelectProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  let colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId();\n  const labelId = useId();\n  const MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/React.createElement(MenuItemComponent, {\n    className: classes.menuItem,\n    key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n    value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n  }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"]},"metadata":{},"sourceType":"module"}