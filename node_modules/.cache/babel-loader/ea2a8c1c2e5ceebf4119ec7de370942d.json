{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\module\\\\groups\\\\update.groups\\\\update.groups.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { clearGroup, fetchGroup, resetRedirect, updateGroup } from '../groups.actions';\nimport { Group } from '../../../model/group.model';\nimport { Link, Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nexport var UpdateGroupContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UpdateGroupContainer, _React$Component);\n\n  function UpdateGroupContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateGroupContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateGroupContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      singlegroup: new Group({\n        type: ''\n      }),\n      redirectBack: false\n    };\n\n    _this.redirectBack = function () {\n      _this.props.resetRedirect();\n\n      return React.createElement(Redirect, {\n        to: \"/app/groups\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    };\n\n    _this.handleGroupFormChange = function (name) {\n      return function (event) {\n        var group = _this.state.singlegroup;\n        group[name] = event.target.value;\n\n        _this.setState({\n          singlegroup: group\n        });\n      };\n    };\n\n    _this.handleSubmit = function () {\n      _this.props.updateGroup(_this.state.singlegroup);\n    };\n\n    return _this;\n  }\n\n  _createClass(UpdateGroupContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchGroup(this.props.match.params.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.clearGroup();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.singlegroup != -1 && this.props.singlegroup !== undefined && (this.state.singlegroup === undefined || this.state.singlegroup.id === undefined) && this.props.singlegroup != this.state.singlegroup) {\n        var group = this.props.singlegroup;\n        this.setState({\n          singlegroup: group\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: true,\n        fullWidth: true,\n        maxWidth: \"md\",\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"simple-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Update group \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.singlegroup ? this.props.singlegroup.name : '')), this.props.loading == true ? React.createElement(LinearProgress, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        style: {\n          height: 5 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), this.state.singlegroup !== undefined ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        maxWidth: \"md\",\n        className: \"dialog-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"id\",\n        label: \"(ID)\",\n        onChange: this.handleGroupFormChange('id'),\n        fullWidth: true,\n        value: this.state.singlegroup.id ? this.state.singlegroup.id : '',\n        margin: \"normal\",\n        InputProps: {\n          disabled: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"name\",\n        label: \"Name\",\n        onChange: this.handleGroupFormChange('name'),\n        fullWidth: true,\n        value: this.state.singlegroup.name ? this.state.singlegroup.name : '',\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/app/groups\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.handleSubmit();\n        },\n        color: \"primary\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"UPDATE\")))) : '', this.props.redirectBack ? this.redirectBack() : ''));\n    }\n  }]);\n\n  return UpdateGroupContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    singlegroup: state.groupsReducer.singlegroup,\n    redirectBack: state.groupsReducer.redirectBack,\n    loading: state.groupsReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchGroup: fetchGroup,\n  clearGroup: clearGroup,\n  updateGroup: updateGroup,\n  resetRedirect: resetRedirect\n})(UpdateGroupContainer);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/module/groups/update.groups/update.groups.container.js"],"names":["React","connect","DialogTitle","Dialog","clearGroup","fetchGroup","resetRedirect","updateGroup","Group","Link","Redirect","TextField","Button","DialogActions","LinearProgress","UpdateGroupContainer","state","singlegroup","type","redirectBack","props","handleGroupFormChange","name","event","group","target","value","setState","handleSubmit","match","params","id","undefined","loading","height","disabled","Component","mapStateToProps","groupsReducer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {clearGroup, fetchGroup, resetRedirect, updateGroup} from '../groups.actions';\r\nimport {Group} from '../../../model/group.model';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nexport class UpdateGroupContainer extends React.Component{\r\n\r\n    state = {\r\n        singlegroup: new Group({type: ''}),\r\n        redirectBack: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchGroup(this.props.match.params.id);\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearGroup();\r\n    }\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n          return <Redirect to='/app/groups' />\r\n    }\r\n\r\n\r\n    handleGroupFormChange = name => event => {\r\n\r\n        let group = this.state.singlegroup;\r\n        group[name] = event.target.value;\r\n        this.setState({\r\n            singlegroup: group\r\n        });\r\n\r\n    };\r\n\r\n\r\n     handleSubmit = () => {\r\n\r\n\r\n         this.props.updateGroup(this.state.singlegroup);\r\n    };\r\n    render() {\r\n\r\n        if((this.props.singlegroup != -1 && this.props.singlegroup !== undefined) && (this.state.singlegroup === undefined || this.state.singlegroup.id === undefined) && (this.props.singlegroup != this.state.singlegroup)){\r\n\r\n            let group = this.props.singlegroup;\r\n            this.setState({\r\n                singlegroup: group\r\n            });\r\n\r\n        }\r\n        return (\r\n            <div>\r\n            <Dialog open={true} fullWidth={true} maxWidth=\"md\"  aria-labelledby=\"responsive-dialog-title\">\r\n            <DialogTitle id=\"simple-dialog-title\">Update group <strong>{this.props.singlegroup ? this.props.singlegroup.name : ''}</strong></DialogTitle>\r\n            { this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{height: 5 + 'px'}}></div>}\r\n\r\n            { this.state.singlegroup !== undefined ? \r\n\r\n\r\n                <div>\r\n                    <form noValidate autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                        <TextField\r\n                        id=\"id\"\r\n                        label=\"(ID)\"\r\n                        onChange={this.handleGroupFormChange('id')}\r\n                        fullWidth={true}\r\n                        value={this.state.singlegroup.id ? this.state.singlegroup.id : ''}\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                            disabled: true,\r\n                        }}\r\n                        />\r\n                        <TextField\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        onChange={this.handleGroupFormChange('name')}\r\n                        fullWidth={true}\r\n                        value={this.state.singlegroup.name ? this.state.singlegroup.name : ''}\r\n                        margin=\"normal\"\r\n                        />\r\n                        <DialogActions>\r\n                            <Link to=\"/app/groups\">\r\n                                <Button color=\"primary\">\r\n                                Cancel\r\n                                </Button>\r\n                                </Link>\r\n                            <Button onClick={() => this.handleSubmit()} color=\"primary\" variant=\"contained\">\r\n                            UPDATE\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </div>\r\n                \r\n                : ''} \r\n                {this.props.redirectBack ? this.redirectBack() : ''}\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        singlegroup: state.groupsReducer.singlegroup,\r\n        redirectBack: state.groupsReducer.redirectBack,\r\n        loading: state.groupsReducer.loading\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchGroup, clearGroup, updateGroup, resetRedirect\r\n}))(UpdateGroupContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}