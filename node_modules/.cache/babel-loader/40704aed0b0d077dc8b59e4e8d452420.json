{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\tagama\\\\Tagama-front\\\\Tagama-front\\\\src\\\\app\\\\module\\\\Folders\\\\folders.container.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { getBooksAndFolders, deletePathFolder } from './folder.repo';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { fileURLToPath } from 'url';\nimport { dispatchAction } from '../../..';\nvar CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red'\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green'\n      }\n    }\n  }\n})(TextField);\n\nfunction buildFileSelector() {\n  var fileSelector = document.createElement('input');\n  fileSelector.setAttribute('type', 'file');\n  fileSelector.setAttribute('multiple', 'multiple');\n  return fileSelector;\n}\n\nexport default class FoldersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = (type, year, name, page, size) => {\n      this.listBooksAndFolders(type, year, name, page, size);\n    };\n\n    this.handleFileSelect = e => {\n      e.preventDefault();\n      this.fileSelector.click();\n    };\n\n    this.handleFormInput = name => event => {\n      var formdata = this.state.formdata;\n      formdata[name] = event.target.value;\n      this.setState({\n        formdata: formdata\n      });\n    };\n\n    this.handleChangePage = (event, page) => {\n      if (this.state.data && this.state.data.data && this.state.data.data.size) {\n        this.listBooksAndFolders(this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, page, this.state.data.data.size);\n      } else {\n        this.listBooksAndFolders(page, 5);\n      }\n    };\n\n    this.onChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPages: event.target.value\n      });\n      this.listBooksAndFolders(this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, 0, event.target.value);\n    };\n\n    this.listBooksAndFolders = (type, year, name, page, size) => {\n      // console.log(this.state.formdata.registerName);\n      // console.log(this.state.formdata.registerType);\n      // console.log(this.state.formdata.registerYear);\n      dispatchAction({\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\n      });\n      getBooksAndFolders(type, year, name, page, size).then(response => {\n        this.setState({\n          data: response\n        }, dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        }));\n        console.log(response);\n      }).catch(error => {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    this.deletePathFolders = id => {\n      // console.log(this.state.formdata.registerName);\n      // console.log(this.state.formdata.registerType);\n      // console.log(this.state.formdata.registerYear);\n      dispatchAction({\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\n      });\n      deletePathFolder(id).then(response => {\n        this.setState({\n          data: response\n        }, dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        }));\n        this.listBooksAndFolders(this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, 0, 5);\n      }).catch(error => {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      rowsPerPages: 5,\n      data: {},\n      formdata: {\n        registerName: undefined,\n        registerYear: undefined,\n        registerType: undefined\n      }\n    };\n  }\n\n  // onClick1 = (id) => {\n  //   this.deletePathFolders(id);\n  // }\n  componentDidMount() {\n    this.fileSelector = buildFileSelector();\n  }\n\n  handleStatus(props) {\n    if (props == 1) return \"Венчани\";else if (props == 0) return \"Родени\";else if (props == 2) return \"Умрени\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-input\",\n      label: \"Name Register Book\",\n      variant: \"outlined\",\n      style: {\n        marginTop: 50 + \"px\",\n        borderColor: 'red'\n      },\n      inputProps: {\n        style: {\n          borderColor: 'red'\n        }\n      } // value={values.name}\n      ,\n      required: true // onChange={handleChange('name')}\n      ,\n      onChange: this.handleFormInput('registerName'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-input\",\n      label: \"Year\",\n      variant: \"outlined\",\n      style: {\n        marginTop: 50 + \"px\",\n        marginLeft: 20 + \"px\",\n        borderColor: 'red'\n      },\n      inputProps: {\n        style: {\n          borderColor: 'red'\n        }\n      } // value={values.name}\n      ,\n      required: true,\n      onChange: this.handleFormInput('registerYear'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-input\",\n      label: \"Type Register Book\",\n      variant: \"outlined\",\n      style: {\n        marginTop: 50 + \"px\",\n        marginLeft: 20 + \"px\",\n        borderColor: 'red'\n      },\n      inputProps: {\n        style: {\n          borderColor: 'red'\n        }\n      } // value={values.name}\n      ,\n      required: true,\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.handleFormInput('registerType'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.listBooksAndFolders.bind(this, this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, 0, 5),\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: !this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear,\n      style: {\n        marginTop: 50 + \"px\",\n        marginLeft: 20 + \"px\",\n        height: 55 + \"px\",\n        width: 100 + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, \"Folder path\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, this.state.data && this.state.data.data && this.state.data.data.content && this.state.data.data.content.map(item => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 27\n        }\n      }, item.name), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 27\n        }\n      }, item.registerYear), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 27\n        }\n      }, this.handleStatus(item.registerType)), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, item.pathFolder ? item.pathFolder : 'No folder')), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.deletePathFolders.bind(this, item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 27\n        }\n      }, \"Delete Folder\")), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/app/folders/path/' + item.id + '?name=' + item.name + '&type=' + item.registerType + '&year=' + item.registerYear,\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: \"\",\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 31\n        }\n      }, \"Add Folder\"))));\n    }))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: this.state.data.data ? this.state.data.data.totalElements : 0,\n      rowsPerPage: this.state.rowsPerPages,\n      page: this.state.data.data ? this.state.data.data.number : 0,\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.onChangeRowsPerPage,\n      backIconButtonProps: {\n        'aria-label': 'Previous Page'\n      },\n      nextIconButtonProps: {\n        'aria-label': 'Next Page'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/src/app/module/Folders/folders.container.js"],"names":["React","TextField","withStyles","makeStyles","Button","getBooksAndFolders","deletePathFolder","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Link","fileURLToPath","dispatchAction","CssTextField","root","color","borderBottomColor","borderColor","buildFileSelector","fileSelector","document","createElement","setAttribute","FoldersContainer","Component","constructor","props","onClick","type","year","name","page","size","listBooksAndFolders","handleFileSelect","e","preventDefault","click","handleFormInput","event","formdata","state","target","value","setState","handleChangePage","data","registerType","registerYear","registerName","onChangeRowsPerPage","rowsPerPages","then","response","console","log","catch","error","deletePathFolders","id","undefined","componentDidMount","handleStatus","render","marginLeft","marginTop","style","bind","height","width","content","map","item","pathFolder","textDecoration","totalElements","number"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {withStyles,makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getBooksAndFolders, deletePathFolder } from './folder.repo';\r\nimport {Table, TableHead, TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { fileURLToPath } from 'url';\r\nimport { dispatchAction } from '../../..';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n      '& label.Mui-focused': {\r\n        color: 'green',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'green',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: 'red',\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: 'yellow',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: 'green',\r\n        },\r\n      },\r\n    },\r\n  })(TextField);\r\n  \r\n  function buildFileSelector(){\r\n    const fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.setAttribute('multiple', 'multiple');\r\n    return fileSelector;\r\n  }\r\n  \r\n export default class FoldersContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          rowsPerPages: 5,\r\n          data: {},\r\n          formdata: {\r\n              registerName: undefined, \r\n              registerYear: undefined,\r\n              registerType: undefined \r\n          }\r\n        }\r\n      }\r\n        onClick = (type,year,name,page,size) => {\r\n        this.listBooksAndFolders(type,year,name,page,size)\r\n    }\r\n        // onClick1 = (id) => {\r\n        //   this.deletePathFolders(id);\r\n        // }\r\n    componentDidMount(){\r\n      this.fileSelector = buildFileSelector();\r\n    }\r\n    handleFileSelect = (e) => {\r\n      e.preventDefault();\r\n      this.fileSelector.click();\r\n    }\r\n        handleStatus(props){\r\n            if(props==1)\r\n            return \"Венчани\";\r\n            else if(props==0)\r\n            return \"Родени\";\r\n            else if(props==2)\r\n            return \"Умрени\";\r\n        }\r\n        handleFormInput = name => event => {      \r\n            var formdata = this.state.formdata;\r\n            formdata[name] = event.target.value;\r\n              this.setState({\r\n                formdata: formdata\r\n              });\r\n          }\r\n          handleChangePage = (event, page) => {\r\n             \r\n            if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n              this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,page,this.state.data.data.size);\r\n            }else{\r\n              this.listBooksAndFolders(page, 5);\r\n            }\r\n        }\r\n        onChangeRowsPerPage = (event) => {\r\n            this.setState({\r\n                rowsPerPages: event.target.value\r\n            })\r\n            this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0, event.target.value);\r\n        }\r\n         \r\n      \r\n      listBooksAndFolders = (type,year,name,page, size) => {\r\n        // console.log(this.state.formdata.registerName);\r\n        // console.log(this.state.formdata.registerType);\r\n        // console.log(this.state.formdata.registerYear);\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n        });\r\n        getBooksAndFolders(type,year,name,page,size).then(response => {\r\n          this.setState({\r\n            data: response\r\n          },\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          console.log(response);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }\r\n      deletePathFolders = (id) => {\r\n        // console.log(this.state.formdata.registerName);\r\n        // console.log(this.state.formdata.registerType);\r\n        // console.log(this.state.formdata.registerYear);\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n        });\r\n        deletePathFolder(id).then(response => {\r\n          this.setState({\r\n            data: response\r\n          },\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0,5);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }\r\n   \r\n        render(){\r\n        \r\n            return (\r\n        <form style={{marginLeft: '30px'}}><TextField\r\n        id=\"standard-input\"\r\n        label=\"Name Register Book\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        // onChange={handleChange('name')}\r\n        onChange={this.handleFormInput('registerName')}\r\n\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"standard-input\"\r\n        label=\"Year\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        onChange={this.handleFormInput('registerYear')}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"standard-input\"\r\n        label=\"Type Register Book\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        onChange={this.handleFormInput('registerType')}\r\n      />\r\n      <Button\r\n      onClick={this.listBooksAndFolders.bind(this,this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0,5)}\r\n      variant=\"contained\" \r\n      color=\"secondary\"\r\n      disabled={!this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear}\r\n      style={{marginTop: 50 + \"px\", marginLeft: 20 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n      >\r\n          Search</Button>\r\n          <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                      Year\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Type\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  Folder path\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.registerYear}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {this.handleStatus(item.registerType)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <b>{item.pathFolder? item.pathFolder : 'No folder'}</b>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                          <Button\r\n                            variant=\"contained\" \r\n                            color=\"secondary\"\r\n                            onClick={this.deletePathFolders.bind(this,item.id)}\r\n                            >Delete Folder\r\n                            </Button>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                          <Link to={'/app/folders/path/'+item.id+'?name='+item.name+'&type='+item.registerType+'&year='+item.registerYear} style={{textDecoration: 'none', color: 'white'}}>\r\n                              <Button\r\n                              onClick=\"\"\r\n                              variant=\"contained\" \r\n                              color=\"secondary\"\r\n                              type=\"file\"\r\n                              >Add Folder\r\n                              </Button>\r\n                          </Link>\r\n                         </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n\r\n      </form>\r\n            )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}