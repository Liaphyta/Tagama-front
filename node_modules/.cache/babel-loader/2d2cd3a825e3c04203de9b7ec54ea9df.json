{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\module\\\\dashboard\\\\dashboard.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Bar, BarChart, CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { getAppHealth } from './dashboard.actions';\nimport format from \"date-fns/format\";\nimport { handleLogout, hasAnyRole, refreshToken } from '../../shared/app.properties';\nimport Redirect from 'react-router-dom/Redirect';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [{\n        name: '1/1/2019',\n        Requests: 12\n      }, {\n        name: '1/2/2019',\n        Requests: 2\n      }]\n    };\n    _this.unauthorized = false;\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.unauthorized = !hasAnyRole('ROLE_USER,ROLE_ADMINISTRATION');\n      var refreshTime = new Date();\n      refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\n\n      if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\n        handleLogout();\n      } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\n        handleLogout();\n      } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\n        refreshToken();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAppHealth();\n    }\n  }, {\n    key: \"prepareDataHealth\",\n    value: function prepareDataHealth() {\n      if (this.props.reportHealth.data != undefined) {\n        var reportHealth = this.props.reportHealth.data[\"diskSpace\"];\n        var data = [{\n          name: \"Total\",\n          GB: Math.round(reportHealth[\"total\"] / (1024 * 1024 * 1024) * 10) / 10\n        }, {\n          name: \"Used\",\n          GB: Math.round((reportHealth[\"total\"] - reportHealth[\"free\"]) / (1024 * 1024 * 1024) * 10) / 10\n        }, {\n          name: \"Free\",\n          GB: Math.round(reportHealth[\"free\"] / (1024 * 1024 * 1024) * 10) / 10\n        }, {\n          name: \"Threshold\",\n          GB: reportHealth[\"threshold\"] / (1024 * 1024 * 1024)\n        }];\n        return data;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized && React.createElement(Redirect, {\n        to: \"/app/error/unauthorized\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        md: 6,\n        className: \"formGrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: {\n          marginLeft: 30 + \"px\",\n          marginRight: 15 + 'px',\n          padding: 10 + 'px',\n          width: '94%',\n          height: '360px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Disk Space\"), React.createElement(ResponsiveContainer, {\n        width: \"95%\",\n        height: \"80%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        data: this.prepareDataHealth() && this.prepareDataHealth(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"GB\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    reportHealth: state.dashboardReducer.reportHealth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAppHealth: getAppHealth\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/module/dashboard/dashboard.container.js"],"names":["React","connect","Grid","Paper","Bar","BarChart","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","getAppHealth","format","handleLogout","hasAnyRole","refreshToken","Redirect","Dashboard","state","data","name","Requests","unauthorized","refreshTime","Date","setSeconds","getSeconds","localStorage","getItem","JSON","parse","expires_at","props","reportHealth","undefined","GB","Math","round","marginLeft","marginRight","padding","width","height","prepareDataHealth","Component","mapStateToProps","dashboardReducer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport {\r\n    Bar,\r\n    BarChart,\r\n    CartesianGrid,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from 'recharts';\r\nimport {getAppHealth} from './dashboard.actions';\r\nimport format from \"date-fns/format\";\r\nimport {handleLogout, hasAnyRole, refreshToken} from '../../shared/app.properties';\r\nimport Redirect from 'react-router-dom/Redirect';\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n\r\n    state = {\r\n        data: [\r\n            {name: '1/1/2019', Requests: 12},\r\n            {name: '1/2/2019', Requests: 2}\r\n        ],\r\n\r\n    }\r\n\r\n    unauthorized = false;\r\n\r\n    componentWillMount() {\r\n        this.unauthorized = !hasAnyRole('ROLE_USER,ROLE_ADMINISTRATION');\r\n\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n            refreshToken()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAppHealth();\r\n\r\n    }\r\n\r\n    prepareDataHealth() {\r\n        if (this.props.reportHealth.data != undefined) {\r\n            var reportHealth = this.props.reportHealth.data[\"diskSpace\"];\r\n            var data = [\r\n                {name: \"Total\", GB: Math.round((reportHealth[\"total\"] / (1024 * 1024 * 1024)) * 10) / 10},\r\n                {\r\n                    name: \"Used\",\r\n                    GB: Math.round((reportHealth[\"total\"] - reportHealth[\"free\"]) / (1024 * 1024 * 1024) * 10) / 10\r\n                },\r\n                {name: \"Free\", GB: Math.round((reportHealth[\"free\"] / (1024 * 1024 * 1024)) * 10) / 10},\r\n\r\n                {name: \"Threshold\", GB: reportHealth[\"threshold\"] / (1024 * 1024 * 1024)}\r\n\r\n\r\n            ];\r\n            return data;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                <Redirect to=\"/app/error/unauthorized\"/>\r\n                }\r\n                <Grid container spacing={0}>\r\n                    <Grid md={6} className=\"formGrid\">\r\n                        <Paper style={{\r\n                            marginLeft: 30 + \"px\",\r\n                            marginRight: 15 + 'px',\r\n                            padding: 10 + 'px',\r\n                            width: '94%',\r\n                            height: '360px'\r\n                        }}>\r\n                            <h4>Disk Space</h4>\r\n                            <ResponsiveContainer width=\"95%\" height=\"80%\">\r\n                                <BarChart\r\n                                    data={this.prepareDataHealth() && this.prepareDataHealth()}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                                    <XAxis dataKey=\"name\"/>\r\n                                    <YAxis/>\r\n                                    <Tooltip/>\r\n                                    <Legend/>\r\n                                    <Bar dataKey=\"GB\" fill=\"#8884d8\"/>\r\n                            </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reportHealth: state.dashboardReducer.reportHealth,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n     getAppHealth\r\n}))(Dashboard);"]},"metadata":{},"sourceType":"module"}