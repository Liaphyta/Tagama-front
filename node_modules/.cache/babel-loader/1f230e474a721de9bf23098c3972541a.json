{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nexport var styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    minHeight: 48,\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    display: 'flex'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element. */\n  flexContainer: {\n    display: 'flex'\n  },\n\n  /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n  flexContainerVertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n  centered: {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the tablist element. */\n  scroller: {\n    position: 'relative',\n    display: 'inline-block',\n    flex: '1 1 auto',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n  fixed: {\n    overflowX: 'hidden',\n    width: '100%'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n  scrollable: {\n    overflowX: 'scroll',\n    // Hide dimensionless scrollbar on MacOS\n    scrollbarWidth: 'none',\n    // Firefox\n    '&::-webkit-scrollbar': {\n      display: 'none' // Safari + Chrome\n\n    }\n  },\n\n  /* Styles applied to the `ScrollButtonComponent` component. */\n  scrollButtons: {},\n\n  /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n  scrollButtonsDesktop: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n\n  /* Styles applied to the `TabIndicator` component. */\n  indicator: {}\n});\nvar Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\n  var ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      selectionFollowsFocus = props.selectionFollowsFocus,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      TabScrollButtonProps = props.TabScrollButtonProps,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\"]);\n\n  var theme = useTheme();\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  var vertical = orientation === 'vertical';\n  var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  var start = vertical ? 'top' : 'left';\n  var end = vertical ? 'bottom' : 'right';\n  var clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  var size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      indicatorStyle = _React$useState4[0],\n      setIndicatorStyle = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    start: false,\n    end: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      displayScroll = _React$useState6[0],\n      setDisplayScroll = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    overflow: 'hidden',\n    marginBottom: null\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      scrollerStyle = _React$useState8[0],\n      setScrollerStyle = _React$useState8[1];\n\n  var valueToIndex = new Map();\n  var tabsRef = React.useRef(null);\n  var tabListRef = React.useRef(null);\n\n  var getTabsMeta = () => {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = tabListRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([\"Material-UI: The value provided to the Tabs component is invalid.\", \"None of the Tabs' children match with `\".concat(value, \"`.\"), valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  var updateIndicatorState = useEventCallback(() => {\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    var newIndicatorStyle = {\n      [start]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  var scroll = scrollValue => {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = delta => {\n    var scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  var handleStartScrollClick = () => {\n    moveTabsScroll(-tabsRef.current[clientSize]);\n  };\n\n  var handleEndScrollClick = () => {\n    moveTabsScroll(tabsRef.current[clientSize]);\n  };\n\n  var handleScrollbarSizeChange = React.useCallback(scrollbarHeight => {\n    setScrollerStyle({\n      overflow: null,\n      marginBottom: -scrollbarHeight\n    });\n  }, []);\n\n  var getConditionalElements = () => {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/React.createElement(ScrollbarSize, {\n      className: classes.scrollable,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    var scrollButtonsActive = displayScroll.start || displayScroll.end;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }, TabScrollButtonProps)) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }, TabScrollButtonProps)) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = useEventCallback(() => {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n\n      scroll(_nextScrollStart);\n    }\n  });\n  var updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== 'off') {\n      var _tabsRef$current = tabsRef.current,\n          scrollTop = _tabsRef$current.scrollTop,\n          scrollHeight = _tabsRef$current.scrollHeight,\n          clientHeight = _tabsRef$current.clientHeight,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var showStartScroll;\n      var showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    var handleResize = debounce(() => {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var handleTabsScroll = React.useCallback(debounce(() => {\n    updateScrollButtonState();\n  }));\n  React.useEffect(() => {\n    return () => {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(() => {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  var indicator = /*#__PURE__*/React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  var childIndex = 0;\n  var children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    });\n  });\n\n  var handleKeyDown = event => {\n    var target = event.target; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    var role = target.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    var newFocusTarget = null;\n    var previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\n    var nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\n        break;\n\n      case nextItemKey:\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\n        break;\n\n      case 'Home':\n        newFocusTarget = tabListRef.current.firstChild;\n        break;\n\n      case 'End':\n        newFocusTarget = tabListRef.current.lastChild;\n        break;\n\n      default:\n        break;\n    }\n\n    if (newFocusTarget !== null) {\n      newFocusTarget.focus();\n      event.preventDefault();\n    }\n  };\n\n  var conditionalElements = getConditionalElements();\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\n    style: scrollerStyle,\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    onKeyDown: handleKeyDown,\n    ref: tabListRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Callback fired when the component mounts.\r\n   * This is useful when you want to trigger an action programmatically.\r\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\r\n   *\r\n   * @param {object} actions This object contains all possible actions\r\n   * that can be triggered programmatically.\r\n   */\n  action: refType,\n\n  /**\r\n   * The label for the Tabs as a string.\r\n   */\n  'aria-label': PropTypes.string,\n\n  /**\r\n   * An id or list of ids separated by a space that label the Tabs.\r\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\r\n   * If `true`, the tabs will be centered.\r\n   * This property is intended for large views.\r\n   */\n  centered: PropTypes.bool,\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * Determines the color of the indicator.\r\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback\r\n   * @param {any} value We default to the index of the child (number)\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * The tabs orientation (layout flow direction).\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\r\n   * The component used to render the scroll buttons.\r\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\r\n   * Determine behavior of scroll buttons when tabs are set to scroll:\r\n   *\r\n   * - `auto` will only present them when not all the items are visible.\r\n   * - `desktop` will only present them on medium and larger viewports.\r\n   * - `on` will always present them.\r\n   * - `off` will never present them.\r\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'off', 'on']),\n\n  /**\r\n   * If `true` the selected tab changes on focus. Otherwise it only\r\n   * changes on activation.\r\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\r\n   * Props applied to the tab indicator element.\r\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\r\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\r\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\r\n   * Determines the color of the `Tab`.\r\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\r\n   * The value of the currently selected `Tab`.\r\n   * If you don't want any selected `Tab`, you can set this property to `false`.\r\n   */\n  value: PropTypes.any,\n\n  /**\r\n   * Determines additional display behavior of the tabs:\r\n   *\r\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\r\n   *  scrolling (or swiping) of the tab bar.\r\n   *  -`fullWidth` will make the tabs grow to use all the available space,\r\n   *  which should be used for small views, like on mobile.\r\n   *  - `standard` will render the default state.\r\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/Tabs/Tabs.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","refType","debounce","ownerWindow","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","withStyles","TabIndicator","TabScrollButton","useEventCallback","useTheme","styles","theme","root","overflow","minHeight","WebkitOverflowScrolling","display","vertical","flexDirection","flexContainer","flexContainerVertical","centered","justifyContent","scroller","position","flex","whiteSpace","fixed","overflowX","width","scrollable","scrollbarWidth","scrollButtons","scrollButtonsDesktop","breakpoints","down","indicator","Tabs","forwardRef","props","ref","ariaLabel","ariaLabelledBy","action","childrenProp","children","classes","className","component","Component","indicatorColor","onChange","orientation","ScrollButtonComponent","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","other","isRtl","direction","scrollStart","start","end","clientSize","size","process","env","NODE_ENV","console","error","useState","mounted","setMounted","indicatorStyle","setIndicatorStyle","displayScroll","setDisplayScroll","marginBottom","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","tabListRef","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollLeftNormalized","scrollWidth","top","bottom","left","right","tabMeta","length","tab","get","keys","Array","from","join","updateIndicatorState","startValue","correction","newIndicatorStyle","isNaN","dStart","Math","abs","dSize","scroll","scrollValue","moveTabsScroll","delta","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","scrollbarHeight","getConditionalElements","conditionalElements","scrollbarSizeListener","createElement","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","disabled","scrollButtonEnd","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","scrollHeight","clientHeight","showStartScroll","showEndScroll","useEffect","handleResize","win","addEventListener","clear","removeEventListener","handleTabsScroll","useImperativeHandle","updateIndicator","updateScrollButtons","color","style","childIndex","Children","map","child","isValidElement","childValue","undefined","set","selected","cloneElement","fullWidth","handleKeyDown","event","target","role","getAttribute","newFocusTarget","previousItemKey","nextItemKey","key","previousElementSibling","lastChild","nextElementSibling","firstChild","focus","preventDefault","onScroll","onKeyDown","propTypes","string","bool","node","object","elementType","oneOf","func","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@material-ui/utils';\r\nimport debounce from '../utils/debounce';\r\nimport ownerWindow from '../utils/ownerWindow';\r\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\r\nimport animate from '../internal/animate';\r\nimport ScrollbarSize from './ScrollbarSize';\r\nimport withStyles from '../styles/withStyles';\r\nimport TabIndicator from './TabIndicator';\r\nimport TabScrollButton from '../TabScrollButton';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport useTheme from '../styles/useTheme';\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    overflow: 'hidden',\r\n    minHeight: 48,\r\n    WebkitOverflowScrolling: 'touch',\r\n    // Add iOS momentum scrolling.\r\n    display: 'flex'\r\n  },\r\n\r\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\r\n  vertical: {\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  /* Styles applied to the flex container element. */\r\n  flexContainer: {\r\n    display: 'flex'\r\n  },\r\n\r\n  /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\r\n  flexContainerVertical: {\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\r\n  centered: {\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  /* Styles applied to the tablist element. */\r\n  scroller: {\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n    flex: '1 1 auto',\r\n    whiteSpace: 'nowrap'\r\n  },\r\n\r\n  /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\r\n  fixed: {\r\n    overflowX: 'hidden',\r\n    width: '100%'\r\n  },\r\n\r\n  /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\r\n  scrollable: {\r\n    overflowX: 'scroll',\r\n    // Hide dimensionless scrollbar on MacOS\r\n    scrollbarWidth: 'none',\r\n    // Firefox\r\n    '&::-webkit-scrollbar': {\r\n      display: 'none' // Safari + Chrome\r\n\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the `ScrollButtonComponent` component. */\r\n  scrollButtons: {},\r\n\r\n  /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\r\n  scrollButtonsDesktop: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the `TabIndicator` component. */\r\n  indicator: {}\r\n});\r\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\r\n  const {\r\n    'aria-label': ariaLabel,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    action,\r\n    centered = false,\r\n    children: childrenProp,\r\n    classes,\r\n    className,\r\n    component: Component = 'div',\r\n    indicatorColor = 'secondary',\r\n    onChange,\r\n    orientation = 'horizontal',\r\n    ScrollButtonComponent = TabScrollButton,\r\n    scrollButtons = 'auto',\r\n    selectionFollowsFocus,\r\n    TabIndicatorProps = {},\r\n    TabScrollButtonProps,\r\n    textColor = 'inherit',\r\n    value,\r\n    variant = 'standard'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\"]);\r\n\r\n  const theme = useTheme();\r\n  const scrollable = variant === 'scrollable';\r\n  const isRtl = theme.direction === 'rtl';\r\n  const vertical = orientation === 'vertical';\r\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\r\n  const start = vertical ? 'top' : 'left';\r\n  const end = vertical ? 'bottom' : 'right';\r\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\r\n  const size = vertical ? 'height' : 'width';\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (centered && scrollable) {\r\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\r\n    }\r\n  }\r\n\r\n  const [mounted, setMounted] = React.useState(false);\r\n  const [indicatorStyle, setIndicatorStyle] = React.useState({});\r\n  const [displayScroll, setDisplayScroll] = React.useState({\r\n    start: false,\r\n    end: false\r\n  });\r\n  const [scrollerStyle, setScrollerStyle] = React.useState({\r\n    overflow: 'hidden',\r\n    marginBottom: null\r\n  });\r\n  const valueToIndex = new Map();\r\n  const tabsRef = React.useRef(null);\r\n  const tabListRef = React.useRef(null);\r\n\r\n  const getTabsMeta = () => {\r\n    const tabsNode = tabsRef.current;\r\n    let tabsMeta;\r\n\r\n    if (tabsNode) {\r\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\r\n\r\n      tabsMeta = {\r\n        clientWidth: tabsNode.clientWidth,\r\n        scrollLeft: tabsNode.scrollLeft,\r\n        scrollTop: tabsNode.scrollTop,\r\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\r\n        scrollWidth: tabsNode.scrollWidth,\r\n        top: rect.top,\r\n        bottom: rect.bottom,\r\n        left: rect.left,\r\n        right: rect.right\r\n      };\r\n    }\r\n\r\n    let tabMeta;\r\n\r\n    if (tabsNode && value !== false) {\r\n      const children = tabListRef.current.children;\r\n\r\n      if (children.length > 0) {\r\n        const tab = children[valueToIndex.get(value)];\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          if (!tab) {\r\n            console.error([`Material-UI: The value provided to the Tabs component is invalid.`, `None of the Tabs' children match with \\`${value}\\`.`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\r\n          }\r\n        }\r\n\r\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\r\n      }\r\n    }\r\n\r\n    return {\r\n      tabsMeta,\r\n      tabMeta\r\n    };\r\n  };\r\n\r\n  const updateIndicatorState = useEventCallback(() => {\r\n    const {\r\n      tabsMeta,\r\n      tabMeta\r\n    } = getTabsMeta();\r\n    let startValue = 0;\r\n\r\n    if (tabMeta && tabsMeta) {\r\n      if (vertical) {\r\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\r\n      } else {\r\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\r\n        startValue = tabMeta.left - tabsMeta.left + correction;\r\n      }\r\n    }\r\n\r\n    const newIndicatorStyle = {\r\n      [start]: startValue,\r\n      // May be wrong until the font is loaded.\r\n      [size]: tabMeta ? tabMeta[size] : 0\r\n    };\r\n\r\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\r\n      setIndicatorStyle(newIndicatorStyle);\r\n    } else {\r\n      const dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\r\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\r\n\r\n      if (dStart >= 1 || dSize >= 1) {\r\n        setIndicatorStyle(newIndicatorStyle);\r\n      }\r\n    }\r\n  });\r\n\r\n  const scroll = scrollValue => {\r\n    animate(scrollStart, tabsRef.current, scrollValue);\r\n  };\r\n\r\n  const moveTabsScroll = delta => {\r\n    let scrollValue = tabsRef.current[scrollStart];\r\n\r\n    if (vertical) {\r\n      scrollValue += delta;\r\n    } else {\r\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\r\n\r\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\r\n    }\r\n\r\n    scroll(scrollValue);\r\n  };\r\n\r\n  const handleStartScrollClick = () => {\r\n    moveTabsScroll(-tabsRef.current[clientSize]);\r\n  };\r\n\r\n  const handleEndScrollClick = () => {\r\n    moveTabsScroll(tabsRef.current[clientSize]);\r\n  };\r\n\r\n  const handleScrollbarSizeChange = React.useCallback(scrollbarHeight => {\r\n    setScrollerStyle({\r\n      overflow: null,\r\n      marginBottom: -scrollbarHeight\r\n    });\r\n  }, []);\r\n\r\n  const getConditionalElements = () => {\r\n    const conditionalElements = {};\r\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/React.createElement(ScrollbarSize, {\r\n      className: classes.scrollable,\r\n      onChange: handleScrollbarSizeChange\r\n    }) : null;\r\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\r\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\r\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\r\n      orientation: orientation,\r\n      direction: isRtl ? 'right' : 'left',\r\n      onClick: handleStartScrollClick,\r\n      disabled: !displayScroll.start,\r\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\r\n    }, TabScrollButtonProps)) : null;\r\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\r\n      orientation: orientation,\r\n      direction: isRtl ? 'left' : 'right',\r\n      onClick: handleEndScrollClick,\r\n      disabled: !displayScroll.end,\r\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\r\n    }, TabScrollButtonProps)) : null;\r\n    return conditionalElements;\r\n  };\r\n\r\n  const scrollSelectedIntoView = useEventCallback(() => {\r\n    const {\r\n      tabsMeta,\r\n      tabMeta\r\n    } = getTabsMeta();\r\n\r\n    if (!tabMeta || !tabsMeta) {\r\n      return;\r\n    }\r\n\r\n    if (tabMeta[start] < tabsMeta[start]) {\r\n      // left side of button is out of view\r\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\r\n      scroll(nextScrollStart);\r\n    } else if (tabMeta[end] > tabsMeta[end]) {\r\n      // right side of button is out of view\r\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\r\n      scroll(nextScrollStart);\r\n    }\r\n  });\r\n  const updateScrollButtonState = useEventCallback(() => {\r\n    if (scrollable && scrollButtons !== 'off') {\r\n      const {\r\n        scrollTop,\r\n        scrollHeight,\r\n        clientHeight,\r\n        scrollWidth,\r\n        clientWidth\r\n      } = tabsRef.current;\r\n      let showStartScroll;\r\n      let showEndScroll;\r\n\r\n      if (vertical) {\r\n        showStartScroll = scrollTop > 1;\r\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\r\n      } else {\r\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\r\n\r\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\r\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\r\n      }\r\n\r\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\r\n        setDisplayScroll({\r\n          start: showStartScroll,\r\n          end: showEndScroll\r\n        });\r\n      }\r\n    }\r\n  });\r\n  React.useEffect(() => {\r\n    const handleResize = debounce(() => {\r\n      updateIndicatorState();\r\n      updateScrollButtonState();\r\n    });\r\n    const win = ownerWindow(tabsRef.current);\r\n    win.addEventListener('resize', handleResize);\r\n    return () => {\r\n      handleResize.clear();\r\n      win.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [updateIndicatorState, updateScrollButtonState]);\r\n  const handleTabsScroll = React.useCallback(debounce(() => {\r\n    updateScrollButtonState();\r\n  }));\r\n  React.useEffect(() => {\r\n    return () => {\r\n      handleTabsScroll.clear();\r\n    };\r\n  }, [handleTabsScroll]);\r\n  React.useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    updateIndicatorState();\r\n    updateScrollButtonState();\r\n  });\r\n  React.useEffect(() => {\r\n    scrollSelectedIntoView();\r\n  }, [scrollSelectedIntoView, indicatorStyle]);\r\n  React.useImperativeHandle(action, () => ({\r\n    updateIndicator: updateIndicatorState,\r\n    updateScrollButtons: updateScrollButtonState\r\n  }), [updateIndicatorState, updateScrollButtonState]);\r\n  const indicator = /*#__PURE__*/React.createElement(TabIndicator, _extends({\r\n    className: classes.indicator,\r\n    orientation: orientation,\r\n    color: indicatorColor\r\n  }, TabIndicatorProps, {\r\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\r\n  }));\r\n  let childIndex = 0;\r\n  const children = React.Children.map(childrenProp, child => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\r\n    valueToIndex.set(childValue, childIndex);\r\n    const selected = childValue === value;\r\n    childIndex += 1;\r\n    return /*#__PURE__*/React.cloneElement(child, {\r\n      fullWidth: variant === 'fullWidth',\r\n      indicator: selected && !mounted && indicator,\r\n      selected,\r\n      selectionFollowsFocus,\r\n      onChange,\r\n      textColor,\r\n      value: childValue\r\n    });\r\n  });\r\n\r\n  const handleKeyDown = event => {\r\n    const {\r\n      target\r\n    } = event; // Keyboard navigation assumes that [role=\"tab\"] are siblings\r\n    // though we might warn in the future about nested, interactive elements\r\n    // as a a11y violation\r\n\r\n    const role = target.getAttribute('role');\r\n\r\n    if (role !== 'tab') {\r\n      return;\r\n    }\r\n\r\n    let newFocusTarget = null;\r\n    let previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\r\n    let nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\r\n\r\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\r\n      // swap previousItemKey with nextItemKey\r\n      previousItemKey = 'ArrowRight';\r\n      nextItemKey = 'ArrowLeft';\r\n    }\r\n\r\n    switch (event.key) {\r\n      case previousItemKey:\r\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\r\n        break;\r\n\r\n      case nextItemKey:\r\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\r\n        break;\r\n\r\n      case 'Home':\r\n        newFocusTarget = tabListRef.current.firstChild;\r\n        break;\r\n\r\n      case 'End':\r\n        newFocusTarget = tabListRef.current.lastChild;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (newFocusTarget !== null) {\r\n      newFocusTarget.focus();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const conditionalElements = getConditionalElements();\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className, vertical && classes.vertical),\r\n    ref: ref\r\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/React.createElement(\"div\", {\r\n    className: clsx(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\r\n    style: scrollerStyle,\r\n    ref: tabsRef,\r\n    onScroll: handleTabsScroll\r\n  }, /*#__PURE__*/React.createElement(\"div\", {\r\n    \"aria-label\": ariaLabel,\r\n    \"aria-labelledby\": ariaLabelledBy,\r\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\r\n    onKeyDown: handleKeyDown,\r\n    ref: tabListRef,\r\n    role: \"tablist\"\r\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Callback fired when the component mounts.\r\n   * This is useful when you want to trigger an action programmatically.\r\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\r\n   *\r\n   * @param {object} actions This object contains all possible actions\r\n   * that can be triggered programmatically.\r\n   */\r\n  action: refType,\r\n\r\n  /**\r\n   * The label for the Tabs as a string.\r\n   */\r\n  'aria-label': PropTypes.string,\r\n\r\n  /**\r\n   * An id or list of ids separated by a space that label the Tabs.\r\n   */\r\n  'aria-labelledby': PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the tabs will be centered.\r\n   * This property is intended for large views.\r\n   */\r\n  centered: PropTypes.bool,\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * Determines the color of the indicator.\r\n   */\r\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\r\n\r\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback\r\n   * @param {any} value We default to the index of the child (number)\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * The tabs orientation (layout flow direction).\r\n   */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n\r\n  /**\r\n   * The component used to render the scroll buttons.\r\n   */\r\n  ScrollButtonComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Determine behavior of scroll buttons when tabs are set to scroll:\r\n   *\r\n   * - `auto` will only present them when not all the items are visible.\r\n   * - `desktop` will only present them on medium and larger viewports.\r\n   * - `on` will always present them.\r\n   * - `off` will never present them.\r\n   */\r\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'off', 'on']),\r\n\r\n  /**\r\n   * If `true` the selected tab changes on focus. Otherwise it only\r\n   * changes on activation.\r\n   */\r\n  selectionFollowsFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Props applied to the tab indicator element.\r\n   */\r\n  TabIndicatorProps: PropTypes.object,\r\n\r\n  /**\r\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\r\n   */\r\n  TabScrollButtonProps: PropTypes.object,\r\n\r\n  /**\r\n   * Determines the color of the `Tab`.\r\n   */\r\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\r\n\r\n  /**\r\n   * The value of the currently selected `Tab`.\r\n   * If you don't want any selected `Tab`, you can set this property to `false`.\r\n   */\r\n  value: PropTypes.any,\r\n\r\n  /**\r\n   * Determines additional display behavior of the tabs:\r\n   *\r\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\r\n   *  scrolling (or swiping) of the tab bar.\r\n   *  -`fullWidth` will make the tabs grow to use all the available space,\r\n   *  which should be used for small views, like on mobile.\r\n   *  - `standard` will render the default state.\r\n   */\r\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiTabs'\r\n})(Tabs);"]},"metadata":{},"sourceType":"module"}