{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\tagama\\\\Tagama-front\\\\Tagama-front\\\\src\\\\app\\\\auth\\\\login\\\\login.container.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Lock from '@material-ui/icons/Lock';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Redirect from 'react-router-dom/Redirect';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport { getAuthorizationHeader, handleLogout, SERVER_API_URL } from '../../shared/app.properties';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MySnackbarContent from '../../shared/SnackbarContentWrapper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport default class LoginContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      shakeClass: '',\n      redirect: false,\n      snackbarOpen: false,\n      snackbarMessage: '',\n      fieldUsernameError: false,\n      messageVariant: 'error',\n      fieldPasswordError: false\n    };\n\n    this.authenticate = () => {\n      this.setState({\n        shakeClass: '',\n        snackbarOpen: false,\n        loading: true\n      });\n      var username = this.state.username;\n      var password = this.state.password;\n      var goterr = false;\n\n      if (username == undefined || username == '' || username == ' ') {\n        this.setState({\n          fieldUsernameError: true,\n          snackbarOpen: true,\n          loading: false,\n          snackbarMessage: 'Some required fields are empty!'\n        });\n        goterr = true;\n      } else {\n        this.setState({\n          fieldUsernameError: false\n        });\n      }\n\n      if (password == undefined || password == '' || password == '') {\n        this.setState({\n          fieldPasswordError: true,\n          snackbarOpen: true,\n          loading: false,\n          snackbarMessage: 'Some required fields are empty!'\n        });\n        goterr = true;\n      } else {\n        this.setState({\n          fieldPasswordError: false\n        });\n      }\n\n      if (goterr) return;\n      axios({\n        url: SERVER_API_URL + '/oauth/token?username=' + username + '&password=' + password + '&grant_type=password',\n        method: 'POST',\n        headers: {\n          'Authorization': getAuthorizationHeader()\n        }\n      }).then(res => {\n        this.handleAuthSuccess(res);\n      }).catch(err => {\n        this.handleAuthError(err);\n      });\n    };\n\n    this.handleAuthSuccess = res => {\n      this.setState({\n        messageVariant: 'success',\n        snackbarMessage: '',\n        shakeClass: '',\n        snackbarOpen: false,\n        loading: false\n      });\n      var expires_at_date = new Date(); // expires_at_date.setSeconds(expires_at_date.getSeconds() + res.data.expires_in);\n\n      expires_at_date = new Date(expires_at_date.getTime() + res.data.expires_in * 1000);\n      res.data.expires_at = expires_at_date;\n      res.data.username = this.state.username;\n      localStorage.setItem('idm', JSON.stringify(res.data));\n      axios({\n        url: SERVER_API_URL + '/users/me?access_token=' + res.data.access_token,\n        method: 'GET',\n        headers: {\n          'Authorization': 'Basic bXktdHJ1c3RlZC1jbGllbnQ6c2VjcmV0'\n        }\n      }).then(response => {\n        localStorage.setItem('me', JSON.stringify(response.data));\n        this.setState({\n          logedin: true\n        });\n      }).catch(err => {});\n    };\n\n    this.handleAuthError = err => {\n      this.setState({\n        snackbarOpen: true,\n        messageVariant: 'error',\n        snackbarMessage: 'Wrong credentials',\n        shakeClass: 'apply-shake',\n        loading: false\n      });\n    };\n\n    this.handleCloseSnackbar = () => {\n      this.setState({\n        snackbarOpen: false\n      });\n    };\n\n    this.handleFormChange = name => event => {\n      var val = event.target.value;\n      this.setState({\n        [name]: val\n      });\n    };\n  }\n\n  componentWillMount() {\n    var refreshTime = new Date();\n    refreshTime.setSeconds(refreshTime.getSeconds() + 1800); // if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\n    //     handleLogout()\n    // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\n    //     handleLogout()\n    // }\n  }\n\n  componentDidMount() {\n    var idm = localStorage.getItem('idm');\n    idm = JSON.parse(localStorage.getItem('idm'));\n\n    if (idm && idm.access_token !== undefined) {\n      // refreshToken();\n      if (idm.expires_at <= 300) {}\n    }\n  }\n\n  enterPressed(event) {\n    var code = event.keyCode || event.which;\n\n    if (code === 13) {\n      //13 is the enter keycode\n      this.authenticate();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, localStorage.getItem('idm') && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/app/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 48\n      }\n    }), this.logedin && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/app/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: this.state.shakeClass,\n      style: {\n        width: 600 + \"px\",\n        padding: 15 + \"px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: 10 + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      style: {\n        marginBottom: 20 + \"px\",\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"Log in\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"input-username\",\n      onKeyPress: this.enterPressed.bind(this),\n      label: \"Username\",\n      fullWidth: true,\n      onChange: this.handleFormChange('username'),\n      error: this.state.fieldUsernameError,\n      value: this.state.username,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AccountCircle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"input-password\",\n      onKeyPress: this.enterPressed.bind(this),\n      label: \"Password\",\n      type: \"password\",\n      onChange: this.handleFormChange('password'),\n      value: this.state.password,\n      error: this.state.fieldPasswordError,\n      fullWidth: true,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Lock, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.authenticate,\n      color: \"primary\",\n      fullWidth: true,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, !this.state.loading && 'Login', this.state.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      style: {\n        color: 'white'\n      },\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 44\n      }\n    })))), /*#__PURE__*/React.createElement(Snackbar, {\n      width: 600 + 'px',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      onClose: this.handleCloseSnackbar,\n      open: this.state.snackbarOpen,\n      variant: this.state.messageVariant,\n      autoHideDuration: 6000,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContent, {\n      onClose: this.handleCloseSnackbar,\n      variant: this.state.messageVariant,\n      message: this.state.snackbarMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/src/app/auth/login/login.container.js"],"names":["React","TextField","InputAdornment","AccountCircle","Lock","Card","Button","Redirect","Typography","axios","getAuthorizationHeader","handleLogout","SERVER_API_URL","Snackbar","MySnackbarContent","CircularProgress","LoginContainer","Component","state","username","password","shakeClass","redirect","snackbarOpen","snackbarMessage","fieldUsernameError","messageVariant","fieldPasswordError","authenticate","setState","loading","goterr","undefined","url","method","headers","then","res","handleAuthSuccess","catch","err","handleAuthError","expires_at_date","Date","getTime","data","expires_in","expires_at","localStorage","setItem","JSON","stringify","access_token","response","logedin","handleCloseSnackbar","handleFormChange","name","event","val","target","value","componentWillMount","refreshTime","setSeconds","getSeconds","componentDidMount","idm","getItem","parse","enterPressed","code","keyCode","which","render","width","padding","marginLeft","marginRight","marginTop","marginBottom","textAlign","bind","startAdornment","color","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Lock from '@material-ui/icons/Lock';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport Redirect from 'react-router-dom/Redirect'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport {getAuthorizationHeader, handleLogout, SERVER_API_URL} from '../../shared/app.properties';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MySnackbarContent from '../../shared/SnackbarContentWrapper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nexport default class LoginContainer extends React.Component {\r\n\r\n    username;\r\n    password;\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        shakeClass: '',\r\n        redirect: false,\r\n        snackbarOpen: false,\r\n        snackbarMessage: '',\r\n        fieldUsernameError: false,\r\n        messageVariant: 'error',\r\n        fieldPasswordError: false\r\n    }\r\n\r\n    componentWillMount() {\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        // if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n        //     handleLogout()\r\n        // } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n        //     handleLogout()\r\n        // }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var idm = localStorage.getItem('idm');\r\n        idm = JSON.parse(localStorage.getItem('idm'));\r\n        if(idm && idm.access_token !== undefined){\r\n            // refreshToken();\r\n            if(idm.expires_at <= 300){\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    enterPressed(event) {\r\n        var code = event.keyCode || event.which;\r\n        if(code === 13) { //13 is the enter keycode\r\n           this.authenticate();\r\n        } \r\n    }\r\n\r\n    authenticate = () => {\r\n        this.setState({shakeClass: '', snackbarOpen: false, loading: true});\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n\r\n\r\n        let goterr = false;\r\n        if(username == undefined || username == '' || username == ' '){\r\n            this.setState({fieldUsernameError: true, \r\n                snackbarOpen: true,\r\n                loading: false,\r\n                snackbarMessage: 'Some required fields are empty!'});\r\n            goterr = true;\r\n        }else{\r\n            this.setState({fieldUsernameError: false});\r\n        }\r\n        if(password == undefined || password == '' || password == ''){\r\n            this.setState({fieldPasswordError: true, \r\n                snackbarOpen: true,\r\n                loading: false,\r\n                snackbarMessage: 'Some required fields are empty!'});\r\n            goterr = true;\r\n        }else{\r\n            this.setState({fieldPasswordError: false});\r\n        }\r\n        if(goterr) return;\r\n\r\n        axios({\r\n            url: SERVER_API_URL + '/oauth/token?username='\r\n            + username \r\n            + '&password='\r\n            + password\r\n            + '&grant_type=password',\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization' : getAuthorizationHeader()\r\n            }\r\n        }).then(res => {\r\n            this.handleAuthSuccess(res);\r\n        }).catch(err => {\r\n            this.handleAuthError(err);\r\n        })\r\n    }\r\n\r\n    handleAuthSuccess = res => {\r\n\r\n        this.setState({\r\n            messageVariant: 'success',\r\n            snackbarMessage: '',\r\n            shakeClass: '',\r\n            snackbarOpen: false,\r\n            loading: false\r\n        });\r\n        var expires_at_date = new Date();\r\n        // expires_at_date.setSeconds(expires_at_date.getSeconds() + res.data.expires_in);\r\n        expires_at_date = new Date(expires_at_date.getTime() + res.data.expires_in * 1000);\r\n        res.data.expires_at = expires_at_date;\r\n\r\n\r\n        res.data.username = this.state.username;\r\n        localStorage.setItem('idm', JSON.stringify(res.data));\r\n        \r\n        axios({\r\n            url: SERVER_API_URL + '/users/me?access_token='\r\n            + res.data.access_token, \r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization' : 'Basic bXktdHJ1c3RlZC1jbGllbnQ6c2VjcmV0'\r\n            }\r\n        }).then(response => {\r\n            localStorage.setItem('me', JSON.stringify(response.data));\r\n            this.setState({\r\n                logedin: true\r\n            })\r\n        }).catch(err => {\r\n\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n\r\n    handleAuthError = err => {\r\n\r\n\r\n        this.setState({\r\n            snackbarOpen: true,\r\n            messageVariant: 'error',\r\n            snackbarMessage: 'Wrong credentials',\r\n            shakeClass: 'apply-shake',\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    handleCloseSnackbar = () =>{\r\n        this.setState({snackbarOpen: false});\r\n    }\r\n\r\n    handleFormChange = name => event => {\r\n        let val = event.target.value;\r\n        this.setState({\r\n         [name]: val\r\n        });\r\n     }; \r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem('idm') && <Redirect to='/app/'/>\r\n            }\r\n            {\r\n                this.logedin && <Redirect to='/app/'/>\r\n            }\r\n            <Card className={this.state.shakeClass} style={{width: 600+\"px\", padding: 15+\"px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 10+\"%\"}}>\r\n            \r\n            <Typography variant=\"h5\" style={{marginBottom: 20+\"px\", textAlign: 'center'}} >Log in</Typography>\r\n            <form>\r\n            <TextField\r\n                id=\"input-username\"\r\n                onKeyPress={this.enterPressed.bind(this)}\r\n                label=\"Username\"\r\n                fullWidth={true}\r\n                onChange={this.handleFormChange('username')}\r\n                error={this.state.fieldUsernameError}\r\n                value={this.state.username}\r\n                InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                    <AccountCircle />\r\n                    </InputAdornment>\r\n                ),\r\n                }}\r\n            />\r\n\r\n            <br/><br/>\r\n                <TextField\r\n                id=\"input-password\"\r\n                onKeyPress={this.enterPressed.bind(this)}\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={this.handleFormChange('password')}\r\n                value={this.state.password}\r\n                error={this.state.fieldPasswordError}\r\n                fullWidth={true}\r\n                InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                    <Lock />\r\n                    </InputAdornment>\r\n                ),\r\n                }}\r\n            />\r\n            <br/><br/><br/>\r\n            <Button onClick={this.authenticate} color=\"primary\" fullWidth={true} variant=\"contained\">\r\n                    {!this.state.loading && 'Login' }\r\n                    {this.state.loading && <CircularProgress style={{color: 'white'}} size={24} />}\r\n            </Button>\r\n            </form>\r\n            </Card>\r\n            \r\n\r\n          <Snackbar\r\n            width={600+'px'}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            onClose={this.handleCloseSnackbar}\r\n            open={this.state.snackbarOpen}\r\n            variant={this.state.messageVariant}\r\n            autoHideDuration={6000}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id',\r\n            }}\r\n          >\r\n            <MySnackbarContent\r\n              onClose={this.handleCloseSnackbar}\r\n              variant={this.state.messageVariant}\r\n              message={this.state.snackbarMessage}\r\n            />\r\n          </Snackbar>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}