{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Desktop/Repositories/starter-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport TextareaAutosize from '../TextareaAutosize';\nimport { isFilled } from './utils';\nexport var styles = theme => {\n  var light = theme.palette.type === 'light';\n  var placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  var placeholderHidden = {\n    opacity: '0 !important'\n  };\n  var placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    '@global': {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    },\n\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, {\n      color: theme.palette.text.primary,\n      lineHeight: '1.1876em',\n      // Reset (19px), match the native input line-height\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      position: 'relative',\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    }),\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\"),\n      '&$marginDense': {\n        paddingTop: 4 - 1\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      letterSpacing: 'inherit',\n      color: 'currentColor',\n      padding: \"\".concat(8 - 2, \"px 0 \").concat(8 - 1, \"px\"),\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.1876em',\n      // Reset (19px), match the native input line-height\n      margin: 0,\n      // Reset for Safari\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      animationName: 'mui-auto-fill-cancel',\n      animationDuration: '10ms',\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      },\n      '&:-webkit-autofill': {\n        animationDuration: '5000s',\n        animationName: 'mui-auto-fill'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 4 - 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {},\n\n    /* Styles applied to the `input` element if `hiddenLabel={true}`. */\n    inputHiddenLabel: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nvar InputBase = /*#__PURE__*/React.forwardRef(function InputBase(props, ref) {\n  var ariaDescribedby = props['aria-describedby'],\n      autoComplete = props.autoComplete,\n      autoFocus = props.autoFocus,\n      classes = props.classes,\n      className = props.className,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      endAdornment = props.endAdornment,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      id = props.id,\n      _props$inputComponent = props.inputComponent,\n      inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent,\n      _props$inputProps = props.inputProps,\n      inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps,\n      inputRefProp = props.inputRef,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      placeholder = props.placeholder,\n      readOnly = props.readOnly,\n      renderSuffix = props.renderSuffix,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      rowsMin = props.rowsMin,\n      startAdornment = props.startAdornment,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      valueProp = props.value,\n      other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"rowsMax\", \"rowsMin\", \"startAdornment\", \"type\", \"value\"]);\n\n  var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef();\n  var handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` prop.', 'Make sure the `inputRef` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  var handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  var handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  var handleInputRef = useForkRef(inputRef, handleInputRefProp);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  var fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  var onFilled = muiFormControl && muiFormControl.onFilled;\n  var onEmpty = muiFormControl && muiFormControl.onEmpty;\n  var checkDirty = React.useCallback(obj => {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(() => {\n    if (isControlled) {\n      checkDirty({\n        value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  var handleFocus = event => {\n    // Fix a bug with IE 11 where the focus/blur events are triggered\n    // while the input is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  var handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  var handleChange = (event, ...args) => {\n    if (!isControlled) {\n      var element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.\" : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange(event, ...args);\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange(event, ...args);\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(() => {\n    checkDirty(inputRef.current);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleClick = event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var InputComponent = inputComponent;\n\n  var inputProps = _extends({}, inputPropsProp, {\n    ref: handleInputRef\n  });\n\n  if (typeof InputComponent !== 'string') {\n    inputProps = _extends({\n      // Rename ref to inputRef as we don't know the\n      // provided `inputComponent` structure.\n      inputRef: handleInputRef,\n      type\n    }, inputProps, {\n      ref: null\n    });\n  } else if (multiline) {\n    if (rows && !rowsMax && !rowsMin) {\n      InputComponent = 'textarea';\n    } else {\n      inputProps = _extends({\n        rows,\n        rowsMax\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  } else {\n    inputProps = _extends({\n      type\n    }, inputProps);\n  }\n\n  var handleAutoFill = event => {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(() => {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.margin === 'dense' && classes.marginDense),\n    onClick: handleClick,\n    ref: ref\n  }, other), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  }, inputProps, {\n    className: clsx(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment\n  })) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the input is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(InputBase);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/core/es/InputBase/InputBase.js"],"names":["_objectWithoutPropertiesLoose","_extends","formatMuiErrorMessage","_formatMuiErrorMessage","React","PropTypes","clsx","refType","formControlState","FormControlContext","useFormControl","withStyles","capitalize","useForkRef","TextareaAutosize","isFilled","styles","theme","light","palette","type","placeholder","color","opacity","transition","transitions","create","duration","shorter","placeholderHidden","placeholderVisible","root","typography","body1","text","primary","lineHeight","boxSizing","position","cursor","display","alignItems","disabled","formControl","focused","adornedStart","adornedEnd","error","marginDense","multiline","padding","paddingTop","colorSecondary","fullWidth","width","input","font","letterSpacing","border","background","height","margin","WebkitTapHighlightColor","minWidth","animationName","animationDuration","outline","boxShadow","inputMarginDense","inputMultiline","resize","inputTypeSearch","inputAdornedStart","inputAdornedEnd","inputHiddenLabel","useEnhancedEffect","window","useEffect","useLayoutEffect","InputBase","forwardRef","props","ref","ariaDescribedby","autoComplete","autoFocus","classes","className","defaultValue","endAdornment","id","inputComponent","inputProps","inputPropsProp","inputRefProp","inputRef","name","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","readOnly","renderSuffix","rows","rowsMax","rowsMin","startAdornment","valueProp","value","other","useRef","isControlled","current","handleInputRefWarning","useCallback","instance","process","env","NODE_ENV","nodeName","focus","console","join","handleInputPropsRefProp","handleInputRefProp","handleInputRef","useState","setFocused","muiFormControl","registerEffect","undefined","fcs","states","onFilled","onEmpty","checkDirty","obj","handleFocus","event","stopPropagation","handleBlur","handleChange","args","element","target","Error","handleClick","currentTarget","InputComponent","handleAutoFill","setAdornedStart","Boolean","createElement","Provider","onAnimationStart","required","hiddenLabel","propTypes","string","bool","object","oneOf","any","node","elementType","func","oneOfType","number"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport TextareaAutosize from '../TextareaAutosize';\nimport { isFilled } from './utils';\nexport const styles = theme => {\n  const light = theme.palette.type === 'light';\n  const placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  const placeholderHidden = {\n    opacity: '0 !important'\n  };\n  const placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return {\n    '@global': {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    },\n\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, {\n      color: theme.palette.text.primary,\n      lineHeight: '1.1876em',\n      // Reset (19px), match the native input line-height\n      boxSizing: 'border-box',\n      // Prevent padding issue with fullWidth.\n      position: 'relative',\n      cursor: 'text',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '&$disabled': {\n        color: theme.palette.text.disabled,\n        cursor: 'default'\n      }\n    }),\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {},\n\n    /* Styles applied to the root element if the component is focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `startAdornment` is provided. */\n    adornedStart: {},\n\n    /* Styles applied to the root element if `endAdornment` is provided. */\n    adornedEnd: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    marginDense: {},\n\n    /* Styles applied to the root element if `multiline={true}`. */\n    multiline: {\n      padding: `${8 - 2}px 0 ${8 - 1}px`,\n      '&$marginDense': {\n        paddingTop: 4 - 1\n      }\n    },\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the `input` element. */\n    input: {\n      font: 'inherit',\n      letterSpacing: 'inherit',\n      color: 'currentColor',\n      padding: `${8 - 2}px 0 ${8 - 1}px`,\n      border: 0,\n      boxSizing: 'content-box',\n      background: 'none',\n      height: '1.1876em',\n      // Reset (19px), match the native input line-height\n      margin: 0,\n      // Reset for Safari\n      WebkitTapHighlightColor: 'transparent',\n      display: 'block',\n      // Make the flex item shrink with Firefox\n      minWidth: 0,\n      width: '100%',\n      // Fix IE 11 width issue\n      animationName: 'mui-auto-fill-cancel',\n      animationDuration: '10ms',\n      '&::-webkit-input-placeholder': placeholder,\n      '&::-moz-placeholder': placeholder,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholder,\n      // IE 11\n      '&::-ms-input-placeholder': placeholder,\n      // Edge\n      '&:focus': {\n        outline: 0\n      },\n      // Reset Firefox invalid required input style\n      '&:invalid': {\n        boxShadow: 'none'\n      },\n      '&::-webkit-search-decoration': {\n        // Remove the padding when type=search.\n        '-webkit-appearance': 'none'\n      },\n      // Show and hide the placeholder logic\n      'label[data-shrink=false] + $formControl &': {\n        '&::-webkit-input-placeholder': placeholderHidden,\n        '&::-moz-placeholder': placeholderHidden,\n        // Firefox 19+\n        '&:-ms-input-placeholder': placeholderHidden,\n        // IE 11\n        '&::-ms-input-placeholder': placeholderHidden,\n        // Edge\n        '&:focus::-webkit-input-placeholder': placeholderVisible,\n        '&:focus::-moz-placeholder': placeholderVisible,\n        // Firefox 19+\n        '&:focus:-ms-input-placeholder': placeholderVisible,\n        // IE 11\n        '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n      },\n      '&$disabled': {\n        opacity: 1 // Reset iOS opacity\n\n      },\n      '&:-webkit-autofill': {\n        animationDuration: '5000s',\n        animationName: 'mui-auto-fill'\n      }\n    },\n\n    /* Styles applied to the `input` element if `margin=\"dense\"`. */\n    inputMarginDense: {\n      paddingTop: 4 - 1\n    },\n\n    /* Styles applied to the `input` element if `multiline={true}`. */\n    inputMultiline: {\n      height: 'auto',\n      resize: 'none',\n      padding: 0\n    },\n\n    /* Styles applied to the `input` element if `type=\"search\"`. */\n    inputTypeSearch: {\n      // Improve type search style.\n      '-moz-appearance': 'textfield',\n      '-webkit-appearance': 'textfield'\n    },\n\n    /* Styles applied to the `input` element if `startAdornment` is provided. */\n    inputAdornedStart: {},\n\n    /* Styles applied to the `input` element if `endAdornment` is provided. */\n    inputAdornedEnd: {},\n\n    /* Styles applied to the `input` element if `hiddenLabel={true}`. */\n    inputHiddenLabel: {}\n  };\n};\nconst useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nconst InputBase = /*#__PURE__*/React.forwardRef(function InputBase(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    autoComplete,\n    autoFocus,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    endAdornment,\n    fullWidth = false,\n    id,\n    inputComponent = 'input',\n    inputProps: inputPropsProp = {},\n    inputRef: inputRefProp,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    placeholder,\n    readOnly,\n    renderSuffix,\n    rows,\n    rowsMax,\n    rowsMin,\n    startAdornment,\n    type = 'text',\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"rowsMax\", \"rowsMin\", \"startAdornment\", \"type\", \"value\"]);\n\n  const value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef();\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `inputRef` prop.', 'Make sure the `inputRef` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  const handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  const handleInputRef = useForkRef(inputRef, handleInputRefProp);\n  const [focused, setFocused] = React.useState(false);\n  const muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  const onFilled = muiFormControl && muiFormControl.onFilled;\n  const onEmpty = muiFormControl && muiFormControl.onEmpty;\n  const checkDirty = React.useCallback(obj => {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(() => {\n    if (isControlled) {\n      checkDirty({\n        value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  const handleFocus = event => {\n    // Fix a bug with IE 11 where the focus/blur events are triggered\n    // while the input is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = (event, ...args) => {\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: Expected valid input target. Did you use a custom \\`inputComponent\\` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange(event, ...args);\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange(event, ...args);\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(() => {\n    checkDirty(inputRef.current);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleClick = event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  let InputComponent = inputComponent;\n\n  let inputProps = _extends({}, inputPropsProp, {\n    ref: handleInputRef\n  });\n\n  if (typeof InputComponent !== 'string') {\n    inputProps = _extends({\n      // Rename ref to inputRef as we don't know the\n      // provided `inputComponent` structure.\n      inputRef: handleInputRef,\n      type\n    }, inputProps, {\n      ref: null\n    });\n  } else if (multiline) {\n    if (rows && !rowsMax && !rowsMin) {\n      InputComponent = 'textarea';\n    } else {\n      inputProps = _extends({\n        rows,\n        rowsMax\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  } else {\n    inputProps = _extends({\n      type\n    }, inputProps);\n  }\n\n  const handleAutoFill = event => {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(() => {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`color${capitalize(fcs.color || 'primary')}`], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, fcs.margin === 'dense' && classes.marginDense),\n    onClick: handleClick,\n    ref: ref\n  }, other), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  }, inputProps, {\n    className: clsx(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, type === 'search' && classes.inputTypeSearch, fcs.margin === 'dense' && classes.inputMarginDense),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment\n  })) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the input will indicate an error. This is normally obtained via context from\n   * FormControl.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   */\n  inputComponent: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * If `true`, a textarea element will be rendered.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the input is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputBase'\n})(InputBase);"]},"metadata":{},"sourceType":"module"}