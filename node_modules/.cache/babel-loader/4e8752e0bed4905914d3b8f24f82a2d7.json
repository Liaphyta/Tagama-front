{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 1,\n    margin: 0,\n    // Reset browser default style.\n    border: 'none',\n    flexShrink: 0,\n    backgroundColor: theme.palette.divider\n  },\n\n  /* Styles applied to the root element if `absolute={true}`. */\n  absolute: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `variant=\"inset\"`. */\n  inset: {\n    marginLeft: 72\n  },\n\n  /* Styles applied to the root element if `light={true}`. */\n  light: {\n    backgroundColor: fade(theme.palette.divider, 0.08)\n  },\n\n  /* Styles applied to the root element if `variant=\"middle\"`. */\n  middle: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    height: '100%',\n    width: 1\n  },\n\n  /* Styles applied to the root element if `flexItem={true}`. */\n  flexItem: {\n    alignSelf: 'stretch',\n    height: 'auto'\n  }\n});\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/core/es/Divider/Divider.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","fade","styles","theme","root","height","margin","border","flexShrink","backgroundColor","palette","divider","absolute","position","bottom","left","width","inset","marginLeft","light","middle","spacing","marginRight","vertical","flexItem","alignSelf","Divider","forwardRef","props","ref","classes","className","component","Component","orientation","role","undefined","variant","other","createElement","process","env","NODE_ENV","propTypes","bool","children","node","object","string","elementType","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 1,\n    margin: 0,\n    // Reset browser default style.\n    border: 'none',\n    flexShrink: 0,\n    backgroundColor: theme.palette.divider\n  },\n\n  /* Styles applied to the root element if `absolute={true}`. */\n  absolute: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `variant=\"inset\"`. */\n  inset: {\n    marginLeft: 72\n  },\n\n  /* Styles applied to the root element if `light={true}`. */\n  light: {\n    backgroundColor: fade(theme.palette.divider, 0.08)\n  },\n\n  /* Styles applied to the root element if `variant=\"middle\"`. */\n  middle: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    height: '100%',\n    width: 1\n  },\n\n  /* Styles applied to the root element if `flexItem={true}`. */\n  flexItem: {\n    alignSelf: 'stretch',\n    height: 'auto'\n  }\n});\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  const {\n    absolute = false,\n    classes,\n    className,\n    component: Component = 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = Component !== 'hr' ? 'separator' : undefined,\n    variant = 'fullWidth'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"]},"metadata":{},"sourceType":"module"}