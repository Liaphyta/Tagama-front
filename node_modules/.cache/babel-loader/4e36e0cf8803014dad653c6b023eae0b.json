{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\shared\\\\NavbarRight.js\";\nimport React from 'react';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Badge, IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport Redirect from 'react-router/Redirect';\nimport { dispatchAction } from '../..';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\nimport Typography from '@material-ui/core/Typography';\n\nvar NavbarRight =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavbarRight, _React$Component);\n\n  function NavbarRight() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NavbarRight);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavbarRight)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userMenuIsOpen: false,\n      anchorEl: null,\n      taskNotifications: false\n    };\n\n    _this.handleUserMenuOpen = function (event) {\n      _this.setState({\n        userMenuIsOpen: true,\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleUserMenuClose = function () {\n      _this.setState({\n        userMenuIsOpen: false,\n        anchorEl: null\n      });\n    };\n\n    _this.handleTaskNotificationsOpen = function (event) {\n      _this.setState({\n        taskNotifications: true,\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleTaskNotificationsClose = function () {\n      _this.setState({\n        taskNotifications: false,\n        anchorEl: null\n      });\n    };\n\n    _this.handleLogout = function () {\n      dispatchAction({\n        type: \"USER_LOGOUT\",\n        payload: undefined\n      });\n      localStorage.removeItem('idm');\n      localStorage.removeItem('me');\n\n      _this.setState({});\n    };\n\n    return _this;\n  }\n\n  _createClass(NavbarRight, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var refreshTime = new Date();\n      refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\n      return React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: 25 + 'px'\n        },\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        onClick: this.handleTaskNotificationsOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        badgeContent: 0,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        \"aria-owns\": false ? 'material-appbar' : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: this.handleUserMenuOpen,\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(AccountCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          paddingLeft: 10 + 'px',\n          fontSize: 20 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" \", localStorage.getItem('me') && JSON.parse(localStorage.getItem('me')).username, \" \")));\n    }\n  }]);\n\n  return NavbarRight;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(NavbarRight);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/shared/NavbarRight.js"],"names":["React","AccountCircle","InstagramIcon","Link","connect","Badge","IconButton","Menu","MenuItem","Redirect","dispatchAction","ListItemIcon","PriorityHighIcon","Typography","NavbarRight","state","userMenuIsOpen","anchorEl","taskNotifications","handleUserMenuOpen","event","setState","currentTarget","handleUserMenuClose","handleTaskNotificationsOpen","handleTaskNotificationsClose","handleLogout","type","payload","undefined","localStorage","removeItem","refreshTime","Date","setSeconds","getSeconds","position","right","paddingLeft","fontSize","getItem","JSON","parse","username","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {Badge, IconButton, Menu, MenuItem,} from \"@material-ui/core\";\r\nimport Redirect from 'react-router/Redirect';\r\nimport {dispatchAction} from '../..';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nclass NavbarRight extends React.Component {\r\n\r\n  state = {\r\n    userMenuIsOpen: false,\r\n      anchorEl: null,\r\n      taskNotifications: false\r\n  };\r\n\r\n  componentDidMount(){\r\n  }\r\n\r\n  \r\n\r\n  handleUserMenuOpen = event => {\r\n    this.setState({\r\n      userMenuIsOpen: true,\r\n      anchorEl: event.currentTarget\r\n    })\r\n  }\r\n\r\n  \r\n  handleUserMenuClose = () => {\r\n    this.setState({\r\n      userMenuIsOpen: false,\r\n      anchorEl: null\r\n    });\r\n  }\r\n\r\n    handleTaskNotificationsOpen = event => {\r\n        this.setState({\r\n            taskNotifications: true,\r\n            anchorEl: event.currentTarget,\r\n\r\n        })\r\n    }\r\n\r\n    handleTaskNotificationsClose = () => {\r\n        this.setState({\r\n            taskNotifications: false,\r\n            anchorEl: null\r\n        });\r\n    }\r\n  \r\n  \r\n  handleLogout = () => {\r\n    dispatchAction({type: \"USER_LOGOUT\", payload: undefined});\r\n    localStorage.removeItem('idm');\r\n    localStorage.removeItem('me');\r\n    this.setState({});\r\n\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    let refreshTime = new Date();\r\n      refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n  return (\r\n    \r\n    <div style={{position:\"absolute\", right:25+'px'}} className=\"pull-right\">\r\n\r\n    {/* You need this when you will handle with logout stuff */}\r\n    {/* {\r\n      !localStorage.getItem('idm') && !localStorage.getItem('me') && <Redirect to='/login' />\r\n    } */}\r\n\r\n\r\n        {/* <IconButton color=\"inherit\">\r\n                <Badge badgeContent={4} color=\"secondary\">\r\n                  <MailIcon />\r\n                </Badge>\r\n              </IconButton> */}\r\n        <IconButton color=\"inherit\" onClick={this.handleTaskNotificationsOpen}>\r\n            <Badge\r\n                badgeContent={0}\r\n                color=\"secondary\">\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton\r\n                aria-owns={false ? 'material-appbar' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleUserMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle   />\r\n                \r\n                <span style={{paddingLeft: 10+'px', fontSize: 20+'px'}}> {localStorage.getItem('me') && JSON.parse(localStorage.getItem('me')).username} </span>\r\n\r\n              \r\n\r\n              </IconButton>\r\n              {/* <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={this.state.anchorEl}\r\n                  open={this.state.userMenuIsOpen}\r\n                  onClose={() => this.handleUserMenuClose()}\r\n                  style={{position: 'fixed', left: 20 + '%', top: 35 + 'px'}}\r\n                >\r\n\r\n                <MenuItem onClick={this.handleUserMenuClose}><Link to=\"/app/profile\">My account</Link></MenuItem>\r\n                <MenuItem onClick={this.handleLogout}>Logout</MenuItem>\r\n              </Menu>\r\n\r\n        <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={this.state.anchorEl}\r\n            open={this.state.taskNotifications}\r\n            onClose={() => this.handleTaskNotificationsClose()}\r\n            style={{position: 'fixed', left: 15 + '%', top: 40 + 'px'}}\r\n        >\r\n\r\n                    <MenuItem disabled>\r\n                        <Typography variant=\"inherit\" noWrap>\r\n                            {'There are not any notifications yet...'}\r\n                        </Typography>\r\n                    </MenuItem>\r\n\r\n            \r\n\r\n        </Menu> */}\r\n                          \r\n            </div>\r\n\r\n  )}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n}))(NavbarRight);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}