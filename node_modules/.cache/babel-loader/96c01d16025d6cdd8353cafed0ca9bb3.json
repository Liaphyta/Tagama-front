{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar RADIUS_STANDARD = 10;\nvar RADIUS_DOT = 4;\nexport var styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'relative',\n    display: 'inline-flex',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the badge `span` element. */\n  badge: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  },\n\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  },\n\n  /* Styles applied to the root element if `variant=\"dot\"`. */\n  dot: {\n    borderRadius: RADIUS_DOT,\n    height: RADIUS_DOT * 2,\n    minWidth: RADIUS_DOT * 2,\n    padding: 0\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangle\"`. */\n  anchorOriginTopRightRectangle: {\n    top: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangle\"`. */\n  anchorOriginBottomRightRectangle: {\n    bottom: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangle\"`. */\n  anchorOriginTopLeftRectangle: {\n    top: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangle\"`. */\n  anchorOriginBottomLeftRectangle: {\n    bottom: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circle\"`. */\n  anchorOriginTopRightCircle: {\n    top: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circle\"`. */\n  anchorOriginBottomRightCircle: {\n    bottom: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circle\"`. */\n  anchorOriginTopLeftCircle: {\n    top: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circle\"`. */\n  anchorOriginBottomLeftCircle: {\n    bottom: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  },\n\n  /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n  invisible: {\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  }\n});\nvar Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContent = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      ComponentProp = _props$component === void 0 ? 'span' : _props$component,\n      invisibleProp = props.invisible,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 99 : _props$max,\n      _props$overlap = props.overlap,\n      overlap = _props$overlap === void 0 ? 'rectangle' : _props$overlap,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== 'dot')) {\n    invisible = true;\n  }\n\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[\"\".concat(anchorOrigin.horizontal).concat(capitalize(anchorOrigin.vertical), \"}\")], classes[\"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap))], color !== 'default' && classes[\"color\".concat(capitalize(color))], invisible && classes.invisible, variant === 'dot' && classes.dot)\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   */\n  overlap: PropTypes.oneOf(['circle', 'rectangle']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['dot', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/core/es/Badge/Badge.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","capitalize","RADIUS_STANDARD","RADIUS_DOT","styles","theme","root","position","display","verticalAlign","flexShrink","badge","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","colorPrimary","backgroundColor","palette","primary","main","color","contrastText","colorSecondary","secondary","colorError","error","dot","anchorOriginTopRightRectangle","top","right","transform","transformOrigin","anchorOriginBottomRightRectangle","bottom","anchorOriginTopLeftRectangle","left","anchorOriginBottomLeftRectangle","anchorOriginTopRightCircle","anchorOriginBottomRightCircle","anchorOriginTopLeftCircle","anchorOriginBottomLeftCircle","invisible","leavingScreen","Badge","forwardRef","props","ref","anchorOrigin","vertical","horizontal","badgeContent","children","classes","className","component","ComponentProp","invisibleProp","max","overlap","showZero","variant","other","displayValue","createElement","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","object","string","elementType","bool","number","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'relative',\n    display: 'inline-flex',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the badge `span` element. */\n  badge: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  },\n\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  },\n\n  /* Styles applied to the root element if `variant=\"dot\"`. */\n  dot: {\n    borderRadius: RADIUS_DOT,\n    height: RADIUS_DOT * 2,\n    minWidth: RADIUS_DOT * 2,\n    padding: 0\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangle\"`. */\n  anchorOriginTopRightRectangle: {\n    top: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangle\"`. */\n  anchorOriginBottomRightRectangle: {\n    bottom: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangle\"`. */\n  anchorOriginTopLeftRectangle: {\n    top: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangle\"`. */\n  anchorOriginBottomLeftRectangle: {\n    bottom: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circle\"`. */\n  anchorOriginTopRightCircle: {\n    top: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circle\"`. */\n  anchorOriginBottomRightCircle: {\n    bottom: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circle\"`. */\n  anchorOriginTopLeftCircle: {\n    top: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circle\"`. */\n  anchorOriginBottomLeftCircle: {\n    bottom: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  },\n\n  /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n  invisible: {\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  }\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  const {\n    anchorOrigin = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    badgeContent,\n    children,\n    classes,\n    className,\n    color = 'default',\n    component: ComponentProp = 'span',\n    invisible: invisibleProp,\n    max = 99,\n    overlap = 'rectangle',\n    showZero = false,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  let invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== 'dot')) {\n    invisible = true;\n  }\n\n  let displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? `${max}+` : badgeContent;\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[`${anchorOrigin.horizontal}${capitalize(anchorOrigin.vertical)}}`], classes[`anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`], color !== 'default' && classes[`color${capitalize(color)}`], invisible && classes.invisible, variant === 'dot' && classes.dot)\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   */\n  overlap: PropTypes.oneOf(['circle', 'rectangle']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['dot', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);"]},"metadata":{},"sourceType":"module"}