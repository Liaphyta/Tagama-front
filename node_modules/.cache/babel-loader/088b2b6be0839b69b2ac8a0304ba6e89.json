{"ast":null,"code":"import _curry1 from './internal/_curry1.js';\n/**\r\n * Takes a function `fn`, which takes a single array argument, and returns a\r\n * function which:\r\n *\r\n *   - takes any number of positional arguments;\r\n *   - passes these arguments to `fn` as an array; and\r\n *   - returns the result.\r\n *\r\n * In other words, `R.unapply` derives a variadic function from a function which\r\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.8.0\r\n * @category Function\r\n * @sig ([*...] -> a) -> (*... -> a)\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @see R.apply\r\n * @example\r\n *\r\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\r\n * @symb R.unapply(f)(a, b) = f([a, b])\r\n */\n\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nexport default unapply;","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/ramda/es/unapply.js"],"names":["_curry1","unapply","fn","Array","prototype","slice","call","arguments"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,aAAaD,OAAO,CAAC,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AACtD,SAAO,YAAY;AACjB,WAAOA,EAAE,CAACC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAD,CAAT;AACD,GAFD;AAGD,CAJiC,CAAlC;;AAKA,eAAeN,OAAf","sourcesContent":["import _curry1 from './internal/_curry1.js';\r\n\r\n/**\r\n * Takes a function `fn`, which takes a single array argument, and returns a\r\n * function which:\r\n *\r\n *   - takes any number of positional arguments;\r\n *   - passes these arguments to `fn` as an array; and\r\n *   - returns the result.\r\n *\r\n * In other words, `R.unapply` derives a variadic function from a function which\r\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.8.0\r\n * @category Function\r\n * @sig ([*...] -> a) -> (*... -> a)\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @see R.apply\r\n * @example\r\n *\r\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\r\n * @symb R.unapply(f)(a, b) = f([a, b])\r\n */\r\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\r\n  return function () {\r\n    return fn(Array.prototype.slice.call(arguments, 0));\r\n  };\r\n});\r\nexport default unapply;"]},"metadata":{},"sourceType":"module"}