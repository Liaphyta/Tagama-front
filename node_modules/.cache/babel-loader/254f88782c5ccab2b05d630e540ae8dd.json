{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar WHITE_SPACES_CODES = [32];\n/**\r\n * Check if glyph is white space\r\n *\r\n * @param  {Object}  glyph\r\n * @return {Boolean}  is white space\r\n * */\n\nvar isWhiteSpace = R.compose(R.not, R.isEmpty, R.intersection(WHITE_SPACES_CODES), R.propOr([], 'codePoints'));\nvar _default = isWhiteSpace;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@react-pdf/textkit/glyph/isWhiteSpace.js"],"names":["_interopRequireWildcard","require","exports","__esModule","R","WHITE_SPACES_CODES","isWhiteSpace","compose","not","isEmpty","intersection","propOr","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGJ,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAII,kBAAkB,GAAG,CAAC,EAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAGF,CAAC,CAACG,OAAF,CAAUH,CAAC,CAACI,GAAZ,EAAiBJ,CAAC,CAACK,OAAnB,EAA4BL,CAAC,CAACM,YAAF,CAAeL,kBAAf,CAA5B,EAAgED,CAAC,CAACO,MAAF,CAAS,EAAT,EAAa,YAAb,CAAhE,CAAnB;AACA,IAAIC,QAAQ,GAAGN,YAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBU,QAArB","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar R = _interopRequireWildcard(require(\"ramda\"));\r\n\r\nvar WHITE_SPACES_CODES = [32];\r\n/**\r\n * Check if glyph is white space\r\n *\r\n * @param  {Object}  glyph\r\n * @return {Boolean}  is white space\r\n * */\r\n\r\nvar isWhiteSpace = R.compose(R.not, R.isEmpty, R.intersection(WHITE_SPACES_CODES), R.propOr([], 'codePoints'));\r\nvar _default = isWhiteSpace;\r\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}