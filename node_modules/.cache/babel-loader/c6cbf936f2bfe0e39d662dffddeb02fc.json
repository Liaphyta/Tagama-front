{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\scans\\\\scans.container.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { getBooksAndRecords } from '../module/Folders/folder.repo';\nimport { dispatchAction } from 'C:/Users/User/Desktop/starter-app/src/index.js';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nvar ScansContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScansContainer, _React$Component);\n\n  function ScansContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ScansContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScansContainer).call(this, props));\n\n    _this.handleFormInput = function (name) {\n      return function (event) {\n        var formdata = _this.state.formdata;\n        formdata[name] = event.target.value;\n\n        _this.setState({\n          formdata: formdata\n        });\n      };\n    };\n\n    _this.onChangeRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPages: event.target.value\n      });\n\n      console.log(_this.state.rowsPerPages);\n\n      _this.listBooksAndRecords(_this.state.formdata.registerType, _this.state.formdata.registerYear, _this.state.formdata.registerName, _this.state.dateFrom.toISOString(), _this.state.dateTo.toISOString(), 0, event.target.value);\n    };\n\n    _this.handleChangePage = function (event, page) {\n      if (_this.state.data && _this.state.data.data && _this.state.data.data.size) {\n        _this.listBooksAndRecords(_this.state.formdata.registerType, _this.state.formdata.registerYear, _this.state.formdata.registerName, _this.state.dateFrom.toISOString(), _this.state.dateTo.toISOString(), page, _this.state.data.data.size);\n      } else {\n        _this.listBooksAndRecords(page, 5);\n      }\n    };\n\n    _this.handleChangeDateField = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event));\n      };\n    };\n\n    _this.formatDate = function (dateString) {\n      var newDateStringArr = dateString.split('T');\n      newDateStringArr[1] = newDateStringArr[1].split('.000Z')[0];\n      return newDateStringArr[0] + ' ' + newDateStringArr[1];\n    };\n\n    _this.listBooksAndRecords = function (type, year, name, dateFrom, dateTo, page, size) {\n      // console.log(this.state.formdata.registerName);\n      // console.log(this.state.formdata.registerType);\n      // console.log(this.state.formdata.registerYear);\n      dispatchAction({\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\n      });\n      getBooksAndRecords(type, year, name, dateFrom, dateTo, page, size).then(function (response) {\n        _this.setState({\n          data: response\n        }, dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        }));\n\n        console.log(response);\n      }).catch(function (error) {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      rowsPerPages: 5,\n      data: {},\n      formdata: {\n        registerName: undefined,\n        registerYear: undefined,\n        registerType: undefined\n      },\n      dateFrom: new Date(),\n      dateTo: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(ScansContainer, [{\n    key: \"handleStatus\",\n    value: function handleStatus(props) {\n      if (props == 1) return \"Венчани\";else if (props == 0) return \"Родени\";else if (props == 2) return \"Умрени\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement,\n          _React$createElement2,\n          _React$createElement3,\n          _this2 = this;\n\n      return React.createElement(\"form\", {\n        style: {\n          marginLeft: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TextField, (_React$createElement = {\n        id: \"standard-input\",\n        label: \"Name Register Book\",\n        variant: \"outlined\",\n        style: {\n          marginTop: 50 + \"px\",\n          borderColor: 'red'\n        },\n        inputProps: {\n          style: {\n            borderColor: 'red'\n          }\n        } // value={values.name}\n        // onChange={handleChange('name')}\n        ,\n        onChange: this.handleFormInput('registerName'),\n        margin: \"normal\"\n      }, _defineProperty(_React$createElement, \"variant\", \"outlined\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(TextField, (_React$createElement2 = {\n        id: \"standard-input\",\n        label: \"Year\",\n        variant: \"outlined\",\n        style: {\n          marginTop: 50 + \"px\",\n          marginLeft: 20 + \"px\",\n          borderColor: 'red'\n        },\n        inputProps: {\n          style: {\n            borderColor: 'red'\n          }\n        } // value={values.name}\n        ,\n        onChange: this.handleFormInput('registerYear'),\n        margin: \"normal\"\n      }, _defineProperty(_React$createElement2, \"variant\", \"outlined\"), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2)), React.createElement(TextField, (_React$createElement3 = {\n        id: \"standard-input\",\n        label: \"Type Register Book\",\n        variant: \"outlined\",\n        style: {\n          marginTop: 50 + \"px\",\n          marginLeft: 20 + \"px\",\n          borderColor: 'red'\n        },\n        inputProps: {\n          style: {\n            borderColor: 'red'\n          }\n        } // value={values.name}\n        ,\n        margin: \"normal\"\n      }, _defineProperty(_React$createElement3, \"variant\", \"outlined\"), _defineProperty(_React$createElement3, \"onChange\", this.handleFormInput('registerType')), _defineProperty(_React$createElement3, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      }), _defineProperty(_React$createElement3, \"__self\", this), _React$createElement3)), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          marginTop: 50 + \"px\",\n          marginLeft: 20 + \"px\",\n          height: 55 + \"px\",\n          width: 100 + \"px\"\n        },\n        onClick: this.listBooksAndRecords.bind(this, this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, this.state.dateFrom.toISOString(), this.state.dateTo.toISOString(), 0, 5),\n        disabled: !this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Link, {\n        to: '/app/scans/missingFiles',\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          marginTop: 50 + \"px\",\n          marginLeft: 100 + \"px\",\n          height: 55 + \"px\",\n          width: 100 + \"px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Missing Scans\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        id: \"standard-uncontrolled\",\n        value: this.state.dateFrom ? this.state.dateFrom : '',\n        onChange: this.handleChangeDateField('dateFrom'),\n        label: \"Date From\",\n        keyboard: true,\n        format: \"dd-MM-yyyy\",\n        mask: function mask(value) {\n          return value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : [];\n        },\n        margin: \"normal\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        id: \"standard-uncontrolled\",\n        value: this.state.dateTo ? this.state.dateTo : '',\n        onChange: this.handleChangeDateField('dateTo'),\n        label: \"Date To\",\n        keyboard: true,\n        style: {\n          marginLeft: 20 + \"px\"\n        },\n        format: \"dd-MM-yyyy\",\n        mask: function mask(value) {\n          return value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : [];\n        },\n        margin: \"normal\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Year\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Type\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Folder path\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Number of records\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, this.state.data && this.state.data.data && this.state.data.data.content && this.state.data.data.content.map(function (item) {\n        return React.createElement(TableRow, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, item.name), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, item.registerYear), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, _this2.handleStatus(item.registerType)), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, item.pathFolder ? item.pathFolder : 'No folder')), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, item.numberOfRecords ? item.numberOfRecords : '0'));\n      }))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: this.state.data.data ? this.state.data.data.totalElements : 0,\n        rowsPerPage: this.state.rowsPerPages,\n        page: this.state.data.data ? this.state.data.data.number : 0,\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.onChangeRowsPerPage,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ScansContainer;\n}(React.Component);\n\nexport { ScansContainer as default };","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/scans/scans.container.js"],"names":["React","TextField","Button","DatePicker","MuiPickersUtilsProvider","TimePicker","DateFnsUtils","getBooksAndRecords","dispatchAction","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Link","ScansContainer","props","handleFormInput","name","event","formdata","state","target","value","setState","onChangeRowsPerPage","rowsPerPages","console","log","listBooksAndRecords","registerType","registerYear","registerName","dateFrom","toISOString","dateTo","handleChangePage","page","data","size","handleChangeDateField","formatDate","dateString","newDateStringArr","split","type","year","then","response","catch","error","undefined","Date","marginLeft","marginTop","borderColor","style","height","width","bind","textDecoration","color","content","map","item","id","handleStatus","pathFolder","numberOfRecords","totalElements","number","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { getBooksAndRecords } from '../module/Folders/folder.repo';\r\nimport { dispatchAction } from 'C:/Users/User/Desktop/starter-app/src/index.js';\r\nimport {Table, TableHead, TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nexport default class ScansContainer extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props)\r\n      this.state ={\r\n        rowsPerPages: 5,\r\n        data: {},\r\n        formdata: {\r\n            registerName: undefined,\r\n            registerYear: undefined,\r\n            registerType: undefined\r\n        },\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n      }\r\n      \r\n    }\r\n    handleFormInput = name => event => {      \r\n      var formdata = this.state.formdata;\r\n      formdata[name] = event.target.value;\r\n        this.setState({\r\n          formdata: formdata\r\n        });\r\n    }\r\n    onChangeRowsPerPage = (event) => {\r\n      this.setState({\r\n          rowsPerPages: event.target.value\r\n      })\r\n      console.log(this.state.rowsPerPages)\r\n      this.listBooksAndRecords(this.state.formdata.registerType,this.state.formdata.registerYear,\r\n        this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n        this.state.dateTo.toISOString(),0,event.target.value);\r\n    }\r\n    handleChangePage = (event, page) => {\r\n             \r\n      if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n        this.listBooksAndRecords(this.state.formdata.registerType,this.state.formdata.registerYear,\r\n          this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n          this.state.dateTo.toISOString(),page,this.state.data.data.size);\r\n      }else{\r\n        this.listBooksAndRecords(page, 5);\r\n      }\r\n  }\r\n    handleChangeDateField = name => event => {\r\n        this.setState({\r\n            [name]: event\r\n        });\r\n    }\r\n    formatDate = (dateString) => {\r\n      var newDateStringArr = dateString.split('T');\r\n      newDateStringArr[1] = newDateStringArr[1].split('.000Z')[0];\r\n      return newDateStringArr[0] + ' ' + newDateStringArr[1];\r\n  }\r\n    handleStatus(props){\r\n      if(props==1)\r\n      return \"Венчани\";\r\n      else if(props==0)\r\n      return \"Родени\";\r\n      else if(props==2)\r\n      return \"Умрени\";\r\n  }\r\n    listBooksAndRecords = (type,year,name,dateFrom,dateTo,page, size) => {\r\n      // console.log(this.state.formdata.registerName);\r\n      // console.log(this.state.formdata.registerType);\r\n      // console.log(this.state.formdata.registerYear);\r\n      dispatchAction({\r\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n      });\r\n      getBooksAndRecords(type,year,name,dateFrom,dateTo,page,size).then(response => {\r\n        this.setState({\r\n          data: response\r\n        },\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n        })\r\n        );\r\n        console.log(response);\r\n      }).catch(error => {\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n        });\r\n        console.log(error);\r\n      });\r\n    }\r\n  \r\n  render(){\r\n      return (\r\n          <form style={{marginLeft: '30px'}}><div><TextField\r\n      id=\"standard-input\"\r\n      label=\"Name Register Book\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      // onChange={handleChange('name')}\r\n      onChange={this.handleFormInput('registerName')}\r\n  \r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n    />\r\n    <TextField\r\n      id=\"standard-input\"\r\n      label=\"Year\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      onChange={this.handleFormInput('registerYear')}\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n    />\r\n    <TextField\r\n      id=\"standard-input\"\r\n      label=\"Type Register Book\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n      onChange={this.handleFormInput('registerType')}\r\n    />\r\n    <Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 50 + \"px\", marginLeft: 20 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    onClick={this.listBooksAndRecords.bind(this,this.state.formdata.registerType,this.state.formdata.registerYear,\r\n      this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n      this.state.dateTo.toISOString(),0,5)}\r\n      disabled={!this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear}\r\n\r\n    >\r\n        Search</Button>\r\n        <Link to={'/app/scans/missingFiles'} style={{textDecoration: 'none', color: 'white'}}>\r\n        <Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 50+\"px\",marginLeft: 100 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    >\r\n        Missing Scans</Button>\r\n        </Link>\r\n        </div><div>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                   <DatePicker\r\n                                       id=\"standard-uncontrolled\"\r\n                                       value={this.state.dateFrom ? this.state.dateFrom : ''}\r\n                                       onChange={this.handleChangeDateField('dateFrom')}\r\n                                       label=\"Date From\"\r\n                                       keyboard\r\n                                       format=\"dd-MM-yyyy\"\r\n                                       mask={value =>\r\n                                           value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : []\r\n                                       }\r\n                                       margin=\"normal\"\r\n                                       required\r\n                                   />\r\n                                   <DatePicker\r\n                                       id=\"standard-uncontrolled\"\r\n                                       value={this.state.dateTo ? this.state.dateTo : ''}\r\n                                       onChange={this.handleChangeDateField('dateTo')}\r\n                                       label=\"Date To\"\r\n                                       keyboard\r\n                                       style={{marginLeft:20+\"px\"}}\r\n                                       format=\"dd-MM-yyyy\"\r\n                                       mask={value =>\r\n                                           value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : []\r\n                                       }\r\n                                       margin=\"normal\"\r\n                                       required\r\n                                   />\r\n                               </MuiPickersUtilsProvider>\r\n          \r\n       </div>\r\n        <div>\r\n        <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                      Year\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Type\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  Folder path\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Number of records\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.registerYear}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {this.handleStatus(item.registerType)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <b>{item.pathFolder ? item.pathFolder : 'No folder'}</b>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.numberOfRecords ? item.numberOfRecords : '0'}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n        </div>\r\n        </form>\r\n      )\r\n  }\r\n  }"]},"metadata":{},"sourceType":"module"}