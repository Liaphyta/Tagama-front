{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/**\r\n * Map list by index\r\n * Accepts up to 3 functions:\r\n *   - Will apply first function to first value\r\n *   - Will apply last function to last value\r\n *   - Will apply the other function to the rest of values\r\n *\r\n * @param  {Array}  list\r\n * @param  {Array}  functions\r\n * @return {Array} mapped array\r\n */\n\n\nvar mapIndexed = function mapIndexed(fns, list) {\n  if (fns === void 0) {\n    fns = [];\n  }\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var length = list.length - 1;\n  return R.addIndex(R.map)(function (value, idx) {\n    if (idx === 0) return R.head(fns)(value, idx);\n    if (idx === length) return R.last(fns)(value, idx);\n    return (fns[1] || fns[0])(value, idx);\n  })(list);\n};\n\nvar _default = R.curryN(2, mapIndexed);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@react-pdf/textkit/utils/mapIndexed.js"],"names":["_interopRequireWildcard","require","exports","__esModule","R","mapIndexed","fns","list","length","addIndex","map","value","idx","head","last","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,CAAC,GAAGJ,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAII,UAAU,GAAG,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAC9C,MAAID,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBA,IAAAA,GAAG,GAAG,EAAN;AACD;;AAED,MAAIC,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,IAAAA,IAAI,GAAG,EAAP;AACD;;AAED,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAL,GAAc,CAA3B;AACA,SAAOJ,CAAC,CAACK,QAAF,CAAWL,CAAC,CAACM,GAAb,EAAkB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC7C,QAAIA,GAAG,KAAK,CAAZ,EAAe,OAAOR,CAAC,CAACS,IAAF,CAAOP,GAAP,EAAYK,KAAZ,EAAmBC,GAAnB,CAAP;AACf,QAAIA,GAAG,KAAKJ,MAAZ,EAAoB,OAAOJ,CAAC,CAACU,IAAF,CAAOR,GAAP,EAAYK,KAAZ,EAAmBC,GAAnB,CAAP;AACpB,WAAO,CAACN,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAd,EAAmBK,KAAnB,EAA0BC,GAA1B,CAAP;AACD,GAJM,EAIJL,IAJI,CAAP;AAKD,CAfD;;AAiBA,IAAIQ,QAAQ,GAAGX,CAAC,CAACY,MAAF,CAAS,CAAT,EAAYX,UAAZ,CAAf;;AAEAH,OAAO,CAAC,SAAD,CAAP,GAAqBa,QAArB","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar R = _interopRequireWildcard(require(\"ramda\"));\r\n\r\n/**\r\n * Map list by index\r\n * Accepts up to 3 functions:\r\n *   - Will apply first function to first value\r\n *   - Will apply last function to last value\r\n *   - Will apply the other function to the rest of values\r\n *\r\n * @param  {Array}  list\r\n * @param  {Array}  functions\r\n * @return {Array} mapped array\r\n */\r\nvar mapIndexed = function mapIndexed(fns, list) {\r\n  if (fns === void 0) {\r\n    fns = [];\r\n  }\r\n\r\n  if (list === void 0) {\r\n    list = [];\r\n  }\r\n\r\n  var length = list.length - 1;\r\n  return R.addIndex(R.map)(function (value, idx) {\r\n    if (idx === 0) return R.head(fns)(value, idx);\r\n    if (idx === length) return R.last(fns)(value, idx);\r\n    return (fns[1] || fns[0])(value, idx);\r\n  })(list);\r\n};\r\n\r\nvar _default = R.curryN(2, mapIndexed);\r\n\r\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}