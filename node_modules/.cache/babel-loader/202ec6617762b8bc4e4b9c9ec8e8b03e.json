{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\tagama\\\\Tagama-front\\\\Tagama-front\\\\src\\\\app\\\\module\\\\app\\\\app.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { handleLogout, refreshToken } from '../../shared/app.properties';\n\nclass AppContainer extends React.Component {\n  //I need this when i have login system\n  // componentWillMount() {\n  //     let refreshTime = new Date();\n  //     refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\n  //     if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\n  //         handleLogout()\n  //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\n  //         handleLogout()\n  //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\n  //         refreshToken()\n  //     }\n  // }\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nvar mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(AppContainer);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/src/app/module/app/app.container.js"],"names":["React","connect","handleLogout","refreshToken","AppContainer","Component","componentDidMount","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,6BAA3C;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAGvC;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,iBAAiB,GAAG,CACnB;;AAGDC,EAAAA,MAAM,GAAG;AAEL,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAQH;;AAjCsC;;AAoC3C,IAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO,EAAP;AACH,CAFD;;AAIA,eAAeR,OAAO,CAACO,eAAD,EAAmB,EAAnB,CAAP,CAA+BJ,YAA/B,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { handleLogout, refreshToken } from '../../shared/app.properties';\r\n\r\nclass AppContainer extends React.Component {\r\n\r\n\r\n    //I need this when i have login system\r\n    \r\n    // componentWillMount() {\r\n\r\n    //     let refreshTime = new Date();\r\n    //     refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n    //     if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n    //         handleLogout()\r\n    //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n    //         handleLogout()\r\n    //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n    //         refreshToken()\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n};\r\n\r\nexport default connect(mapStateToProps, ({}))(AppContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}