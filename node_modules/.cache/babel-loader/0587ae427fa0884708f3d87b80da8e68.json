{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Desktop/Repositories/starter-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = theme => {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, {\n      [theme.breakpoints.up('sm')]: _extends({}, top3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, {\n      [theme.breakpoints.up('sm')]: _extends({}, bottom3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, top3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, bottom3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, top3, left3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, bottom3, left3)\n    })\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1];\n\n  var handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = () => {\n    setExited(true);\n  };\n\n  var handleEnter = () => {\n    setExited(false);\n  };\n\n  React.useEffect(() => {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/core/es/Snackbar/Snackbar.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","withStyles","duration","ClickAwayListener","useEventCallback","capitalize","createChainedFunction","Grow","SnackbarContent","styles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","root","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","Snackbar","forwardRef","props","ref","action","anchorOrigin","vertical","horizontal","autoHideDuration","children","classes","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","other","timerAutoHide","useRef","useState","exited","setExited","handleClose","args","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","handleEnter","window","addEventListener","removeEventListener","undefined","createElement","onClickAway","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","node","shape","oneOf","isRequired","number","element","object","string","bool","key","any","func","elementType","oneOfType","flip","name"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport const styles = theme => {\n  const top1 = {\n    top: 8\n  };\n  const bottom1 = {\n    bottom: 8\n  };\n  const right = {\n    justifyContent: 'flex-end'\n  };\n  const left = {\n    justifyContent: 'flex-start'\n  };\n  const top3 = {\n    top: 24\n  };\n  const bottom3 = {\n    bottom: 24\n  };\n  const right3 = {\n    right: 24\n  };\n  const left3 = {\n    left: 24\n  };\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, {\n      [theme.breakpoints.up('sm')]: _extends({}, top3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, {\n      [theme.breakpoints.up('sm')]: _extends({}, bottom3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, top3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, bottom3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, top3, left3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, bottom3, left3)\n    })\n  };\n};\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    autoHideDuration = null,\n    children,\n    classes,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n  };\n\n  const handleEnter = () => {\n    setExited(false);\n  };\n\n  React.useEffect(() => {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`anchorOrigin${capitalize(vertical)}${capitalize(horizontal)}`], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);"]},"metadata":{},"sourceType":"module"}