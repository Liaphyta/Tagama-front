{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\module\\\\reports\\\\monthlyreport.container.js\";\nimport React from 'react';\nimport { Button, Dialog, DialogTitle, Grid, DialogActions } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport MonthYearPicker from 'react-month-year-picker';\nimport { Page, Text, View, Document, StyleSheet, PDFDownloadLink } from '@react-pdf/renderer';\nimport { getByDateReport } from './reports.repo';\nimport { dispatchAction } from 'C:/Users/User/Desktop/starter-app/src/index.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nvar MonthlyReportContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MonthlyReportContainer, _React$Component);\n\n  function MonthlyReportContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MonthlyReportContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MonthlyReportContainer).call(this, props));\n\n    _this.listMonthlyReport = function (month, year) {\n      dispatchAction({\n        type: \"CIRCULAR_PROGRESS_SHOW\"\n      });\n\n      _this.setState({\n        loading: true\n      });\n\n      getByDateReport(month, year).then(function (response) {\n        _this.setState({\n          data: response,\n          show: true,\n          loading: false\n        }, dispatchAction({\n          type: \"CIRCULAR_PROGRESS_HIDE\"\n        }));\n\n        console.log(response);\n      }).catch(function (error) {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      show: false,\n      data: {},\n      formdata: {},\n      month: new Date().getMonth(),\n      year: new Date().getFullYear(),\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(MonthlyReportContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Dialog, {\n        open: true,\n        maxWidth: \"md\",\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        \"aria-describedby\": \"max-width-dialog-description\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Monthly Report\"), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(MonthYearPicker, {\n        selectedMonth: this.state.month,\n        selectedYear: this.state.year,\n        minYear: 2000,\n        maxYear: 2030,\n        onChangeYear: function onChangeYear(year) {\n          return _this2.setState({\n            year: year\n          });\n        },\n        onChangeMonth: function onChangeMonth(month) {\n          return _this2.setState({\n            month: month\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), this.state.loading && React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          paddingLeft: '410px',\n          paddingTop: '200px',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 150,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.show && React.createElement(Link, {\n        to: '/reports/' + this.state.month + '-' + this.state.year + '-REPORT.xls',\n        target: \"_blank\",\n        download: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Download\")), React.createElement(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        onClick: this.listMonthlyReport.bind(this, this.state.month, this.state.year),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, console.log(this.state.show), \"Generate\"), React.createElement(Link, {\n        to: '/app/reports',\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Exit\"))));\n    }\n  }]);\n\n  return MonthlyReportContainer;\n}(React.Component);\n\nexport { MonthlyReportContainer as default };","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/module/reports/monthlyreport.container.js"],"names":["React","Button","Dialog","DialogTitle","Grid","DialogActions","Link","MonthYearPicker","Page","Text","View","Document","StyleSheet","PDFDownloadLink","getByDateReport","dispatchAction","CircularProgress","MonthlyReportContainer","props","listMonthlyReport","month","year","type","setState","loading","then","response","data","show","console","log","catch","error","state","formdata","Date","getMonth","getFullYear","position","paddingLeft","paddingTop","width","bind","textDecoration","color","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,WAAtB,EAAkCC,IAAlC,EAAuCC,aAAvC,QAA2D,mBAA3D;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAgDC,eAAhD,QAAuE,qBAAvE;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,cAAT,QAA+B,gDAA/B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;IAKqBC,sB;;;;;AAEjB,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gGAAMA,KAAN;;AADe,UAYjBC,iBAZiB,GAYG,UAACC,KAAD,EAAOC,IAAP,EAAgB;AAClCN,MAAAA,cAAc,CAAC;AACbO,QAAAA,IAAI,EAAE;AADO,OAAD,CAAd;;AAGA,YAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAC;AADI,OAAd;;AAGAV,MAAAA,eAAe,CAACM,KAAD,EAAOC,IAAP,CAAf,CAA4BI,IAA5B,CAAiC,UAAAC,QAAQ,EAAI;AAC3C,cAAKH,QAAL,CAAc;AACZI,UAAAA,IAAI,EAAED,QADM;AAEZE,UAAAA,IAAI,EAAC,IAFO;AAGZJ,UAAAA,OAAO,EAAC;AAHI,SAAd,EAKAT,cAAc,CAAC;AACbO,UAAAA,IAAI,EAAE;AADO,SAAD,CALd;;AASAO,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,OAXD,EAWGK,KAXH,CAWS,UAAAC,KAAK,EAAI;AAChBjB,QAAAA,cAAc,CAAC;AACbO,UAAAA,IAAI,EAAE;AADO,SAAD,CAAd;AAGAO,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAhBD;AAiBD,KApCgB;;AAEf,UAAKC,KAAL,GAAY;AACVL,MAAAA,IAAI,EAAC,KADK;AAEVD,MAAAA,IAAI,EAAE,EAFI;AAGVO,MAAAA,QAAQ,EAAE,EAHA;AAIVd,MAAAA,KAAK,EAAE,IAAIe,IAAJ,GAAWC,QAAX,EAJG;AAKVf,MAAAA,IAAI,EAAE,IAAIc,IAAJ,GAAWE,WAAX,EALI;AAMVb,MAAAA,OAAO,EAAC;AANE,KAAZ;AAFe;AAWhB;;;;6BA2BK;AAAA;;AACJ,aACI,oBAAC,MAAD;AACA,QAAA,IAAI,EAAE,IADN;AAEA,QAAA,QAAQ,EAAC,IAFT;AAGA,2BAAgB,wBAHhB;AAIA,4BAAiB,8BAJjB;AAKA,QAAA,SAAS,EAAE,IALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOA,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,gBAA1C,CAPA,EAQE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,eAAD;AACA,QAAA,aAAa,EAAE,KAAKS,KAAL,CAAWb,KAD1B;AAEA,QAAA,YAAY,EAAE,KAAKa,KAAL,CAAWZ,IAFzB;AAGA,QAAA,OAAO,EAAE,IAHT;AAIA,QAAA,OAAO,EAAE,IAJT;AAKA,QAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,iBAAI,MAAI,CAACE,QAAL,CAAc;AAAEF,YAAAA,IAAI,EAAEA;AAAR,WAAd,CAAJ;AAAA,SALlB;AAMA,QAAA,aAAa,EAAE,uBAAAD,KAAK;AAAA,iBAAI,MAAI,CAACG,QAAL,CAAc;AAAEH,YAAAA,KAAK,EAAEA;AAAT,WAAd,CAAJ;AAAA,SANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,EASD,KAAKa,KAAL,CAAWT,OAAX,IAAsB;AAAM,QAAA,KAAK,EAAE;AAACc,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,WAAW,EAAC,OAAnC;AAA2CC,UAAAA,UAAU,EAAC,OAAtD;AAA8DC,UAAAA,KAAK,EAAC;AAApE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2F,oBAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE,GAAxB;AAA6B,QAAA,KAAK,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3F,CATrB,CARF,EAqBA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKR,KAAL,CAAWL,IAAX,IAAmB,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,cAAY,KAAKK,KAAL,CAAWb,KAAvB,GAA6B,GAA7B,GAAiC,KAAKa,KAAL,CAAWZ,IAA5C,GAAiD,aAA3D;AAA0E,QAAA,MAAM,EAAC,QAAjF;AAA0F,QAAA,QAAQ,MAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAClB,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADkB,CAFtB,EAUI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAC,WAAlC;AACA,QAAA,OAAO,EAAE,KAAKF,iBAAL,CAAuBuB,IAAvB,CAA4B,IAA5B,EAAiC,KAAKT,KAAL,CAAWb,KAA5C,EAAkD,KAAKa,KAAL,CAAWZ,IAA7D,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGQ,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWL,IAAvB,CAFH,aAVJ,EAgBA,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,cAAV;AAA0B,QAAA,KAAK,EAAE;AAACe,UAAAA,cAAc,EAAE,MAAjB;AAAyBC,UAAAA,KAAK,EAAE;AAAhC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAhBA,CArBA,CADJ;AA8CH;;;;EAvF+C5C,KAAK,CAAC6C,S;;SAArC5B,sB","sourcesContent":["import React from 'react';\r\nimport {Button,Dialog,DialogTitle,Grid,DialogActions} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport MonthYearPicker from 'react-month-year-picker';\r\nimport { Page, Text, View, Document, StyleSheet,PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { getByDateReport } from './reports.repo';\r\nimport { dispatchAction } from 'C:/Users/User/Desktop/starter-app/src/index.js';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\n\r\nexport default class MonthlyReportContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          show:false,\r\n          data: {},\r\n          formdata: {},\r\n          month: new Date().getMonth(),\r\n          year: new Date().getFullYear(),\r\n          loading:false\r\n        }\r\n        \r\n      }\r\n      listMonthlyReport = (month,year) => {\r\n        dispatchAction({\r\n          type: \"CIRCULAR_PROGRESS_SHOW\"\r\n        });\r\n        this.setState({\r\n          loading:true\r\n        })\r\n        getByDateReport(month,year).then(response => {\r\n          this.setState({\r\n            data: response,\r\n            show:true,\r\n            loading:false\r\n          },\r\n          dispatchAction({\r\n            type: \"CIRCULAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          console.log(response);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }   \r\n\r\n    render(){\r\n        return (\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Monthly Report\"}</DialogTitle>\r\n              <Grid container>\r\n            <MonthYearPicker\r\n            selectedMonth={this.state.month}\r\n            selectedYear={this.state.year}\r\n            minYear={2000}\r\n            maxYear={2030}\r\n            onChangeYear={year => this.setState({ year: year })}\r\n            onChangeMonth={month => this.setState({ month: month })}\r\n            />\r\n            {this.state.loading && <div  style={{position: 'absolute', paddingLeft:'410px',paddingTop:'200px',width:'100%'}}>{<CircularProgress size={150} color=\"secondary\" />}</div>}\r\n\r\n              </Grid>\r\n            \r\n            <DialogActions>\r\n            {/* <a href={'C:\\Users\\User\\Desktop\\reports'+(this.state.month+1)+'-'+this.state.year+'-REPORT.xls'} download>Download</a> */}\r\n              {this.state.show && <Link to={'/reports/'+this.state.month+'-'+this.state.year+'-REPORT.xls'} target=\"_blank\" download>\r\n                <Button color=\"secondary\" variant=\"contained\">Download\r\n                  </Button>\r\n                  </Link>\r\n              \r\n              }\r\n            {/* <Link to={'/app/reports'} style={{textDecoration: 'none', color: 'white'}}> */}\r\n\r\n                <Button color=\"secondary\" variant=\"contained\"\r\n                onClick={this.listMonthlyReport.bind(this,this.state.month,this.state.year)}>\r\n                  {console.log(this.state.show)}\r\n                  Generate\r\n                </Button>\r\n            {/* </Link>     */}\r\n            <Link to={'/app/reports'} style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button color=\"secondary\" variant=\"outlined\">\r\n                  Exit\r\n                </Button>\r\n            </Link>       \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}