{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/user/Desktop/Repositories/starter-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(profileSagas);\n\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\nimport { GET_MAIN_USER_FAIL, GET_MAIN_USER_SUCCESS, GET_MAIN_USER_REQUEST } from './profile.actions';\nimport { fetchMainUserData } from './profile.repo';\nexport function profileSagas() {\n  return _regeneratorRuntime.wrap(function profileSagas$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(GET_MAIN_USER_REQUEST, /*#__PURE__*/_regeneratorRuntime.mark(function _callee(action) {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return put({\n                      type: 'SHOW_LOADING',\n                      payload: res\n                    });\n\n                  case 3:\n                    _context.next = 5;\n                    return call(fetchMainUserData, action.payload);\n\n                  case 5:\n                    res = _context.sent;\n                    _context.next = 8;\n                    return put({\n                      type: GET_MAIN_USER_SUCCESS,\n                      payload: res\n                    });\n\n                  case 8:\n                    _context.next = 15;\n                    break;\n\n                  case 10:\n                    _context.prev = 10;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.error(_context.t0);\n                    _context.next = 15;\n                    return put({\n                      type: GET_MAIN_USER_FAIL,\n                      payload: {\n                        message: _context.t0.message\n                      }\n                    });\n\n                  case 15:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 10]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/module/profile/profile.saga.js"],"names":["profileSagas","call","put","takeEvery","select","GET_MAIN_USER_FAIL","GET_MAIN_USER_SUCCESS","GET_MAIN_USER_REQUEST","fetchMainUserData","action","type","payload","res","console","error","message"],"mappings":";;oDAIiBA,Y;;AAJjB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,MAA/B,QAA6C,oBAA7C;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,qBAApD,QAAiF,mBAAjF;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AAEA,OAAO,SAAUR,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,SAAS,CAACI,qBAAD,wCAAwB,iBAAWE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE/B,2BAAMP,GAAG,CAAC;AAACQ,sBAAAA,IAAI,EAAE,cAAP;AAAuBC,sBAAAA,OAAO,EAAEC;AAAhC,qBAAD,CAAT;;AAF+B;AAAA;AAGnB,2BAAMX,IAAI,CAACO,iBAAD,EAAmBC,MAAM,CAACE,OAA1B,CAAV;;AAHmB;AAGzBC,oBAAAA,GAHyB;AAAA;AAI/B,2BAAMV,GAAG,CAAC;AAACQ,sBAAAA,IAAI,EAAEJ,qBAAP;AAA8BK,sBAAAA,OAAO,EAAEC;AAAvC,qBAAD,CAAT;;AAJ+B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAO/BC,oBAAAA,OAAO,CAACC,KAAR;AAP+B;AAQ/B,2BAAMZ,GAAG,CAAC;AAACQ,sBAAAA,IAAI,EAAEL,kBAAP;AAA2BM,sBAAAA,OAAO,EAAE;AAACI,wBAAAA,OAAO,EAAE,YAAEA;AAAZ;AAApC,qBAAD,CAAT;;AAR+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAxB,EAAf;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { GET_MAIN_USER_FAIL, GET_MAIN_USER_SUCCESS, GET_MAIN_USER_REQUEST } from './profile.actions';\r\nimport { fetchMainUserData } from './profile.repo';\r\n\r\nexport function* profileSagas () {\r\n    \r\n    yield takeEvery(GET_MAIN_USER_REQUEST, function* (action) {\r\n        try {\r\n            yield put({type: 'SHOW_LOADING', payload: res});\r\n            const res = yield call(fetchMainUserData,action.payload);\r\n            yield put({type: GET_MAIN_USER_SUCCESS, payload: res});\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            yield put({type: GET_MAIN_USER_FAIL, payload: {message: e.message}});\r\n        }\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}