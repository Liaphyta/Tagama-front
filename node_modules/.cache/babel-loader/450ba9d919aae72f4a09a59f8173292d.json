{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: theme.spacing(1, 2, 2)\n  }\n});\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the accordion details.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/AccordionDetails/AccordionDetails.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","styles","theme","root","display","padding","spacing","AccordionDetails","forwardRef","props","ref","classes","className","other","createElement","process","env","NODE_ENV","propTypes","children","node","object","string","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAMC,MAAM,GAAGC,KAAK,KAAK;AAC9B;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AAFL;AAFwB,CAAL,CAApB;AAOP,IAAMC,gBAAgB,GAAG,aAAaV,KAAK,CAACW,UAAN,CAAiB,SAASD,gBAAT,CAA0BE,KAA1B,EAAiCC,GAAjC,EAAsC;AAAA,MAEzFC,OAFyF,GAIvFF,KAJuF,CAEzFE,OAFyF;AAAA,MAGzFC,SAHyF,GAIvFH,KAJuF,CAGzFG,SAHyF;AAAA,MAKrFC,KALqF,GAK7EjB,6BAA6B,CAACa,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,CAAR,CALgD;;AAO3F,SAAO,aAAaZ,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2BnB,QAAQ,CAAC;AACtDiB,IAAAA,SAAS,EAAEb,IAAI,CAACY,OAAO,CAACR,IAAT,EAAeS,SAAf,CADuC;AAEtDF,IAAAA,GAAG,EAAEA;AAFiD,GAAD,EAGpDG,KAHoD,CAAnC,CAApB;AAID,CAXqC,CAAtC;AAYAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,gBAAgB,CAACW,SAAjB,GAA6B;AACnE;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,IAT+C;;AAWnE;AACF;AACA;AACA;AACET,EAAAA,OAAO,EAAEb,SAAS,CAACuB,MAfgD;;AAiBnE;AACF;AACA;AACET,EAAAA,SAAS,EAAEd,SAAS,CAACwB;AApB8C,CAArE,GAqBI,KAAK,CArBT;AAsBA,eAAetB,UAAU,CAACC,MAAD,EAAS;AAChCsB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZhB,gBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'flex',\r\n    padding: theme.spacing(1, 2, 2)\r\n  }\r\n});\r\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\r\n  const {\r\n    classes,\r\n    className\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    className: clsx(classes.root, className),\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the accordion details.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiAccordionDetails'\r\n})(AccordionDetails);"]},"metadata":{},"sourceType":"module"}