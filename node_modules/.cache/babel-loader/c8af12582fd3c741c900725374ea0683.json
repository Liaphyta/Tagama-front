{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\tagama\\\\Tagama-front\\\\Tagama-front\\\\src\\\\app\\\\module\\\\settings\\\\system_settings.container.js\";\nimport React from 'react';\nimport { fetchAllSystemSettingsProps, updateSystemSettingsProp } from './settings.repo';\nimport { FormControlLabel, Grid, Paper, Switch, Table, TableCell, TableRow, TextField } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { authorize, handleLogout, hasRole, refreshToken } from '../../shared/app.properties';\nimport Redirect from 'react-router/Redirect';\n\nclass SystemSettingsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unauthorized = false;\n    this.state = {\n      settingsMap: undefined\n    };\n\n    this.fetchAllSettingsProps = () => {\n      fetchAllSystemSettingsProps({}).then(res => {\n        this.setState({\n          asd: 'asd'\n        });\n        var tmpmap = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          tmpmap[res.data[i].key] = res.data[i].value;\n        }\n\n        this.setState({\n          settingsMap: tmpmap\n        });\n      }).catch(err => {});\n    };\n\n    this.handleExportEncryptionChange = (event, MAIN_SEARCH_ZIP_ENCRYPT_ENABLED) => {\n      var encBool = 'false';\n\n      if (MAIN_SEARCH_ZIP_ENCRYPT_ENABLED) {\n        encBool = 'true';\n      }\n\n      var tmpmap = this.state.settingsMap;\n      updateSystemSettingsProp({\n        key: 'MAIN_SEARCH_ZIP_ENCRYPT_ENABLED',\n        val: encBool\n      }).then(res => {\n        tmpmap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED = res.data.value;\n        this.setState({\n          settingsMap: tmpmap\n        });\n      }).catch(err => {});\n    };\n\n    this.handleSmsNotificationsEnabledChange = (event, SMS_NOTIFICATIONS_ENABLED) => {\n      var encBool = 'false';\n\n      if (SMS_NOTIFICATIONS_ENABLED) {\n        encBool = 'true';\n      }\n\n      var tmpmap = this.state.settingsMap;\n      updateSystemSettingsProp({\n        key: 'SMS_NOTIFICATIONS_ENABLED',\n        val: encBool\n      }).then(res => {\n        tmpmap.SMS_NOTIFICATIONS_ENABLED = res.data.value;\n        this.setState({\n          settingsMap: tmpmap\n        });\n      }).catch(err => {});\n    };\n\n    this.handleEmailNotificationsEnabledChange = (event, EMAIL_NOTIFICATIONS_ENABLED) => {\n      var encBool = 'false';\n\n      if (EMAIL_NOTIFICATIONS_ENABLED) {\n        encBool = 'true';\n      }\n\n      var tmpmap = this.state.settingsMap;\n      updateSystemSettingsProp({\n        key: 'EMAIL_NOTIFICATIONS_ENABLED',\n        val: encBool\n      }).then(res => {\n        tmpmap.EMAIL_NOTIFICATIONS_ENABLED = res.data.value;\n        this.setState({\n          settingsMap: tmpmap\n        });\n      }).catch(err => {});\n    };\n\n    this.handleFormChange = name => event => {\n      var tmpmap = this.state.settingsMap;\n      updateSystemSettingsProp({\n        key: name,\n        val: event.target.value\n      }).then(res => {\n        tmpmap[name] = res.data.value;\n        this.setState({\n          settingsMap: tmpmap\n        });\n      }).catch(err => {});\n    };\n  }\n\n  componentWillMount() {\n    this.unauthorized = !hasRole('ROLE_ADMINISTRATION');\n    var refreshTime = new Date();\n    refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\n\n    if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\n      handleLogout();\n    } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\n      handleLogout();\n    } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\n      refreshToken();\n    }\n  }\n\n  componentDidMount() {\n    this.fetchAllSettingsProps();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/app/error/unauthorized\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginLeft: 30 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"SYSTEM SETTINGS\"), /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        marginLeft: 30 + \"px\",\n        marginRight: 30 + 'px',\n        padding: 10 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, this.state.settingsMap && /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    }, \"Main search export encrypt enabled\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.settingsMap && this.state.settingsMap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED && this.state.settingsMap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED == \"true\",\n        onChange: this.handleExportEncryptionChange,\n        value: \"MAIN_SEARCH_ZIP_ENCRYPT_ENABLED\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 41\n      }\n    }, \"SMS notifications enabled\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.settingsMap && this.state.settingsMap.SMS_NOTIFICATIONS_ENABLED && this.state.settingsMap.SMS_NOTIFICATIONS_ENABLED == \"true\",\n        onChange: this.handleSmsNotificationsEnabledChange,\n        value: \"SMS_NOTIFICATIONS_ENABLED\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 41\n      }\n    }, \"Email notifications enabled\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.settingsMap && this.state.settingsMap.EMAIL_NOTIFICATIONS_ENABLED && this.state.settingsMap.EMAIL_NOTIFICATIONS_ENABLED == \"true\",\n        onChange: this.handleEmailNotificationsEnabledChange,\n        value: \"EMAIL_NOTIFICATIONS_ENABLED\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 45\n      }\n    })))))), /*#__PURE__*/React.createElement(Grid, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginLeft: 30 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, \"SMPP PARAMETERS\"), /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        marginLeft: 30 + \"px\",\n        marginRight: 30 + 'px',\n        padding: 10 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, this.state.settingsMap && /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, \"SMPP Host\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smppHost\",\n      onChange: this.handleFormChange('SMPP_HOST'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMPP_HOST ? this.state.settingsMap.SMPP_HOST : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }, \"SMPP Port\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smppPort\",\n      onChange: this.handleFormChange('SMPP_PORT'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMPP_PORT ? this.state.settingsMap.SMPP_PORT : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    }, \"SMPP Username\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smppUsername\",\n      onChange: this.handleFormChange('SMPP_USERNAME'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMPP_USERNAME ? this.state.settingsMap.SMPP_USERNAME : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 37\n      }\n    }, \"SMPP Password\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smppPassword\",\n      onChange: this.handleFormChange('SMPP_PASSWORD'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMPP_PASSWORD ? this.state.settingsMap.SMPP_PASSWORD : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 37\n      }\n    }, \"MSISDN\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smppMsisdn\",\n      onChange: this.handleFormChange('SMPP_MSISDN'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMPP_MSISDN ? this.state.settingsMap.SMPP_MSISDN : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    })))))), /*#__PURE__*/React.createElement(Grid, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginLeft: 30 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, \"SMTP PARAMETERS\"), /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        marginLeft: 30 + \"px\",\n        marginRight: 30 + 'px',\n        padding: 10 + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, this.state.settingsMap && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 41\n      }\n    }, \"SMTP Host\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smtpHost\",\n      onChange: this.handleFormChange('SMTP_HOST'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMTP_HOST ? this.state.settingsMap.SMTP_HOST : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 41\n      }\n    }, \"SMTP Port\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smtpPort\",\n      onChange: this.handleFormChange('SMTP_PORT'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMTP_PORT ? this.state.settingsMap.SMTP_PORT : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 41\n      }\n    }, \"SMTP Username\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smtpUsername\",\n      onChange: this.handleFormChange('SMTP_USERNAME'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMTP_USERNAME ? this.state.settingsMap.SMTP_USERNAME : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 41\n      }\n    }, \"SMTP Password\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smtpPassword\",\n      onChange: this.handleFormChange('SMTP_PASSWORD'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMTP_PASSWORD ? this.state.settingsMap.SMTP_PASSWORD : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 41\n      }\n    }, \"SMTP Sender address\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"smtpSender\",\n      onChange: this.handleFormChange('SMTP_SENDER_ADDRESS'),\n      fullWidth: true,\n      value: this.state.settingsMap.SMTP_SENDER_ADDRESS ? this.state.settingsMap.SMTP_SENDER_ADDRESS : '',\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 45\n      }\n    })))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 30\n      }\n    }))));\n  }\n\n}\n\nvar mapStateToProps = state => {\n  return {\n    allusersdata: undefined\n  };\n};\n\nexport default connect(mapStateToProps, {})(SystemSettingsContainer);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/src/app/module/settings/system_settings.container.js"],"names":["React","fetchAllSystemSettingsProps","updateSystemSettingsProp","FormControlLabel","Grid","Paper","Switch","Table","TableCell","TableRow","TextField","connect","authorize","handleLogout","hasRole","refreshToken","Redirect","SystemSettingsContainer","Component","unauthorized","state","settingsMap","undefined","fetchAllSettingsProps","then","res","setState","asd","tmpmap","i","data","length","key","value","catch","err","handleExportEncryptionChange","event","MAIN_SEARCH_ZIP_ENCRYPT_ENABLED","encBool","val","handleSmsNotificationsEnabledChange","SMS_NOTIFICATIONS_ENABLED","handleEmailNotificationsEnabledChange","EMAIL_NOTIFICATIONS_ENABLED","handleFormChange","name","target","componentWillMount","refreshTime","Date","setSeconds","getSeconds","localStorage","getItem","JSON","parse","expires_at","componentDidMount","render","marginLeft","marginRight","padding","SMPP_HOST","SMPP_PORT","SMPP_USERNAME","SMPP_PASSWORD","SMPP_MSISDN","SMTP_HOST","SMTP_PORT","SMTP_USERNAME","SMTP_PASSWORD","SMTP_SENDER_ADDRESS","mapStateToProps","allusersdata"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {fetchAllSystemSettingsProps, updateSystemSettingsProp} from './settings.repo';\r\nimport {FormControlLabel, Grid, Paper, Switch, Table, TableCell, TableRow, TextField} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport {authorize, handleLogout, hasRole, refreshToken} from '../../shared/app.properties';\r\nimport Redirect from 'react-router/Redirect';\r\n\r\nclass SystemSettingsContainer extends React.Component {\r\n\r\n    unauthorized = false;\r\n\r\n    state = {\r\n        settingsMap: undefined\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.unauthorized = !hasRole('ROLE_ADMINISTRATION');\r\n\r\n        let refreshTime = new Date();\r\n        refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n        if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n            handleLogout()\r\n        } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n            refreshToken()\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchAllSettingsProps();\r\n    }\r\n\r\n    fetchAllSettingsProps = () => {\r\n        fetchAllSystemSettingsProps({}).then(res => {\r\n\r\n            this.setState({\r\n                asd: 'asd'\r\n            });\r\n\r\n            var tmpmap = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                tmpmap[res.data[i].key] = res.data[i].value;\r\n            }\r\n            this.setState({\r\n                settingsMap: tmpmap\r\n            });\r\n\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    handleExportEncryptionChange = (event, MAIN_SEARCH_ZIP_ENCRYPT_ENABLED) => {\r\n        var encBool = 'false';\r\n        if (MAIN_SEARCH_ZIP_ENCRYPT_ENABLED) {\r\n            encBool = 'true';   \r\n        }\r\n        var tmpmap = this.state.settingsMap;\r\n        updateSystemSettingsProp({ key: 'MAIN_SEARCH_ZIP_ENCRYPT_ENABLED', val: encBool })\r\n            .then(res => {\r\n                tmpmap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED = res.data.value;\r\n                this.setState({\r\n                    settingsMap: tmpmap\r\n                })\r\n            }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    handleSmsNotificationsEnabledChange = (event, SMS_NOTIFICATIONS_ENABLED) => {\r\n        var encBool = 'false';\r\n        if (SMS_NOTIFICATIONS_ENABLED) {\r\n            encBool = 'true';\r\n        }\r\n        var tmpmap = this.state.settingsMap;\r\n        updateSystemSettingsProp({key: 'SMS_NOTIFICATIONS_ENABLED', val: encBool})\r\n            .then(res => {\r\n                tmpmap.SMS_NOTIFICATIONS_ENABLED = res.data.value;\r\n                this.setState({\r\n                    settingsMap: tmpmap\r\n                })\r\n            }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    handleEmailNotificationsEnabledChange = (event, EMAIL_NOTIFICATIONS_ENABLED) => {\r\n        var encBool = 'false';\r\n        if (EMAIL_NOTIFICATIONS_ENABLED) {\r\n            encBool = 'true';\r\n        }\r\n        var tmpmap = this.state.settingsMap;\r\n        updateSystemSettingsProp({key: 'EMAIL_NOTIFICATIONS_ENABLED', val: encBool})\r\n            .then(res => {\r\n                tmpmap.EMAIL_NOTIFICATIONS_ENABLED = res.data.value;\r\n                this.setState({\r\n                    settingsMap: tmpmap\r\n                })\r\n            }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    handleFormChange = name => event => {\r\n        let tmpmap = this.state.settingsMap;\r\n        updateSystemSettingsProp({key: name, val: event.target.value})\r\n            .then(res => {\r\n                tmpmap[name] = res.data.value;\r\n                this.setState({\r\n                    settingsMap: tmpmap\r\n                })\r\n            }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"my-profile\">\r\n\r\n                {localStorage.getItem('idm') && localStorage.getItem('me') && this.unauthorized &&\r\n                <Redirect to=\"/app/error/unauthorized\"/>\r\n                }\r\n\r\n                <Grid>\r\n                    <Grid xs={6}>\r\n                        <h3 style={{ marginLeft: 30 + 'px' }}>SYSTEM SETTINGS</h3>\r\n\r\n                        <Paper style={{ marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px' }}>\r\n\r\n                            {this.state.settingsMap &&\r\n                                <Table>\r\n                                    <TableRow>\r\n                                        <TableCell>Main search export encrypt enabled</TableCell>\r\n                                        <TableCell>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={this.state.settingsMap &&\r\n                                                            this.state.settingsMap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED &&\r\n                                                            this.state.settingsMap.MAIN_SEARCH_ZIP_ENCRYPT_ENABLED == \"true\"}\r\n                                                        onChange={this.handleExportEncryptionChange}\r\n                                                        value=\"MAIN_SEARCH_ZIP_ENCRYPT_ENABLED\"\r\n                                                        color=\"primary\"\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMS notifications enabled</TableCell>\r\n                                        <TableCell>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={this.state.settingsMap &&\r\n                                                        this.state.settingsMap.SMS_NOTIFICATIONS_ENABLED &&\r\n                                                        this.state.settingsMap.SMS_NOTIFICATIONS_ENABLED == \"true\"}\r\n                                                        onChange={this.handleSmsNotificationsEnabledChange}\r\n                                                        value=\"SMS_NOTIFICATIONS_ENABLED\"\r\n                                                        color=\"primary\"\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>Email notifications enabled</TableCell>\r\n                                        <TableCell>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={this.state.settingsMap &&\r\n                                                        this.state.settingsMap.EMAIL_NOTIFICATIONS_ENABLED &&\r\n                                                        this.state.settingsMap.EMAIL_NOTIFICATIONS_ENABLED == \"true\"}\r\n                                                        onChange={this.handleEmailNotificationsEnabledChange}\r\n                                                        value=\"EMAIL_NOTIFICATIONS_ENABLED\"\r\n                                                        color=\"primary\"\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Table>\r\n                            }\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid xs={6}>\r\n                        <h3 style={{marginLeft: 30 + 'px'}}>SMPP PARAMETERS</h3>\r\n                        <Paper style={{marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px'}}>\r\n                            {this.state.settingsMap &&\r\n                            <Table>\r\n                                <TableRow>\r\n                                    <TableCell>SMPP Host</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppHost\"\r\n                                            onChange={this.handleFormChange('SMPP_HOST')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_HOST ? this.state.settingsMap.SMPP_HOST : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>SMPP Port</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppPort\"\r\n                                            onChange={this.handleFormChange('SMPP_PORT')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_PORT ? this.state.settingsMap.SMPP_PORT : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>SMPP Username</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppUsername\"\r\n                                            onChange={this.handleFormChange('SMPP_USERNAME')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_USERNAME ? this.state.settingsMap.SMPP_USERNAME : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>SMPP Password</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppPassword\"\r\n                                            onChange={this.handleFormChange('SMPP_PASSWORD')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_PASSWORD ? this.state.settingsMap.SMPP_PASSWORD : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>MSISDN</TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            id=\"smppMsisdn\"\r\n                                            onChange={this.handleFormChange('SMPP_MSISDN')}\r\n                                            fullWidth={true}\r\n                                            value={this.state.settingsMap.SMPP_MSISDN ? this.state.settingsMap.SMPP_MSISDN : ''}\r\n                                            margin=\"normal\"\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </Table>\r\n                            }\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid xs={6}>\r\n                        <h3 style={{marginLeft: 30 + 'px'}}>SMTP PARAMETERS</h3>\r\n                        <Paper style={{marginLeft: 30 + \"px\", marginRight: 30 + 'px', padding: 10 + 'px'}}>\r\n                            {this.state.settingsMap &&\r\n                            <div>\r\n                                <Table>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Host</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpHost\"\r\n                                                onChange={this.handleFormChange('SMTP_HOST')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_HOST ? this.state.settingsMap.SMTP_HOST : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Port</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpPort\"\r\n                                                onChange={this.handleFormChange('SMTP_PORT')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_PORT ? this.state.settingsMap.SMTP_PORT : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Username</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpUsername\"\r\n                                                onChange={this.handleFormChange('SMTP_USERNAME')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_USERNAME ? this.state.settingsMap.SMTP_USERNAME : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Password</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpPassword\"\r\n                                                onChange={this.handleFormChange('SMTP_PASSWORD')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_PASSWORD ? this.state.settingsMap.SMTP_PASSWORD : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>SMTP Sender address</TableCell>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                id=\"smtpSender\"\r\n                                                onChange={this.handleFormChange('SMTP_SENDER_ADDRESS')}\r\n                                                fullWidth={true}\r\n                                                value={this.state.settingsMap.SMTP_SENDER_ADDRESS ? this.state.settingsMap.SMTP_SENDER_ADDRESS : ''}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Table>\r\n                            </div>\r\n                            }\r\n                        </Paper>\r\n                        <br/><br/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allusersdata: undefined\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n\r\n}))(SystemSettingsContainer);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}