{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\module\\\\Folders\\\\folders.container.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { getBooksAndFolders, deletePathFolder } from './folder.repo';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { fileURLToPath } from 'url';\nimport { dispatchAction } from '../../..';\nvar CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red'\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green'\n      }\n    }\n  }\n})(TextField);\n\nfunction buildFileSelector() {\n  var fileSelector = document.createElement('input');\n  fileSelector.setAttribute('type', 'file');\n  fileSelector.setAttribute('multiple', 'multiple');\n  return fileSelector;\n}\n\nvar FoldersContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FoldersContainer, _React$Component);\n\n  function FoldersContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FoldersContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FoldersContainer).call(this, props));\n\n    _this.onClick = function (type, year, name, page, size) {\n      _this.listBooksAndFolders(type, year, name, page, size);\n    };\n\n    _this.handleFileSelect = function (e) {\n      e.preventDefault();\n\n      _this.fileSelector.click();\n    };\n\n    _this.handleFormInput = function (name) {\n      return function (event) {\n        var formdata = _this.state.formdata;\n        formdata[name] = event.target.value;\n\n        _this.setState({\n          formdata: formdata\n        });\n      };\n    };\n\n    _this.handleChangePage = function (event, page) {\n      if (_this.state.data && _this.state.data.data && _this.state.data.data.size) {\n        _this.listBooksAndFolders(_this.state.formdata.registerType, _this.state.formdata.registerYear, _this.state.formdata.registerName, page, _this.state.data.data.size);\n      } else {\n        _this.listBooksAndFolders(page, 5);\n      }\n    };\n\n    _this.onChangeRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPages: event.target.value\n      });\n\n      _this.listBooksAndFolders(_this.state.formdata.registerType, _this.state.formdata.registerYear, _this.state.formdata.registerName, 0, event.target.value);\n    };\n\n    _this.listBooksAndFolders = function (type, year, name, page, size) {\n      // console.log(this.state.formdata.registerName);\n      // console.log(this.state.formdata.registerType);\n      // console.log(this.state.formdata.registerYear);\n      dispatchAction({\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\n      });\n      getBooksAndFolders(type, year, name, page, size).then(function (response) {\n        _this.setState({\n          data: response\n        }, dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        }));\n\n        console.log(response);\n      }).catch(function (error) {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    _this.deletePathFolders = function (id) {\n      // console.log(this.state.formdata.registerName);\n      // console.log(this.state.formdata.registerType);\n      // console.log(this.state.formdata.registerYear);\n      dispatchAction({\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\n      });\n      deletePathFolder(id).then(function (response) {\n        _this.setState({\n          data: response\n        }, dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        }));\n\n        _this.listBooksAndFolders(_this.state.formdata.registerType, _this.state.formdata.registerYear, _this.state.formdata.registerName, 0, 5);\n      }).catch(function (error) {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      rowsPerPages: 5,\n      data: {},\n      formdata: {\n        registerName: undefined,\n        registerYear: undefined,\n        registerType: undefined\n      }\n    };\n    return _this;\n  }\n\n  _createClass(FoldersContainer, [{\n    key: \"componentDidMount\",\n    // onClick1 = (id) => {\n    //   this.deletePathFolders(id);\n    // }\n    value: function componentDidMount() {\n      this.fileSelector = buildFileSelector();\n    }\n  }, {\n    key: \"handleStatus\",\n    value: function handleStatus(props) {\n      if (props == 1) return \"Венчани\";else if (props == 0) return \"Родени\";else if (props == 2) return \"Умрени\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement,\n          _React$createElement2,\n          _React$createElement3,\n          _this2 = this;\n\n      return React.createElement(\"form\", {\n        style: {\n          marginLeft: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(TextField, (_React$createElement = {\n        id: \"standard-input\",\n        label: \"Name Register Book\",\n        variant: \"outlined\",\n        style: {\n          marginTop: 50 + \"px\",\n          borderColor: 'red'\n        },\n        inputProps: {\n          style: {\n            borderColor: 'red'\n          }\n        } // value={values.name}\n        ,\n        required: true // onChange={handleChange('name')}\n        ,\n        onChange: this.handleFormInput('registerName'),\n        margin: \"normal\"\n      }, _defineProperty(_React$createElement, \"variant\", \"outlined\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(TextField, (_React$createElement2 = {\n        id: \"standard-input\",\n        label: \"Year\",\n        variant: \"outlined\",\n        style: {\n          marginTop: 50 + \"px\",\n          marginLeft: 20 + \"px\",\n          borderColor: 'red'\n        },\n        inputProps: {\n          style: {\n            borderColor: 'red'\n          }\n        } // value={values.name}\n        ,\n        required: true,\n        onChange: this.handleFormInput('registerYear'),\n        margin: \"normal\"\n      }, _defineProperty(_React$createElement2, \"variant\", \"outlined\"), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2)), React.createElement(TextField, (_React$createElement3 = {\n        id: \"standard-input\",\n        label: \"Type Register Book\",\n        variant: \"outlined\",\n        style: {\n          marginTop: 50 + \"px\",\n          marginLeft: 20 + \"px\",\n          borderColor: 'red'\n        },\n        inputProps: {\n          style: {\n            borderColor: 'red'\n          }\n        } // value={values.name}\n        ,\n        required: true,\n        margin: \"normal\"\n      }, _defineProperty(_React$createElement3, \"variant\", \"outlined\"), _defineProperty(_React$createElement3, \"onChange\", this.handleFormInput('registerType')), _defineProperty(_React$createElement3, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      }), _defineProperty(_React$createElement3, \"__self\", this), _React$createElement3)), React.createElement(Button, {\n        onClick: this.listBooksAndFolders.bind(this, this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, 0, 5),\n        variant: \"contained\",\n        color: \"secondary\",\n        disabled: !this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear,\n        style: {\n          marginTop: 50 + \"px\",\n          marginLeft: 20 + \"px\",\n          height: 55 + \"px\",\n          width: 100 + \"px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Year\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Type\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Folder path\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, this.state.data && this.state.data.data && this.state.data.data.content && this.state.data.data.content.map(function (item) {\n        return React.createElement(TableRow, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, item.name), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, item.registerYear), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, _this2.handleStatus(item.registerType)), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, item.pathFolder ? item.pathFolder : 'No folder')), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: _this2.deletePathFolders.bind(_this2, item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, \"Delete Folder\")), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: '/app/folders/path/' + item.id + '?name=' + item.name + '&type=' + item.registerType + '&year=' + item.registerYear,\n          style: {\n            textDecoration: 'none',\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: \"\",\n          variant: \"contained\",\n          color: \"secondary\",\n          type: \"file\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"Add Folder\"))));\n      }))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: this.state.data.data ? this.state.data.data.totalElements : 0,\n        rowsPerPage: this.state.rowsPerPages,\n        page: this.state.data.data ? this.state.data.data.number : 0,\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.onChangeRowsPerPage,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FoldersContainer;\n}(React.Component);\n\nexport { FoldersContainer as default };","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/module/Folders/folders.container.js"],"names":["React","TextField","withStyles","makeStyles","Button","getBooksAndFolders","deletePathFolder","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Link","fileURLToPath","dispatchAction","CssTextField","root","color","borderBottomColor","borderColor","buildFileSelector","fileSelector","document","createElement","setAttribute","FoldersContainer","props","onClick","type","year","name","page","size","listBooksAndFolders","handleFileSelect","e","preventDefault","click","handleFormInput","event","formdata","state","target","value","setState","handleChangePage","data","registerType","registerYear","registerName","onChangeRowsPerPage","rowsPerPages","then","response","console","log","catch","error","deletePathFolders","id","undefined","marginLeft","marginTop","style","bind","height","width","content","map","item","handleStatus","pathFolder","textDecoration","totalElements","number","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {withStyles,makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getBooksAndFolders, deletePathFolder } from './folder.repo';\r\nimport {Table, TableHead, TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { fileURLToPath } from 'url';\r\nimport { dispatchAction } from '../../..';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n      '& label.Mui-focused': {\r\n        color: 'green',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'green',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: 'red',\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: 'yellow',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: 'green',\r\n        },\r\n      },\r\n    },\r\n  })(TextField);\r\n  \r\n  function buildFileSelector(){\r\n    const fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.setAttribute('multiple', 'multiple');\r\n    return fileSelector;\r\n  }\r\n  \r\n export default class FoldersContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          rowsPerPages: 5,\r\n          data: {},\r\n          formdata: {\r\n              registerName: undefined, \r\n              registerYear: undefined,\r\n              registerType: undefined \r\n          }\r\n        }\r\n      }\r\n        onClick = (type,year,name,page,size) => {\r\n        this.listBooksAndFolders(type,year,name,page,size)\r\n    }\r\n        // onClick1 = (id) => {\r\n        //   this.deletePathFolders(id);\r\n        // }\r\n    componentDidMount(){\r\n      this.fileSelector = buildFileSelector();\r\n    }\r\n    handleFileSelect = (e) => {\r\n      e.preventDefault();\r\n      this.fileSelector.click();\r\n    }\r\n        handleStatus(props){\r\n            if(props==1)\r\n            return \"Венчани\";\r\n            else if(props==0)\r\n            return \"Родени\";\r\n            else if(props==2)\r\n            return \"Умрени\";\r\n        }\r\n        handleFormInput = name => event => {      \r\n            var formdata = this.state.formdata;\r\n            formdata[name] = event.target.value;\r\n              this.setState({\r\n                formdata: formdata\r\n              });\r\n          }\r\n          handleChangePage = (event, page) => {\r\n             \r\n            if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n              this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,page,this.state.data.data.size);\r\n            }else{\r\n              this.listBooksAndFolders(page, 5);\r\n            }\r\n        }\r\n        onChangeRowsPerPage = (event) => {\r\n            this.setState({\r\n                rowsPerPages: event.target.value\r\n            })\r\n            this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0, event.target.value);\r\n        }\r\n         \r\n      \r\n      listBooksAndFolders = (type,year,name,page, size) => {\r\n        // console.log(this.state.formdata.registerName);\r\n        // console.log(this.state.formdata.registerType);\r\n        // console.log(this.state.formdata.registerYear);\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n        });\r\n        getBooksAndFolders(type,year,name,page,size).then(response => {\r\n          this.setState({\r\n            data: response\r\n          },\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          console.log(response);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }\r\n      deletePathFolders = (id) => {\r\n        // console.log(this.state.formdata.registerName);\r\n        // console.log(this.state.formdata.registerType);\r\n        // console.log(this.state.formdata.registerYear);\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n        });\r\n        deletePathFolder(id).then(response => {\r\n          this.setState({\r\n            data: response\r\n          },\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          this.listBooksAndFolders(this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0,5);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }\r\n   \r\n        render(){\r\n        \r\n            return (\r\n        <form style={{marginLeft: '30px'}}><TextField\r\n        id=\"standard-input\"\r\n        label=\"Name Register Book\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        // onChange={handleChange('name')}\r\n        onChange={this.handleFormInput('registerName')}\r\n\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"standard-input\"\r\n        label=\"Year\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        onChange={this.handleFormInput('registerYear')}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"standard-input\"\r\n        label=\"Type Register Book\"\r\n        variant=\"outlined\"\r\n        style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n        inputProps={{ style: { borderColor: 'red'}}}\r\n        // value={values.name}\r\n        required\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        onChange={this.handleFormInput('registerType')}\r\n      />\r\n      <Button\r\n      onClick={this.listBooksAndFolders.bind(this,this.state.formdata.registerType,this.state.formdata.registerYear,this.state.formdata.registerName,0,5)}\r\n      variant=\"contained\" \r\n      color=\"secondary\"\r\n      disabled={!this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear}\r\n      style={{marginTop: 50 + \"px\", marginLeft: 20 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n      >\r\n          Search</Button>\r\n          <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                      Year\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Type\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  Folder path\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.registerYear}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {this.handleStatus(item.registerType)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <b>{item.pathFolder? item.pathFolder : 'No folder'}</b>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                          <Button\r\n                            variant=\"contained\" \r\n                            color=\"secondary\"\r\n                            onClick={this.deletePathFolders.bind(this,item.id)}\r\n                            >Delete Folder\r\n                            </Button>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                          <Link to={'/app/folders/path/'+item.id+'?name='+item.name+'&type='+item.registerType+'&year='+item.registerYear} style={{textDecoration: 'none', color: 'white'}}>\r\n                              <Button\r\n                              onClick=\"\"\r\n                              variant=\"contained\" \r\n                              color=\"secondary\"\r\n                              type=\"file\"\r\n                              >Add Folder\r\n                              </Button>\r\n                          </Link>\r\n                         </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n\r\n      </form>\r\n            )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}