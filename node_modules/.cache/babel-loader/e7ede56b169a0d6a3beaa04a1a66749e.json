{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\module\\\\users\\\\update.users\\\\resetPassword.users.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { clearUser, fetchUser, resetRedirect, resetPasswordUser } from '../users.actions';\nimport { User } from '../../../model/user.model';\nimport { Link, Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nexport var ResetPasswordUserContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResetPasswordUserContainer, _React$Component);\n\n  function ResetPasswordUserContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResetPasswordUserContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResetPasswordUserContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      singleuser: new User({}),\n      newPassword: '',\n      confirmPassword: '',\n      error: false,\n      redirectBack: false\n    };\n\n    _this.redirectBack = function () {\n      _this.props.resetRedirect();\n\n      return React.createElement(Redirect, {\n        to: \"/app/users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    };\n\n    _this.handleUserFormChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.newPassword === _this.state.confirmPassword) {\n        var u = _this.state.singleuser;\n        console.log(u);\n        u['password'] = _this.state.newPassword;\n\n        _this.props.resetPasswordUser(u);\n      } else {\n        _this.setState({\n          error: true\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ResetPasswordUserContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser(this.props.match.params.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.clearUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.singleuser != -1 && this.props.singleuser !== undefined && (this.state.singleuser === undefined || this.state.singleuser.id === undefined)) {\n        var user = this.props.singleuser;\n        this.setState({\n          singleuser: user\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: true,\n        fullWidth: false,\n        maxWidth: \"md\",\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"simple-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Reset password for \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.props.singleuser ? this.props.singleuser.username : '')), this.props.loading == true ? React.createElement(LinearProgress, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        style: {\n          height: 5 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), this.state.singleuser !== undefined ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        autoComplete: \"off\",\n        maxWidth: \"md\",\n        className: \"dialog-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"last-name\",\n        fullWidth: true,\n        onChange: this.handleUserFormChange('newPassword'),\n        label: \"New Password:\",\n        value: this.state.newPassword ? this.state.newPassword : '',\n        margin: \"normal\",\n        type: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"email-name\",\n        fullWidth: true,\n        label: \"Confirm Password\",\n        onChange: this.handleUserFormChange('confirmPassword'),\n        value: this.state.confirmPassword ? this.state.confirmPassword : '',\n        margin: \"normal\",\n        type: \"password\",\n        error: this.state.error,\n        helperText: this.state.error ? 'Must match the previous entry' : '',\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/app/users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Reset\")))) : '', this.props.redirectBack ? this.redirectBack() : ''));\n    }\n  }]);\n\n  return ResetPasswordUserContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    singleuser: state.usersReducer.singleuser,\n    redirectBack: state.usersReducer.redirectBack,\n    loading: state.usersReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUser: fetchUser,\n  clearUser: clearUser,\n  resetPasswordUser: resetPasswordUser,\n  resetRedirect: resetRedirect\n})(ResetPasswordUserContainer);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/module/users/update.users/resetPassword.users.container.js"],"names":["React","connect","DialogTitle","Dialog","clearUser","fetchUser","resetRedirect","resetPasswordUser","User","Link","Redirect","TextField","Button","DialogActions","LinearProgress","ResetPasswordUserContainer","state","singleuser","newPassword","confirmPassword","error","redirectBack","props","handleUserFormChange","name","event","setState","target","value","handleSubmit","preventDefault","u","console","log","match","params","id","undefined","user","username","loading","height","Component","mapStateToProps","usersReducer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { clearUser, fetchUser, resetRedirect, resetPasswordUser } from '../users.actions';\r\nimport { User } from '../../../model/user.model';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nexport class ResetPasswordUserContainer extends React.Component {\r\n\r\n    state = {\r\n        singleuser: new User({}),\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        error: false,\r\n        redirectBack: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUser(this.props.match.params.id);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearUser();\r\n    }\r\n\r\n    redirectBack = () => {\r\n        this.props.resetRedirect();\r\n        return <Redirect to='/app/users' />\r\n    }\r\n\r\n\r\n    handleUserFormChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.newPassword === this.state.confirmPassword) {\r\n            let u = this.state.singleuser;\r\n            console.log(u);\r\n            u['password']= this.state.newPassword;\r\n            this.props.resetPasswordUser(u)\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        if ((this.props.singleuser != -1 && this.props.singleuser !== undefined) && (this.state.singleuser === undefined || this.state.singleuser.id === undefined)) {\r\n\r\n            let user = this.props.singleuser;\r\n            this.setState({\r\n                singleuser: user\r\n            });\r\n\r\n        }\r\n        return (\r\n            <div>\r\n                    <Dialog open={true} fullWidth={false} maxWidth=\"md\" aria-labelledby=\"responsive-dialog-title\">\r\n                        <DialogTitle id=\"simple-dialog-title\">Reset password for <strong>{this.props.singleuser ? this.props.singleuser.username : ''}</strong></DialogTitle>\r\n                        {this.props.loading == true ? <LinearProgress color=\"secondary\" /> : <div style={{ height: 5 + 'px' }}></div>}\r\n\r\n                        {this.state.singleuser !== undefined ?\r\n\r\n\r\n                            <div>\r\n                                <form onSubmit={this.handleSubmit} autoComplete=\"off\" maxWidth=\"md\" className=\"dialog-form-container\" >\r\n                                    <TextField\r\n                                        id=\"last-name\"\r\n                                        fullWidth={true}\r\n                                        onChange={this.handleUserFormChange('newPassword')}\r\n                                        label=\"New Password:\"\r\n                                        value={this.state.newPassword ? this.state.newPassword : ''}\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"email-name\"\r\n                                        fullWidth={true}\r\n                                        label=\"Confirm Password\"\r\n                                        onChange={this.handleUserFormChange('confirmPassword')}\r\n                                        value={this.state.confirmPassword ? this.state.confirmPassword : ''}\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        error={this.state.error}\r\n                                        helperText={this.state.error ? 'Must match the previous entry' : ''}\r\n                                        required\r\n                                    />\r\n                                    <DialogActions>\r\n                                        <Link to=\"/app/users\">\r\n                                            <Button color=\"primary\">\r\n                                                Cancel\r\n                                </Button>\r\n                                        </Link>\r\n                                        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                                            Reset\r\n                                        </Button>\r\n                                    </DialogActions>\r\n                                </form>\r\n                            </div>\r\n\r\n                            : ''}\r\n                        {this.props.redirectBack ? this.redirectBack() : ''}\r\n                    </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        singleuser: state.usersReducer.singleuser,\r\n        redirectBack: state.usersReducer.redirectBack,\r\n        loading: state.usersReducer.loading\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, ({\r\n    fetchUser, clearUser, resetPasswordUser, resetRedirect\r\n}))(ResetPasswordUserContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}