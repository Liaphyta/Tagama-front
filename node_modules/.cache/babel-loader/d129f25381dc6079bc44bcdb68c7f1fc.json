{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar warnedOnce = false;\n/**\r\n * ⚠️ The ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.\r\n *\r\n * You should use `import { AccordionActions } from '@material-ui/core'`\r\n * or `import AccordionActions from '@material-ui/core/AccordionActions'`.\r\n */\n\nvar ExpansionPanelActions = /*#__PURE__*/React.forwardRef(function ExpansionPanelActions(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.', '', \"You should use `import { AccordionActions } from '@material-ui/core'`\", \"or `import AccordionActions from '@material-ui/core/AccordionActions'`\"].join('\\n'));\n    }\n  }\n\n  var classes = props.classes,\n      className = props.className,\n      _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the actions do not have additional margin.\r\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelActions'\n})(ExpansionPanelActions);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/ExpansionPanelActions/ExpansionPanelActions.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","styles","root","display","alignItems","padding","justifyContent","spacing","marginLeft","warnedOnce","ExpansionPanelActions","forwardRef","props","ref","process","env","NODE_ENV","console","error","join","classes","className","disableSpacing","other","createElement","propTypes","children","node","object","string","bool","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,cAAc,EAAE;AAJZ,GAFc;;AASpB;AACAC,EAAAA,OAAO,EAAE;AACP,8BAA0B;AACxBC,MAAAA,UAAU,EAAE;AADY;AADnB;AAVW,CAAf;AAgBP,IAAIC,UAAU,GAAG,KAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,qBAAqB,GAAG,aAAab,KAAK,CAACc,UAAN,CAAiB,SAASD,qBAAT,CAA+BE,KAA/B,EAAsCC,GAAtC,EAA2C;AACrG,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,CAACP,UAAL,EAAiB;AACfA,MAAAA,UAAU,GAAG,IAAb;AACAQ,MAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,0HAAD,EAA6H,EAA7H,EAAiI,uEAAjI,EAA0M,wEAA1M,EAAoRC,IAApR,CAAyR,IAAzR,CAAd;AACD;AACF;;AANoG,MASnGC,OATmG,GAYjGR,KAZiG,CASnGQ,OATmG;AAAA,MAUnGC,SAVmG,GAYjGT,KAZiG,CAUnGS,SAVmG;AAAA,8BAYjGT,KAZiG,CAWnGU,cAXmG;AAAA,MAWnGA,cAXmG,sCAWlF,KAXkF;AAAA,MAa/FC,KAb+F,GAavF3B,6BAA6B,CAACgB,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,gBAAzB,CAAR,CAb0D;;AAerG,SAAO,aAAaf,KAAK,CAAC2B,aAAN,CAAoB,KAApB,EAA2B7B,QAAQ,CAAC;AACtD0B,IAAAA,SAAS,EAAEtB,IAAI,CAACqB,OAAO,CAAClB,IAAT,EAAemB,SAAf,EAA0B,CAACC,cAAD,IAAmBF,OAAO,CAACb,OAArD,CADuC;AAEtDM,IAAAA,GAAG,EAAEA;AAFiD,GAAD,EAGpDU,KAHoD,CAAnC,CAApB;AAID,CAnB0C,CAA3C;AAoBAT,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,qBAAqB,CAACe,SAAtB,GAAkC;AACxE;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAE5B,SAAS,CAAC6B,IAToD;;AAWxE;AACF;AACA;AACA;AACEP,EAAAA,OAAO,EAAEtB,SAAS,CAAC8B,MAfqD;;AAiBxE;AACF;AACA;AACEP,EAAAA,SAAS,EAAEvB,SAAS,CAAC+B,MApBmD;;AAsBxE;AACF;AACA;AACEP,EAAAA,cAAc,EAAExB,SAAS,CAACgC;AAzB8C,CAA1E,GA0BI,KAAK,CA1BT;AA2BA,eAAe9B,UAAU,CAACC,MAAD,EAAS;AAChC8B,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZrB,qBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nexport const styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n    justifyContent: 'flex-end'\r\n  },\r\n\r\n  /* Styles applied to the root element if `disableSpacing={false}`. */\r\n  spacing: {\r\n    '& > :not(:first-child)': {\r\n      marginLeft: 8\r\n    }\r\n  }\r\n};\r\nlet warnedOnce = false;\r\n/**\r\n * ⚠️ The ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.\r\n *\r\n * You should use `import { AccordionActions } from '@material-ui/core'`\r\n * or `import AccordionActions from '@material-ui/core/AccordionActions'`.\r\n */\r\n\r\nconst ExpansionPanelActions = /*#__PURE__*/React.forwardRef(function ExpansionPanelActions(props, ref) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!warnedOnce) {\r\n      warnedOnce = true;\r\n      console.error(['Material-UI: the ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.', '', \"You should use `import { AccordionActions } from '@material-ui/core'`\", \"or `import AccordionActions from '@material-ui/core/AccordionActions'`\"].join('\\n'));\r\n    }\r\n  }\r\n\r\n  const {\r\n    classes,\r\n    className,\r\n    disableSpacing = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"disableSpacing\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelActions.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the actions do not have additional margin.\r\n   */\r\n  disableSpacing: PropTypes.bool\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiExpansionPanelActions'\r\n})(ExpansionPanelActions);"]},"metadata":{},"sourceType":"module"}