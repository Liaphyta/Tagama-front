{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Desktop/Repositories/starter-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = event => {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/core/es/internal/SwitchBase.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","refType","useControlled","useFormControl","withStyles","IconButton","styles","root","padding","checked","disabled","input","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","classes","className","defaultChecked","disabledProp","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","controlled","default","Boolean","state","setCheckedState","muiFormControl","handleFocus","event","handleBlur","handleInputChange","newChecked","target","hasLabelFor","createElement","component","role","undefined","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","func","oneOfType","number","any"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport const styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    classes,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);"]},"metadata":{},"sourceType":"module"}