{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(24),\n    transition: theme.transitions.create('fill', {\n      duration: theme.transitions.duration.shorter\n    })\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n  /* Styles applied to the root element if `color=\"action\"`. */\n  colorAction: {\n    color: theme.palette.action.active\n  },\n\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    color: theme.palette.error.main\n  },\n\n  /* Styles applied to the root element if `color=\"disabled\"`. */\n  colorDisabled: {\n    color: theme.palette.action.disabled\n  },\n\n  /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n  fontSizeInherit: {\n    fontSize: 'inherit'\n  },\n\n  /* Styles applied to the root element if `fontSize=\"small\"`. */\n  fontSizeSmall: {\n    fontSize: theme.typography.pxToRem(20)\n  },\n\n  /* Styles applied to the root element if `fontSize=\"large\"`. */\n  fontSizeLarge: {\n    fontSize: theme.typography.pxToRem(35)\n  }\n});\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/core/es/SvgIcon/SvgIcon.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","userSelect","width","height","display","fill","flexShrink","fontSize","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","color","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","SvgIcon","forwardRef","props","ref","children","classes","className","component","Component","htmlColor","titleAccess","viewBox","other","createElement","focusable","undefined","role","process","env","NODE_ENV","propTypes","node","object","string","oneOf","elementType","shapeRendering","muiName","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(24),\n    transition: theme.transitions.create('fill', {\n      duration: theme.transitions.duration.shorter\n    })\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n  /* Styles applied to the root element if `color=\"action\"`. */\n  colorAction: {\n    color: theme.palette.action.active\n  },\n\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    color: theme.palette.error.main\n  },\n\n  /* Styles applied to the root element if `color=\"disabled\"`. */\n  colorDisabled: {\n    color: theme.palette.action.disabled\n  },\n\n  /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n  fontSizeInherit: {\n    fontSize: 'inherit'\n  },\n\n  /* Styles applied to the root element if `fontSize=\"small\"`. */\n  fontSizeSmall: {\n    fontSize: theme.typography.pxToRem(20)\n  },\n\n  /* Styles applied to the root element if `fontSize=\"large\"`. */\n  fontSizeLarge: {\n    fontSize: theme.typography.pxToRem(35)\n  }\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'inherit',\n    component: Component = 'svg',\n    fontSize = 'default',\n    htmlColor,\n    titleAccess,\n    viewBox = '0 0 24 24'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[`color${capitalize(color)}`], fontSize !== 'default' && classes[`fontSize${capitalize(fontSize)}`]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);"]},"metadata":{},"sourceType":"module"}