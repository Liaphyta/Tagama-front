{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\tagama\\\\Tagama-front\\\\Tagama-front\\\\src\\\\app\\\\module\\\\reports\\\\monthlyreport.container.js\";\nimport React from 'react';\nimport { Button, Dialog, DialogTitle, Grid, DialogActions } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport MonthYearPicker from 'react-month-year-picker';\nimport { Page, Text, View, Document, StyleSheet, PDFDownloadLink } from '@react-pdf/renderer';\nimport { getByDateReport } from './reports.repo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { dispatchAction } from '../../..';\nexport default class MonthlyReportContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.listMonthlyReport = (month, year) => {\n      dispatchAction({\n        type: \"CIRCULAR_PROGRESS_SHOW\"\n      });\n      this.setState({\n        loading: true\n      });\n      getByDateReport(month, year).then(response => {\n        this.setState({\n          data: response,\n          show: true,\n          loading: false\n        }, dispatchAction({\n          type: \"CIRCULAR_PROGRESS_HIDE\"\n        }));\n        console.log(response);\n      }).catch(error => {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      show: false,\n      data: {},\n      formdata: {},\n      month: new Date().getMonth(),\n      year: new Date().getFullYear(),\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"max-width-dialog-title\",\n      \"aria-describedby\": \"max-width-dialog-description\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"max-width-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Monthly Report\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MonthYearPicker, {\n      selectedMonth: this.state.month,\n      selectedYear: this.state.year,\n      minYear: 2000,\n      maxYear: 2030,\n      onChangeYear: year => this.setState({\n        year: year\n      }),\n      onChangeMonth: month => this.setState({\n        month: month\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), this.state.loading && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        paddingLeft: '410px',\n        paddingTop: '200px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 150,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 127\n      }\n    }))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, this.state.show && /*#__PURE__*/React.createElement(Link, {\n      to: '/reports/' + this.state.month + '-' + this.state.year + '-REPORT.xls',\n      target: \"_blank\",\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Download\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"contained\",\n      onClick: this.listMonthlyReport.bind(this, this.state.month, this.state.year),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, console.log(this.state.show), \"Generate\"), /*#__PURE__*/React.createElement(Link, {\n      to: '/app/reports',\n      style: {\n        textDecoration: 'none',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Exit\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/src/app/module/reports/monthlyreport.container.js"],"names":["React","Button","Dialog","DialogTitle","Grid","DialogActions","Link","MonthYearPicker","Page","Text","View","Document","StyleSheet","PDFDownloadLink","getByDateReport","CircularProgress","dispatchAction","MonthlyReportContainer","Component","constructor","props","listMonthlyReport","month","year","type","setState","loading","then","response","data","show","console","log","catch","error","state","formdata","Date","getMonth","getFullYear","render","position","paddingLeft","paddingTop","width","bind","textDecoration","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Button,Dialog,DialogTitle,Grid,DialogActions} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport MonthYearPicker from 'react-month-year-picker';\r\nimport { Page, Text, View, Document, StyleSheet,PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { getByDateReport } from './reports.repo';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { dispatchAction } from '../../..';\r\n\r\n\r\n\r\n\r\nexport default class MonthlyReportContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          show:false,\r\n          data: {},\r\n          formdata: {},\r\n          month: new Date().getMonth(),\r\n          year: new Date().getFullYear(),\r\n          loading:false\r\n        }\r\n        \r\n      }\r\n      listMonthlyReport = (month,year) => {\r\n        dispatchAction({\r\n          type: \"CIRCULAR_PROGRESS_SHOW\"\r\n        });\r\n        this.setState({\r\n          loading:true\r\n        })\r\n        getByDateReport(month,year).then(response => {\r\n          this.setState({\r\n            data: response,\r\n            show:true,\r\n            loading:false\r\n          },\r\n          dispatchAction({\r\n            type: \"CIRCULAR_PROGRESS_HIDE\"\r\n          })\r\n          );\r\n          console.log(response);\r\n        }).catch(error => {\r\n          dispatchAction({\r\n            type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n          });\r\n          console.log(error);\r\n        });\r\n      }   \r\n\r\n    render(){\r\n        return (\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Monthly Report\"}</DialogTitle>\r\n              <Grid container>\r\n            <MonthYearPicker\r\n            selectedMonth={this.state.month}\r\n            selectedYear={this.state.year}\r\n            minYear={2000}\r\n            maxYear={2030}\r\n            onChangeYear={year => this.setState({ year: year })}\r\n            onChangeMonth={month => this.setState({ month: month })}\r\n            />\r\n            {this.state.loading && <div  style={{position: 'absolute', paddingLeft:'410px',paddingTop:'200px',width:'100%'}}>{<CircularProgress size={150} color=\"secondary\" />}</div>}\r\n\r\n              </Grid>\r\n            \r\n            <DialogActions>\r\n            {/* <a href={'C:\\Users\\User\\Desktop\\reports'+(this.state.month+1)+'-'+this.state.year+'-REPORT.xls'} download>Download</a> */}\r\n              {this.state.show && <Link to={'/reports/'+this.state.month+'-'+this.state.year+'-REPORT.xls'} target=\"_blank\" download>\r\n                <Button color=\"secondary\" variant=\"contained\">Download\r\n                  </Button>\r\n                  </Link>\r\n              \r\n              }\r\n            {/* <Link to={'/app/reports'} style={{textDecoration: 'none', color: 'white'}}> */}\r\n\r\n                <Button color=\"secondary\" variant=\"contained\"\r\n                onClick={this.listMonthlyReport.bind(this,this.state.month,this.state.year)}>\r\n                  {console.log(this.state.show)}\r\n                  Generate\r\n                </Button>\r\n            {/* </Link>     */}\r\n            <Link to={'/app/reports'} style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button color=\"secondary\" variant=\"outlined\">\r\n                  Exit\r\n                </Button>\r\n            </Link>       \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}