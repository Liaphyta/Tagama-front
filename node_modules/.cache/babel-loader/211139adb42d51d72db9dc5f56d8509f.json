{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 56,\n    backgroundColor: theme.palette.background.paper\n  }\n});\nvar BottomNavigation = /*#__PURE__*/React.forwardRef(function BottomNavigation(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      onChange = props.onChange,\n      _props$showLabels = props.showLabels,\n      showLabels = _props$showLabels === void 0 ? false : _props$showLabels,\n      value = props.value,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"component\", \"onChange\", \"showLabels\", \"value\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.Children.map(children, (child, childIndex) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The BottomNavigation component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected: childValue === value,\n      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,\n      value: childValue,\n      onChange\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigation.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {any} value We default to the index of the child.\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * If `true`, all `BottomNavigationAction`s will show their labels.\r\n   * By default, only the selected `BottomNavigationAction` will show its label.\r\n   */\n  showLabels: PropTypes.bool,\n\n  /**\r\n   * The value of the currently selected `BottomNavigationAction`.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigation'\n})(BottomNavigation);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/BottomNavigation/BottomNavigation.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","withStyles","styles","theme","root","display","justifyContent","height","backgroundColor","palette","background","paper","BottomNavigation","forwardRef","props","ref","children","classes","className","component","Component","onChange","showLabels","value","other","createElement","Children","map","child","childIndex","isValidElement","process","env","NODE_ENV","console","error","join","childValue","undefined","cloneElement","selected","showLabel","propTypes","node","object","string","elementType","func","bool","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    height: 56,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\nconst BottomNavigation = /*#__PURE__*/React.forwardRef(function BottomNavigation(props, ref) {\r\n  const {\r\n    children,\r\n    classes,\r\n    className,\r\n    component: Component = 'div',\r\n    onChange,\r\n    showLabels = false,\r\n    value\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"component\", \"onChange\", \"showLabels\", \"value\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className),\r\n    ref: ref\r\n  }, other), React.Children.map(children, (child, childIndex) => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The BottomNavigation component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\r\n    return /*#__PURE__*/React.cloneElement(child, {\r\n      selected: childValue === value,\r\n      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,\r\n      value: childValue,\r\n      onChange\r\n    });\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigation.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {any} value We default to the index of the child.\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, all `BottomNavigationAction`s will show their labels.\r\n   * By default, only the selected `BottomNavigationAction` will show its label.\r\n   */\r\n  showLabels: PropTypes.bool,\r\n\r\n  /**\r\n   * The value of the currently selected `BottomNavigationAction`.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiBottomNavigation'\r\n})(BottomNavigation);"]},"metadata":{},"sourceType":"module"}