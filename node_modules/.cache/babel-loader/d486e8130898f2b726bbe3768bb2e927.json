{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\module\\\\app\\\\app.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { handleLogout, refreshToken } from '../../shared/app.properties';\n\nvar AppContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppContainer, _React$Component);\n\n  function AppContainer() {\n    _classCallCheck(this, AppContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppContainer).apply(this, arguments));\n  }\n\n  _createClass(AppContainer, [{\n    key: \"componentDidMount\",\n    //I need this when i have login system\n    // componentWillMount() {\n    //     let refreshTime = new Date();\n    //     refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\n    //     if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\n    //         handleLogout()\n    //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\n    //         handleLogout()\n    //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\n    //         refreshToken()\n    //     }\n    // }\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return AppContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(AppContainer);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/module/app/app.container.js"],"names":["React","connect","handleLogout","refreshToken","AppContainer","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,6BAA3C;;IAEMC,Y;;;;;;;;;;;;;AAGF;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;wCAEoB,CACnB;;;6BAGQ;AAEL,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAQH;;;;EAjCsBJ,KAAK,CAACK,S;;AAoCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO,EAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAACK,eAAD,EAAmB,EAAnB,CAAP,CAA+BF,YAA/B,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { handleLogout, refreshToken } from '../../shared/app.properties';\r\n\r\nclass AppContainer extends React.Component {\r\n\r\n\r\n    //I need this when i have login system\r\n    \r\n    // componentWillMount() {\r\n\r\n    //     let refreshTime = new Date();\r\n    //     refreshTime.setSeconds(refreshTime.getSeconds() + 1800);\r\n\r\n    //     if (!localStorage.getItem('idm') || !localStorage.getItem('me')) {\r\n    //         handleLogout()\r\n    //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < new Date()) {\r\n    //         handleLogout()\r\n    //     } else if (localStorage.getItem('idm') && new Date(JSON.parse(localStorage.getItem('idm')).expires_at) < refreshTime) {\r\n    //         refreshToken()\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n};\r\n\r\nexport default connect(mapStateToProps, ({}))(AppContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}