{"ast":null,"code":"import _toArray from \"C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = theme => {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    toggle: handleChange\n  }), [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the accordion.\r\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, expands the accordion by default.\r\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\r\n   * If `true`, the accordion will be displayed in a disabled state.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, expands the accordion, otherwise collapse it.\r\n   * Setting this prop enables control over the accordion.\r\n   */\n  expanded: PropTypes.bool,\n\n  /**\r\n   * Callback fired when the expand/collapse state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {boolean} expanded The `expanded` state of the accordion.\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * If `true`, rounded corners are disabled.\r\n   */\n  square: PropTypes.bool,\n\n  /**\r\n   * The component used for the collapse effect.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/Accordion/Accordion.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","chainPropTypes","Collapse","Paper","withStyles","AccordionContext","useControlled","styles","theme","transition","duration","transitions","shortest","root","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","rounded","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","expanded","disabled","Accordion","forwardRef","props","ref","childrenProp","children","classes","className","defaultExpanded","expandedProp","onChange","square","TransitionComponent","TransitionProps","other","controlled","default","name","state","setExpandedState","handleChange","useCallback","event","Children","toArray","summary","contextValue","useMemo","toggle","createElement","Provider","value","in","timeout","id","role","process","env","NODE_ENV","propTypes","node","isRequired","Error","isValidElement","object","string","bool","func","elementType"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { chainPropTypes } from '@material-ui/utils';\r\nimport Collapse from '../Collapse';\r\nimport Paper from '../Paper';\r\nimport withStyles from '../styles/withStyles';\r\nimport AccordionContext from './AccordionContext';\r\nimport useControlled from '../utils/useControlled';\r\nexport const styles = theme => {\r\n  const transition = {\r\n    duration: theme.transitions.duration.shortest\r\n  };\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      position: 'relative',\r\n      transition: theme.transitions.create(['margin'], transition),\r\n      '&:before': {\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: -1,\r\n        right: 0,\r\n        height: 1,\r\n        content: '\"\"',\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.divider,\r\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\r\n      },\r\n      '&:first-child': {\r\n        '&:before': {\r\n          display: 'none'\r\n        }\r\n      },\r\n      '&$expanded': {\r\n        margin: '16px 0',\r\n        '&:first-child': {\r\n          marginTop: 0\r\n        },\r\n        '&:last-child': {\r\n          marginBottom: 0\r\n        },\r\n        '&:before': {\r\n          opacity: 0\r\n        }\r\n      },\r\n      '&$expanded + &': {\r\n        '&:before': {\r\n          display: 'none'\r\n        }\r\n      },\r\n      '&$disabled': {\r\n        backgroundColor: theme.palette.action.disabledBackground\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the root element if `square={false}`. */\r\n    rounded: {\r\n      borderRadius: 0,\r\n      '&:first-child': {\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderTopRightRadius: theme.shape.borderRadius\r\n      },\r\n      '&:last-child': {\r\n        borderBottomLeftRadius: theme.shape.borderRadius,\r\n        borderBottomRightRadius: theme.shape.borderRadius,\r\n        // Fix a rendering issue on Edge\r\n        '@supports (-ms-ime-align: auto)': {\r\n          borderBottomLeftRadius: 0,\r\n          borderBottomRightRadius: 0\r\n        }\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the root element if `expanded={true}`. */\r\n    expanded: {},\r\n\r\n    /* Styles applied to the root element if `disabled={true}`. */\r\n    disabled: {}\r\n  };\r\n};\r\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\r\n  const {\r\n    children: childrenProp,\r\n    classes,\r\n    className,\r\n    defaultExpanded = false,\r\n    disabled = false,\r\n    expanded: expandedProp,\r\n    onChange,\r\n    square = false,\r\n    TransitionComponent = Collapse,\r\n    TransitionProps\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\r\n\r\n  const [expanded, setExpandedState] = useControlled({\r\n    controlled: expandedProp,\r\n    default: defaultExpanded,\r\n    name: 'Accordion',\r\n    state: 'expanded'\r\n  });\r\n  const handleChange = React.useCallback(event => {\r\n    setExpandedState(!expanded);\r\n\r\n    if (onChange) {\r\n      onChange(event, !expanded);\r\n    }\r\n  }, [expanded, onChange, setExpandedState]);\r\n  const [summary, ...children] = React.Children.toArray(childrenProp);\r\n  const contextValue = React.useMemo(() => ({\r\n    expanded,\r\n    disabled,\r\n    toggle: handleChange\r\n  }), [expanded, disabled, handleChange]);\r\n  return /*#__PURE__*/React.createElement(Paper, _extends({\r\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\r\n    ref: ref,\r\n    square: square\r\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\r\n    value: contextValue\r\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\r\n    in: expanded,\r\n    timeout: \"auto\"\r\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\r\n    \"aria-labelledby\": summary.props.id,\r\n    id: summary.props['aria-controls'],\r\n    role: \"region\"\r\n  }, children)));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the accordion.\r\n   */\r\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\r\n    const summary = React.Children.toArray(props.children)[0];\r\n\r\n    if (isFragment(summary)) {\r\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\r\n    }\r\n\r\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\r\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\r\n    }\r\n\r\n    return null;\r\n  }),\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, expands the accordion by default.\r\n   */\r\n  defaultExpanded: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the accordion will be displayed in a disabled state.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, expands the accordion, otherwise collapse it.\r\n   * Setting this prop enables control over the accordion.\r\n   */\r\n  expanded: PropTypes.bool,\r\n\r\n  /**\r\n   * Callback fired when the expand/collapse state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {boolean} expanded The `expanded` state of the accordion.\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, rounded corners are disabled.\r\n   */\r\n  square: PropTypes.bool,\r\n\r\n  /**\r\n   * The component used for the collapse effect.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiAccordion'\r\n})(Accordion);"]},"metadata":{},"sourceType":"module"}