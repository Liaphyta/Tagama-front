{"ast":null,"code":"var clone = function () {\n  'use strict';\n  /**\r\n   * Clones (copies) an Object using deep copying.\r\n   *\r\n   * This function supports circular references by default, but if you are certain\r\n   * there are no circular references in your object, you can save some CPU time\r\n   * by calling clone(obj, false).\r\n   *\r\n   * Caution: if `circular` is false and `parent` contains circular references,\r\n   * your program may enter an infinite loop and crash.\r\n   *\r\n   * @param `parent` - the object to be cloned\r\n   * @param `circular` - set to true if the object to be cloned may contain\r\n   *    circular references. (optional - true by default)\r\n   * @param `depth` - set to a number if the object is only to be cloned to\r\n   *    a particular depth. (optional - defaults to Infinity)\r\n   * @param `prototype` - sets the prototype to be used when cloning an object.\r\n   *    (optional - defaults to parent prototype).\r\n  */\n\n  function clone(parent, circular, depth, prototype) {\n    var filter;\n\n    if (typeof circular === 'object') {\n      depth = circular.depth;\n      prototype = circular.prototype;\n      filter = circular.filter;\n      circular = circular.circular;\n    } // maintain two arrays for circular references, where corresponding parents\n    // and children have the same index\n\n\n    var allParents = [];\n    var allChildren = [];\n    var useBuffer = typeof Buffer != 'undefined';\n    if (typeof circular == 'undefined') circular = true;\n    if (typeof depth == 'undefined') depth = Infinity; // recurse this function so we don't reset allParents and allChildren\n\n    function _clone(parent, depth) {\n      // cloning null always returns null\n      if (parent === null) return null;\n      if (depth == 0) return parent;\n      var child;\n      var proto;\n\n      if (typeof parent != 'object') {\n        return parent;\n      }\n\n      if (clone.__isArray(parent)) {\n        child = [];\n      } else if (clone.__isRegExp(parent)) {\n        child = new RegExp(parent.source, __getRegExpFlags(parent));\n        if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n      } else if (clone.__isDate(parent)) {\n        child = new Date(parent.getTime());\n      } else if (useBuffer && Buffer.isBuffer(parent)) {\n        if (Buffer.allocUnsafe) {\n          // Node.js >= 4.5.0\n          child = Buffer.allocUnsafe(parent.length);\n        } else {\n          // Older Node.js versions\n          child = new Buffer(parent.length);\n        }\n\n        parent.copy(child);\n        return child;\n      } else {\n        if (typeof prototype == 'undefined') {\n          proto = Object.getPrototypeOf(parent);\n          child = Object.create(proto);\n        } else {\n          child = Object.create(prototype);\n          proto = prototype;\n        }\n      }\n\n      if (circular) {\n        var index = allParents.indexOf(parent);\n\n        if (index != -1) {\n          return allChildren[index];\n        }\n\n        allParents.push(parent);\n        allChildren.push(child);\n      }\n\n      for (var i in parent) {\n        var attrs;\n\n        if (proto) {\n          attrs = Object.getOwnPropertyDescriptor(proto, i);\n        }\n\n        if (attrs && attrs.set == null) {\n          continue;\n        }\n\n        child[i] = _clone(parent[i], depth - 1);\n      }\n\n      return child;\n    }\n\n    return _clone(parent, depth);\n  }\n  /**\r\n   * Simple flat clone using prototype, accepts only objects, usefull for property\r\n   * override on FLAT configuration object (no nested props).\r\n   *\r\n   * USE WITH CAUTION! This may not behave as you wish if you do not know how this\r\n   * works.\r\n   */\n\n\n  clone.clonePrototype = function clonePrototype(parent) {\n    if (parent === null) return null;\n\n    var c = function c() {};\n\n    c.prototype = parent;\n    return new c();\n  }; // private utility functions\n\n\n  function __objToStr(o) {\n    return Object.prototype.toString.call(o);\n  }\n\n  ;\n  clone.__objToStr = __objToStr;\n\n  function __isDate(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object Date]';\n  }\n\n  ;\n  clone.__isDate = __isDate;\n\n  function __isArray(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object Array]';\n  }\n\n  ;\n  clone.__isArray = __isArray;\n\n  function __isRegExp(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n  }\n\n  ;\n  clone.__isRegExp = __isRegExp;\n\n  function __getRegExpFlags(re) {\n    var flags = '';\n    if (re.global) flags += 'g';\n    if (re.ignoreCase) flags += 'i';\n    if (re.multiline) flags += 'm';\n    return flags;\n  }\n\n  ;\n  clone.__getRegExpFlags = __getRegExpFlags;\n  return clone;\n}();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@react-pdf/fontkit/node_modules/clone/clone.js"],"names":["clone","parent","circular","depth","prototype","filter","allParents","allChildren","useBuffer","Buffer","Infinity","_clone","child","proto","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","length","copy","Object","getPrototypeOf","create","index","indexOf","push","i","attrs","getOwnPropertyDescriptor","set","clonePrototype","c","__objToStr","o","toString","call","re","flags","global","ignoreCase","multiline","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAI,YAAW;AACxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAASA,KAAT,CAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,KAAjC,EAAwCC,SAAxC,EAAmD;AACjD,QAAIC,MAAJ;;AACA,QAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;AAChCC,MAAAA,KAAK,GAAGD,QAAQ,CAACC,KAAjB;AACAC,MAAAA,SAAS,GAAGF,QAAQ,CAACE,SAArB;AACAC,MAAAA,MAAM,GAAGH,QAAQ,CAACG,MAAlB;AACAH,MAAAA,QAAQ,GAAGA,QAAQ,CAACA,QAApB;AACD,KAPgD,CAQjD;AACA;;;AACA,QAAII,UAAU,GAAG,EAAjB;AACA,QAAIC,WAAW,GAAG,EAAlB;AAEA,QAAIC,SAAS,GAAG,OAAOC,MAAP,IAAiB,WAAjC;AAEA,QAAI,OAAOP,QAAP,IAAmB,WAAvB,EACEA,QAAQ,GAAG,IAAX;AAEF,QAAI,OAAOC,KAAP,IAAgB,WAApB,EACEA,KAAK,GAAGO,QAAR,CAnB+C,CAqBjD;;AACA,aAASC,MAAT,CAAgBV,MAAhB,EAAwBE,KAAxB,EAA+B;AAC7B;AACA,UAAIF,MAAM,KAAK,IAAf,EACE,OAAO,IAAP;AAEF,UAAIE,KAAK,IAAI,CAAb,EACE,OAAOF,MAAP;AAEF,UAAIW,KAAJ;AACA,UAAIC,KAAJ;;AACA,UAAI,OAAOZ,MAAP,IAAiB,QAArB,EAA+B;AAC7B,eAAOA,MAAP;AACD;;AAED,UAAID,KAAK,CAACc,SAAN,CAAgBb,MAAhB,CAAJ,EAA6B;AAC3BW,QAAAA,KAAK,GAAG,EAAR;AACD,OAFD,MAEO,IAAIZ,KAAK,CAACe,UAAN,CAAiBd,MAAjB,CAAJ,EAA8B;AACnCW,QAAAA,KAAK,GAAG,IAAII,MAAJ,CAAWf,MAAM,CAACgB,MAAlB,EAA0BC,gBAAgB,CAACjB,MAAD,CAA1C,CAAR;AACA,YAAIA,MAAM,CAACkB,SAAX,EAAsBP,KAAK,CAACO,SAAN,GAAkBlB,MAAM,CAACkB,SAAzB;AACvB,OAHM,MAGA,IAAInB,KAAK,CAACoB,QAAN,CAAenB,MAAf,CAAJ,EAA4B;AACjCW,QAAAA,KAAK,GAAG,IAAIS,IAAJ,CAASpB,MAAM,CAACqB,OAAP,EAAT,CAAR;AACD,OAFM,MAEA,IAAId,SAAS,IAAIC,MAAM,CAACc,QAAP,CAAgBtB,MAAhB,CAAjB,EAA0C;AAC/C,YAAIQ,MAAM,CAACe,WAAX,EAAwB;AACtB;AACAZ,UAAAA,KAAK,GAAGH,MAAM,CAACe,WAAP,CAAmBvB,MAAM,CAACwB,MAA1B,CAAR;AACD,SAHD,MAGO;AACL;AACAb,UAAAA,KAAK,GAAG,IAAIH,MAAJ,CAAWR,MAAM,CAACwB,MAAlB,CAAR;AACD;;AACDxB,QAAAA,MAAM,CAACyB,IAAP,CAAYd,KAAZ;AACA,eAAOA,KAAP;AACD,OAVM,MAUA;AACL,YAAI,OAAOR,SAAP,IAAoB,WAAxB,EAAqC;AACnCS,UAAAA,KAAK,GAAGc,MAAM,CAACC,cAAP,CAAsB3B,MAAtB,CAAR;AACAW,UAAAA,KAAK,GAAGe,MAAM,CAACE,MAAP,CAAchB,KAAd,CAAR;AACD,SAHD,MAIK;AACHD,UAAAA,KAAK,GAAGe,MAAM,CAACE,MAAP,CAAczB,SAAd,CAAR;AACAS,UAAAA,KAAK,GAAGT,SAAR;AACD;AACF;;AAED,UAAIF,QAAJ,EAAc;AACZ,YAAI4B,KAAK,GAAGxB,UAAU,CAACyB,OAAX,CAAmB9B,MAAnB,CAAZ;;AAEA,YAAI6B,KAAK,IAAI,CAAC,CAAd,EAAiB;AACf,iBAAOvB,WAAW,CAACuB,KAAD,CAAlB;AACD;;AACDxB,QAAAA,UAAU,CAAC0B,IAAX,CAAgB/B,MAAhB;AACAM,QAAAA,WAAW,CAACyB,IAAZ,CAAiBpB,KAAjB;AACD;;AAED,WAAK,IAAIqB,CAAT,IAAchC,MAAd,EAAsB;AACpB,YAAIiC,KAAJ;;AACA,YAAIrB,KAAJ,EAAW;AACTqB,UAAAA,KAAK,GAAGP,MAAM,CAACQ,wBAAP,CAAgCtB,KAAhC,EAAuCoB,CAAvC,CAAR;AACD;;AAED,YAAIC,KAAK,IAAIA,KAAK,CAACE,GAAN,IAAa,IAA1B,EAAgC;AAC9B;AACD;;AACDxB,QAAAA,KAAK,CAACqB,CAAD,CAAL,GAAWtB,MAAM,CAACV,MAAM,CAACgC,CAAD,CAAP,EAAY9B,KAAK,GAAG,CAApB,CAAjB;AACD;;AAED,aAAOS,KAAP;AACD;;AAED,WAAOD,MAAM,CAACV,MAAD,EAASE,KAAT,CAAb;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,EAAAA,KAAK,CAACqC,cAAN,GAAuB,SAASA,cAAT,CAAwBpC,MAAxB,EAAgC;AACrD,QAAIA,MAAM,KAAK,IAAf,EACE,OAAO,IAAP;;AAEF,QAAIqC,CAAC,GAAG,SAAJA,CAAI,GAAY,CAAE,CAAtB;;AACAA,IAAAA,CAAC,CAAClC,SAAF,GAAcH,MAAd;AACA,WAAO,IAAIqC,CAAJ,EAAP;AACD,GAPD,CAxHwB,CAiIxB;;;AAEA,WAASC,UAAT,CAAoBC,CAApB,EAAuB;AACrB,WAAOb,MAAM,CAACvB,SAAP,CAAiBqC,QAAjB,CAA0BC,IAA1B,CAA+BF,CAA/B,CAAP;AACD;;AAAA;AACDxC,EAAAA,KAAK,CAACuC,UAAN,GAAmBA,UAAnB;;AAEA,WAASnB,QAAT,CAAkBoB,CAAlB,EAAqB;AACnB,WAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBD,UAAU,CAACC,CAAD,CAAV,KAAkB,eAAlD;AACD;;AAAA;AACDxC,EAAAA,KAAK,CAACoB,QAAN,GAAiBA,QAAjB;;AAEA,WAASN,SAAT,CAAmB0B,CAAnB,EAAsB;AACpB,WAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBD,UAAU,CAACC,CAAD,CAAV,KAAkB,gBAAlD;AACD;;AAAA;AACDxC,EAAAA,KAAK,CAACc,SAAN,GAAkBA,SAAlB;;AAEA,WAASC,UAAT,CAAoByB,CAApB,EAAuB;AACrB,WAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBD,UAAU,CAACC,CAAD,CAAV,KAAkB,iBAAlD;AACD;;AAAA;AACDxC,EAAAA,KAAK,CAACe,UAAN,GAAmBA,UAAnB;;AAEA,WAASG,gBAAT,CAA0ByB,EAA1B,EAA8B;AAC5B,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAID,EAAE,CAACE,MAAP,EAAeD,KAAK,IAAI,GAAT;AACf,QAAID,EAAE,CAACG,UAAP,EAAmBF,KAAK,IAAI,GAAT;AACnB,QAAID,EAAE,CAACI,SAAP,EAAkBH,KAAK,IAAI,GAAT;AAClB,WAAOA,KAAP;AACD;;AAAA;AACD5C,EAAAA,KAAK,CAACkB,gBAAN,GAAyBA,gBAAzB;AAEA,SAAOlB,KAAP;AACC,CAjKW,EAAZ;;AAmKA,IAAI,OAAOgD,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,OAAzC,EAAkD;AAChDD,EAAAA,MAAM,CAACC,OAAP,GAAiBjD,KAAjB;AACD","sourcesContent":["var clone = (function() {\r\n'use strict';\r\n\r\n/**\r\n * Clones (copies) an Object using deep copying.\r\n *\r\n * This function supports circular references by default, but if you are certain\r\n * there are no circular references in your object, you can save some CPU time\r\n * by calling clone(obj, false).\r\n *\r\n * Caution: if `circular` is false and `parent` contains circular references,\r\n * your program may enter an infinite loop and crash.\r\n *\r\n * @param `parent` - the object to be cloned\r\n * @param `circular` - set to true if the object to be cloned may contain\r\n *    circular references. (optional - true by default)\r\n * @param `depth` - set to a number if the object is only to be cloned to\r\n *    a particular depth. (optional - defaults to Infinity)\r\n * @param `prototype` - sets the prototype to be used when cloning an object.\r\n *    (optional - defaults to parent prototype).\r\n*/\r\nfunction clone(parent, circular, depth, prototype) {\r\n  var filter;\r\n  if (typeof circular === 'object') {\r\n    depth = circular.depth;\r\n    prototype = circular.prototype;\r\n    filter = circular.filter;\r\n    circular = circular.circular\r\n  }\r\n  // maintain two arrays for circular references, where corresponding parents\r\n  // and children have the same index\r\n  var allParents = [];\r\n  var allChildren = [];\r\n\r\n  var useBuffer = typeof Buffer != 'undefined';\r\n\r\n  if (typeof circular == 'undefined')\r\n    circular = true;\r\n\r\n  if (typeof depth == 'undefined')\r\n    depth = Infinity;\r\n\r\n  // recurse this function so we don't reset allParents and allChildren\r\n  function _clone(parent, depth) {\r\n    // cloning null always returns null\r\n    if (parent === null)\r\n      return null;\r\n\r\n    if (depth == 0)\r\n      return parent;\r\n\r\n    var child;\r\n    var proto;\r\n    if (typeof parent != 'object') {\r\n      return parent;\r\n    }\r\n\r\n    if (clone.__isArray(parent)) {\r\n      child = [];\r\n    } else if (clone.__isRegExp(parent)) {\r\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\r\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\r\n    } else if (clone.__isDate(parent)) {\r\n      child = new Date(parent.getTime());\r\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\r\n      if (Buffer.allocUnsafe) {\r\n        // Node.js >= 4.5.0\r\n        child = Buffer.allocUnsafe(parent.length);\r\n      } else {\r\n        // Older Node.js versions\r\n        child = new Buffer(parent.length);\r\n      }\r\n      parent.copy(child);\r\n      return child;\r\n    } else {\r\n      if (typeof prototype == 'undefined') {\r\n        proto = Object.getPrototypeOf(parent);\r\n        child = Object.create(proto);\r\n      }\r\n      else {\r\n        child = Object.create(prototype);\r\n        proto = prototype;\r\n      }\r\n    }\r\n\r\n    if (circular) {\r\n      var index = allParents.indexOf(parent);\r\n\r\n      if (index != -1) {\r\n        return allChildren[index];\r\n      }\r\n      allParents.push(parent);\r\n      allChildren.push(child);\r\n    }\r\n\r\n    for (var i in parent) {\r\n      var attrs;\r\n      if (proto) {\r\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\r\n      }\r\n\r\n      if (attrs && attrs.set == null) {\r\n        continue;\r\n      }\r\n      child[i] = _clone(parent[i], depth - 1);\r\n    }\r\n\r\n    return child;\r\n  }\r\n\r\n  return _clone(parent, depth);\r\n}\r\n\r\n/**\r\n * Simple flat clone using prototype, accepts only objects, usefull for property\r\n * override on FLAT configuration object (no nested props).\r\n *\r\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\r\n * works.\r\n */\r\nclone.clonePrototype = function clonePrototype(parent) {\r\n  if (parent === null)\r\n    return null;\r\n\r\n  var c = function () {};\r\n  c.prototype = parent;\r\n  return new c();\r\n};\r\n\r\n// private utility functions\r\n\r\nfunction __objToStr(o) {\r\n  return Object.prototype.toString.call(o);\r\n};\r\nclone.__objToStr = __objToStr;\r\n\r\nfunction __isDate(o) {\r\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\r\n};\r\nclone.__isDate = __isDate;\r\n\r\nfunction __isArray(o) {\r\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\r\n};\r\nclone.__isArray = __isArray;\r\n\r\nfunction __isRegExp(o) {\r\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\r\n};\r\nclone.__isRegExp = __isRegExp;\r\n\r\nfunction __getRegExpFlags(re) {\r\n  var flags = '';\r\n  if (re.global) flags += 'g';\r\n  if (re.ignoreCase) flags += 'i';\r\n  if (re.multiline) flags += 'm';\r\n  return flags;\r\n};\r\nclone.__getRegExpFlags = __getRegExpFlags;\r\n\r\nreturn clone;\r\n})();\r\n\r\nif (typeof module === 'object' && module.exports) {\r\n  module.exports = clone;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}