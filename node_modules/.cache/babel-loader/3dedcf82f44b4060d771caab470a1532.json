{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\starter-app\\\\src\\\\app\\\\scans\\\\scans.container.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { getBooksAndRecords } from '../module/Folders/folder.repo';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { dispatchAction } from '../..';\nexport default class ScansContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormInput = name => event => {\n      var formdata = this.state.formdata;\n      formdata[name] = event.target.value;\n      this.setState({\n        formdata: formdata\n      });\n    };\n\n    this.onChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPages: event.target.value\n      });\n      console.log(this.state.rowsPerPages);\n      this.listBooksAndRecords(this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, this.state.dateFrom.toISOString(), this.state.dateTo.toISOString(), 0, event.target.value);\n    };\n\n    this.handleChangePage = (event, page) => {\n      if (this.state.data && this.state.data.data && this.state.data.data.size) {\n        this.listBooksAndRecords(this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, this.state.dateFrom.toISOString(), this.state.dateTo.toISOString(), page, this.state.data.data.size);\n      } else {\n        this.listBooksAndRecords(page, 5);\n      }\n    };\n\n    this.handleChangeDateField = name => event => {\n      this.setState({\n        [name]: event\n      });\n    };\n\n    this.formatDate = dateString => {\n      var newDateStringArr = dateString.split('T');\n      newDateStringArr[1] = newDateStringArr[1].split('.000Z')[0];\n      return newDateStringArr[0] + ' ' + newDateStringArr[1];\n    };\n\n    this.listBooksAndRecords = (type, year, name, dateFrom, dateTo, page, size) => {\n      // console.log(this.state.formdata.registerName);\n      // console.log(this.state.formdata.registerType);\n      // console.log(this.state.formdata.registerYear);\n      dispatchAction({\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\n      });\n      getBooksAndRecords(type, year, name, dateFrom, dateTo, page, size).then(response => {\n        this.setState({\n          data: response\n        }, dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        }));\n        console.log(response);\n      }).catch(error => {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      rowsPerPages: 5,\n      data: {},\n      formdata: {\n        registerName: undefined,\n        registerYear: undefined,\n        registerType: undefined\n      },\n      dateFrom: new Date(),\n      dateTo: new Date()\n    };\n  }\n\n  handleStatus(props) {\n    if (props == 1) return \"Венчани\";else if (props == 0) return \"Родени\";else if (props == 2) return \"Умрени\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-input\",\n      label: \"Name Register Book\",\n      variant: \"outlined\",\n      style: {\n        marginTop: 50 + \"px\",\n        borderColor: 'red'\n      },\n      inputProps: {\n        style: {\n          borderColor: 'red'\n        }\n      } // value={values.name}\n      // onChange={handleChange('name')}\n      ,\n      onChange: this.handleFormInput('registerName'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-input\",\n      label: \"Year\",\n      variant: \"outlined\",\n      style: {\n        marginTop: 50 + \"px\",\n        marginLeft: 20 + \"px\",\n        borderColor: 'red'\n      },\n      inputProps: {\n        style: {\n          borderColor: 'red'\n        }\n      } // value={values.name}\n      ,\n      onChange: this.handleFormInput('registerYear'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-input\",\n      label: \"Type Register Book\",\n      variant: \"outlined\",\n      style: {\n        marginTop: 50 + \"px\",\n        marginLeft: 20 + \"px\",\n        borderColor: 'red'\n      },\n      inputProps: {\n        style: {\n          borderColor: 'red'\n        }\n      } // value={values.name}\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.handleFormInput('registerType'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: {\n        marginTop: 50 + \"px\",\n        marginLeft: 20 + \"px\",\n        height: 55 + \"px\",\n        width: 100 + \"px\"\n      },\n      onClick: this.listBooksAndRecords.bind(this, this.state.formdata.registerType, this.state.formdata.registerYear, this.state.formdata.registerName, this.state.dateFrom.toISOString(), this.state.dateTo.toISOString(), 0, 5),\n      disabled: !this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Link, {\n      to: '/app/scans/missingFiles',\n      style: {\n        textDecoration: 'none',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: {\n        marginTop: 50 + \"px\",\n        marginLeft: 100 + \"px\",\n        height: 55 + \"px\",\n        width: 100 + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, \"Missing Scans\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      id: \"standard-uncontrolled\",\n      value: this.state.dateFrom ? this.state.dateFrom : '',\n      onChange: this.handleChangeDateField('dateFrom'),\n      label: \"Date From\",\n      keyboard: true,\n      format: \"dd-MM-yyyy\",\n      mask: value => value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : [],\n      margin: \"normal\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      id: \"standard-uncontrolled\",\n      value: this.state.dateTo ? this.state.dateTo : '',\n      onChange: this.handleChangeDateField('dateTo'),\n      label: \"Date To\",\n      keyboard: true,\n      style: {\n        marginLeft: 20 + \"px\"\n      },\n      format: \"dd-MM-yyyy\",\n      mask: value => value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : [],\n      margin: \"normal\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 36\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, \"Folder path\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, \"Number of records\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, this.state.data && this.state.data.data && this.state.data.data.content && this.state.data.data.content.map(item => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 27\n        }\n      }, item.name), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 27\n        }\n      }, item.registerYear), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 27\n        }\n      }, this.handleStatus(item.registerType)), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, item.pathFolder ? item.pathFolder : 'No folder')), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 27\n        }\n      }, item.numberOfRecords ? item.numberOfRecords : '0'));\n    }))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: this.state.data.data ? this.state.data.data.totalElements : 0,\n      rowsPerPage: this.state.rowsPerPages,\n      page: this.state.data.data ? this.state.data.data.number : 0,\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.onChangeRowsPerPage,\n      backIconButtonProps: {\n        'aria-label': 'Previous Page'\n      },\n      nextIconButtonProps: {\n        'aria-label': 'Next Page'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/src/app/scans/scans.container.js"],"names":["React","TextField","Button","DatePicker","MuiPickersUtilsProvider","TimePicker","DateFnsUtils","getBooksAndRecords","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Link","dispatchAction","ScansContainer","Component","constructor","props","handleFormInput","name","event","formdata","state","target","value","setState","onChangeRowsPerPage","rowsPerPages","console","log","listBooksAndRecords","registerType","registerYear","registerName","dateFrom","toISOString","dateTo","handleChangePage","page","data","size","handleChangeDateField","formatDate","dateString","newDateStringArr","split","type","year","then","response","catch","error","undefined","Date","handleStatus","render","marginLeft","marginTop","borderColor","style","height","width","bind","textDecoration","color","content","map","item","id","pathFolder","numberOfRecords","totalElements","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAASC,UAAT,EAAqBC,uBAArB,EAA8CC,UAA9C,QAAgE,qBAAhE;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,EAAmCC,SAAnC,EAA6CC,SAA7C,EAAuDC,eAAvD,QAA6E,mBAA7E;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,OAA/B;AAMA,eAAe,MAAMC,cAAN,SAA6BhB,KAAK,CAACiB,SAAnC,CAA6C;AAExDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,eAfmB,GAeDC,IAAI,IAAIC,KAAK,IAAI;AACjC,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B;AACAA,MAAAA,QAAQ,CAACF,IAAD,CAAR,GAAiBC,KAAK,CAACG,MAAN,CAAaC,KAA9B;AACE,WAAKC,QAAL,CAAc;AACZJ,QAAAA,QAAQ,EAAEA;AADE,OAAd;AAGH,KArBkB;;AAAA,SAsBnBK,mBAtBmB,GAsBIN,KAAD,IAAW;AAC/B,WAAKK,QAAL,CAAc;AACVE,QAAAA,YAAY,EAAEP,KAAK,CAACG,MAAN,CAAaC;AADjB,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWK,YAAvB;AACA,WAAKG,mBAAL,CAAyB,KAAKR,KAAL,CAAWD,QAAX,CAAoBU,YAA7C,EAA0D,KAAKT,KAAL,CAAWD,QAAX,CAAoBW,YAA9E,EACE,KAAKV,KAAL,CAAWD,QAAX,CAAoBY,YADtB,EACmC,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,WAApB,EADnC,EAEE,KAAKb,KAAL,CAAWc,MAAX,CAAkBD,WAAlB,EAFF,EAEkC,CAFlC,EAEoCf,KAAK,CAACG,MAAN,CAAaC,KAFjD;AAGD,KA9BkB;;AAAA,SA+BnBa,gBA/BmB,GA+BA,CAACjB,KAAD,EAAQkB,IAAR,KAAiB;AAElC,UAAG,KAAKhB,KAAL,CAAWiB,IAAX,IAAmB,KAAKjB,KAAL,CAAWiB,IAAX,CAAgBA,IAAnC,IAA2C,KAAKjB,KAAL,CAAWiB,IAAX,CAAgBA,IAAhB,CAAqBC,IAAnE,EAAwE;AACtE,aAAKV,mBAAL,CAAyB,KAAKR,KAAL,CAAWD,QAAX,CAAoBU,YAA7C,EAA0D,KAAKT,KAAL,CAAWD,QAAX,CAAoBW,YAA9E,EACE,KAAKV,KAAL,CAAWD,QAAX,CAAoBY,YADtB,EACmC,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,WAApB,EADnC,EAEE,KAAKb,KAAL,CAAWc,MAAX,CAAkBD,WAAlB,EAFF,EAEkCG,IAFlC,EAEuC,KAAKhB,KAAL,CAAWiB,IAAX,CAAgBA,IAAhB,CAAqBC,IAF5D;AAGD,OAJD,MAIK;AACH,aAAKV,mBAAL,CAAyBQ,IAAzB,EAA+B,CAA/B;AACD;AACJ,KAxCoB;;AAAA,SAyCnBG,qBAzCmB,GAyCKtB,IAAI,IAAIC,KAAK,IAAI;AACrC,WAAKK,QAAL,CAAc;AACV,SAACN,IAAD,GAAQC;AADE,OAAd;AAGH,KA7CkB;;AAAA,SA8CnBsB,UA9CmB,GA8CLC,UAAD,IAAgB;AAC3B,UAAIC,gBAAgB,GAAGD,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAAvB;AACAD,MAAAA,gBAAgB,CAAC,CAAD,CAAhB,GAAsBA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBC,KAApB,CAA0B,OAA1B,EAAmC,CAAnC,CAAtB;AACA,aAAOD,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,GAAtB,GAA4BA,gBAAgB,CAAC,CAAD,CAAnD;AACH,KAlDoB;;AAAA,SA2DnBd,mBA3DmB,GA2DG,CAACgB,IAAD,EAAMC,IAAN,EAAW5B,IAAX,EAAgBe,QAAhB,EAAyBE,MAAzB,EAAgCE,IAAhC,EAAsCE,IAAtC,KAA+C;AACnE;AACA;AACA;AACA3B,MAAAA,cAAc,CAAC;AACbiC,QAAAA,IAAI,EAAE;AADO,OAAD,CAAd;AAGAzC,MAAAA,kBAAkB,CAACyC,IAAD,EAAMC,IAAN,EAAW5B,IAAX,EAAgBe,QAAhB,EAAyBE,MAAzB,EAAgCE,IAAhC,EAAqCE,IAArC,CAAlB,CAA6DQ,IAA7D,CAAkEC,QAAQ,IAAI;AAC5E,aAAKxB,QAAL,CAAc;AACZc,UAAAA,IAAI,EAAEU;AADM,SAAd,EAGApC,cAAc,CAAC;AACbiC,UAAAA,IAAI,EAAE;AADO,SAAD,CAHd;AAOAlB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAZ;AACD,OATD,EASGC,KATH,CASSC,KAAK,IAAI;AAChBtC,QAAAA,cAAc,CAAC;AACbiC,UAAAA,IAAI,EAAE;AADO,SAAD,CAAd;AAGAlB,QAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ;AACD,OAdD;AAeD,KAjFkB;;AAEjB,SAAK7B,KAAL,GAAY;AACVK,MAAAA,YAAY,EAAE,CADJ;AAEVY,MAAAA,IAAI,EAAE,EAFI;AAGVlB,MAAAA,QAAQ,EAAE;AACNY,QAAAA,YAAY,EAAEmB,SADR;AAENpB,QAAAA,YAAY,EAAEoB,SAFR;AAGNrB,QAAAA,YAAY,EAAEqB;AAHR,OAHA;AAQVlB,MAAAA,QAAQ,EAAE,IAAImB,IAAJ,EARA;AASVjB,MAAAA,MAAM,EAAE,IAAIiB,IAAJ;AATE,KAAZ;AAYD;;AAqCDC,EAAAA,YAAY,CAACrC,KAAD,EAAO;AACjB,QAAGA,KAAK,IAAE,CAAV,EACA,OAAO,SAAP,CADA,KAEK,IAAGA,KAAK,IAAE,CAAV,EACL,OAAO,QAAP,CADK,KAEA,IAAGA,KAAK,IAAE,CAAV,EACL,OAAO,QAAP;AACH;;AAyBDsC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,SAAD;AAC5C,MAAA,EAAE,EAAC,gBADyC;AAE5C,MAAA,KAAK,EAAC,oBAFsC;AAG5C,MAAA,OAAO,EAAC,UAHoC;AAI5C,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,KAAK,IAAjB;AAAuBC,QAAAA,WAAW,EAAE;AAApC,OAJqC;AAK5C,MAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAED,UAAAA,WAAW,EAAE;AAAf;AAAT,OALgC,CAM5C;AACA;AAP4C;AAQ5C,MAAA,QAAQ,EAAE,KAAKxC,eAAL,CAAqB,cAArB,CARkC;AAU5C,MAAA,MAAM,EAAC,QAVqC;AAW5C,MAAA,OAAO,EAAC,UAXoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,eAazC,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAE;AAACuC,QAAAA,SAAS,EAAE,KAAK,IAAjB;AAAsBD,QAAAA,UAAU,EAAE,KAAK,IAAvC;AAA6CE,QAAAA,WAAW,EAAE;AAA1D,OAJT;AAKE,MAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAED,UAAAA,WAAW,EAAE;AAAf;AAAT,OALd,CAME;AANF;AAOE,MAAA,QAAQ,EAAE,KAAKxC,eAAL,CAAqB,cAArB,CAPZ;AAQE,MAAA,MAAM,EAAC,QART;AASE,MAAA,OAAO,EAAC,UATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbyC,eAwBzC,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,oBAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAE;AAACuC,QAAAA,SAAS,EAAE,KAAK,IAAjB;AAAsBD,QAAAA,UAAU,EAAE,KAAK,IAAvC;AAA6CE,QAAAA,WAAW,EAAE;AAA1D,OAJT;AAKE,MAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAED,UAAAA,WAAW,EAAE;AAAf;AAAT,OALd,CAME;AANF;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,OAAO,EAAC,UARV;AASE,MAAA,QAAQ,EAAE,KAAKxC,eAAL,CAAqB,cAArB,CATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxByC,eAmCzC,oBAAC,MAAD;AACA,MAAA,OAAO,EAAC,WADR;AAEA,MAAA,KAAK,EAAC,WAFN;AAGA,MAAA,KAAK,EAAE;AAACuC,QAAAA,SAAS,EAAE,KAAK,IAAjB;AAAuBD,QAAAA,UAAU,EAAE,KAAK,IAAxC;AAA6CI,QAAAA,MAAM,EAAE,KAAI,IAAzD;AAA8DC,QAAAA,KAAK,EAAE,MAAM;AAA3E,OAHP;AAIA,MAAA,OAAO,EAAE,KAAK/B,mBAAL,CAAyBgC,IAAzB,CAA8B,IAA9B,EAAmC,KAAKxC,KAAL,CAAWD,QAAX,CAAoBU,YAAvD,EAAoE,KAAKT,KAAL,CAAWD,QAAX,CAAoBW,YAAxF,EACP,KAAKV,KAAL,CAAWD,QAAX,CAAoBY,YADb,EAC0B,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,WAApB,EAD1B,EAEP,KAAKb,KAAL,CAAWc,MAAX,CAAkBD,WAAlB,EAFO,EAEyB,CAFzB,EAE2B,CAF3B,CAJT;AAOE,MAAA,QAAQ,EAAE,CAAC,KAAKb,KAAL,CAAWD,QAAX,CAAoBY,YAArB,IAAqC,CAAC,KAAKX,KAAL,CAAWD,QAAX,CAAoBU,YAA1D,IAA0E,CAAC,KAAKT,KAAL,CAAWD,QAAX,CAAoBW,YAP3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCyC,eA8CrC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,yBAAV;AAAqC,MAAA,KAAK,EAAE;AAAC+B,QAAAA,cAAc,EAAE,MAAjB;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AACJ,MAAA,OAAO,EAAC,WADJ;AAEJ,MAAA,KAAK,EAAC,WAFF;AAGJ,MAAA,KAAK,EAAE;AAACP,QAAAA,SAAS,EAAE,KAAG,IAAf;AAAoBD,QAAAA,UAAU,EAAE,MAAM,IAAtC;AAA2CI,QAAAA,MAAM,EAAE,KAAI,IAAvD;AAA4DC,QAAAA,KAAK,EAAE,MAAM;AAAzE,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,CA9CqC,CAAnC,eAsDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,uBAAD;AAAyB,MAAA,KAAK,EAAEzD,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAC2B,oBAAC,UAAD;AACI,MAAA,EAAE,EAAC,uBADP;AAEI,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWY,QAAX,GAAsB,KAAKZ,KAAL,CAAWY,QAAjC,GAA4C,EAFvD;AAGI,MAAA,QAAQ,EAAE,KAAKO,qBAAL,CAA2B,UAA3B,CAHd;AAII,MAAA,KAAK,EAAC,WAJV;AAKI,MAAA,QAAQ,MALZ;AAMI,MAAA,MAAM,EAAC,YANX;AAOI,MAAA,IAAI,EAAEjB,KAAK,IACPA,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,GAA9B,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAA/C,EAAqD,IAArD,CAAH,GAAgE,EAR7E;AAUI,MAAA,MAAM,EAAC,QAVX;AAWI,MAAA,QAAQ,MAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3B,eAc2B,oBAAC,UAAD;AACI,MAAA,EAAE,EAAC,uBADP;AAEI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWc,MAAX,GAAoB,KAAKd,KAAL,CAAWc,MAA/B,GAAwC,EAFnD;AAGI,MAAA,QAAQ,EAAE,KAAKK,qBAAL,CAA2B,QAA3B,CAHd;AAII,MAAA,KAAK,EAAC,SAJV;AAKI,MAAA,QAAQ,MALZ;AAMI,MAAA,KAAK,EAAE;AAACe,QAAAA,UAAU,EAAC,KAAG;AAAf,OANX;AAOI,MAAA,MAAM,EAAC,YAPX;AAQI,MAAA,IAAI,EAAEhC,KAAK,IACPA,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,GAA9B,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAA/C,EAAqD,IAArD,CAAH,GAAgE,EAT7E;AAWI,MAAA,MAAM,EAAC,QAXX;AAYI,MAAA,QAAQ,MAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAd3B,CADM,CAtDJ,eAsFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAOA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA,eAUA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVA,eAaA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAbA,CADF,CADR,eAqBQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKF,KAAL,CAAWiB,IAAX,IAAmB,KAAKjB,KAAL,CAAWiB,IAAX,CAAgBA,IAAnC,IAA2C,KAAKjB,KAAL,CAAWiB,IAAX,CAAgBA,IAAhB,CAAqB0B,OAAhE,IACA,KAAK3C,KAAL,CAAWiB,IAAX,CAAgBA,IAAhB,CAAqB0B,OAArB,CAA6BC,GAA7B,CAAiCC,IAAI,IAAI;AACvC,0BACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAAChD,IADR,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGgD,IAAI,CAACnC,YADR,CAJF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKsB,YAAL,CAAkBa,IAAI,CAACpC,YAAvB,CADH,CAPF,eAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIoC,IAAI,CAACE,UAAL,GAAkBF,IAAI,CAACE,UAAvB,GAAoC,WAAxC,CADF,CAVF,eAaE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,IAAI,CAACG,eAAL,GAAuBH,IAAI,CAACG,eAA5B,GAA8C,GADjD,CAbF,CADF;AAkBA,KAnBF,CAHJ,CArBR,CADA,eAgDM,oBAAC,eAAD;AACE,MAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADtB;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWiB,IAAX,CAAgBA,IAAhB,GAAuB,KAAKjB,KAAL,CAAWiB,IAAX,CAAgBA,IAAhB,CAAqBgC,aAA5C,GAA4D,CAHrE;AAIE,MAAA,WAAW,EAAE,KAAKjD,KAAL,CAAWK,YAJ1B;AAKE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWiB,IAAX,CAAgBA,IAAhB,GAAuB,KAAKjB,KAAL,CAAWiB,IAAX,CAAgBA,IAAhB,CAAqBiC,MAA5C,GAAqD,CAL7D;AAME,MAAA,YAAY,EAAE,KAAKnC,gBANrB;AAOE,MAAA,mBAAmB,EAAE,KAAKX,mBAP5B;AAQE,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OARvB;AAWE,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OAXvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDN,CAtFE,CADJ;AAyJH;;AA/OyD","sourcesContent":["import React from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { getBooksAndRecords } from '../module/Folders/folder.repo';\r\nimport {Table, TableHead, TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { dispatchAction } from '../..';\r\n\r\n\r\n\r\n\r\n\r\nexport default class ScansContainer extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props)\r\n      this.state ={\r\n        rowsPerPages: 5,\r\n        data: {},\r\n        formdata: {\r\n            registerName: undefined,\r\n            registerYear: undefined,\r\n            registerType: undefined\r\n        },\r\n        dateFrom: new Date(),\r\n        dateTo: new Date(),\r\n      }\r\n      \r\n    }\r\n    handleFormInput = name => event => {      \r\n      var formdata = this.state.formdata;\r\n      formdata[name] = event.target.value;\r\n        this.setState({\r\n          formdata: formdata\r\n        });\r\n    }\r\n    onChangeRowsPerPage = (event) => {\r\n      this.setState({\r\n          rowsPerPages: event.target.value\r\n      })\r\n      console.log(this.state.rowsPerPages)\r\n      this.listBooksAndRecords(this.state.formdata.registerType,this.state.formdata.registerYear,\r\n        this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n        this.state.dateTo.toISOString(),0,event.target.value);\r\n    }\r\n    handleChangePage = (event, page) => {\r\n             \r\n      if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n        this.listBooksAndRecords(this.state.formdata.registerType,this.state.formdata.registerYear,\r\n          this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n          this.state.dateTo.toISOString(),page,this.state.data.data.size);\r\n      }else{\r\n        this.listBooksAndRecords(page, 5);\r\n      }\r\n  }\r\n    handleChangeDateField = name => event => {\r\n        this.setState({\r\n            [name]: event\r\n        });\r\n    }\r\n    formatDate = (dateString) => {\r\n      var newDateStringArr = dateString.split('T');\r\n      newDateStringArr[1] = newDateStringArr[1].split('.000Z')[0];\r\n      return newDateStringArr[0] + ' ' + newDateStringArr[1];\r\n  }\r\n    handleStatus(props){\r\n      if(props==1)\r\n      return \"Венчани\";\r\n      else if(props==0)\r\n      return \"Родени\";\r\n      else if(props==2)\r\n      return \"Умрени\";\r\n  }\r\n    listBooksAndRecords = (type,year,name,dateFrom,dateTo,page, size) => {\r\n      // console.log(this.state.formdata.registerName);\r\n      // console.log(this.state.formdata.registerType);\r\n      // console.log(this.state.formdata.registerYear);\r\n      dispatchAction({\r\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n      });\r\n      getBooksAndRecords(type,year,name,dateFrom,dateTo,page,size).then(response => {\r\n        this.setState({\r\n          data: response\r\n        },\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n        })\r\n        );\r\n        console.log(response);\r\n      }).catch(error => {\r\n        dispatchAction({\r\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n        });\r\n        console.log(error);\r\n      });\r\n    }\r\n  \r\n  render(){\r\n      return (\r\n          <form style={{marginLeft: '30px'}}><div><TextField\r\n      id=\"standard-input\"\r\n      label=\"Name Register Book\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      // onChange={handleChange('name')}\r\n      onChange={this.handleFormInput('registerName')}\r\n  \r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n    />\r\n    <TextField\r\n      id=\"standard-input\"\r\n      label=\"Year\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      onChange={this.handleFormInput('registerYear')}\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n    />\r\n    <TextField\r\n      id=\"standard-input\"\r\n      label=\"Type Register Book\"\r\n      variant=\"outlined\"\r\n      style={{marginTop: 50 + \"px\",marginLeft: 20 + \"px\", borderColor: 'red'}}\r\n      inputProps={{ style: { borderColor: 'red'}}}\r\n      // value={values.name}\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n      onChange={this.handleFormInput('registerType')}\r\n    />\r\n    <Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 50 + \"px\", marginLeft: 20 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    onClick={this.listBooksAndRecords.bind(this,this.state.formdata.registerType,this.state.formdata.registerYear,\r\n      this.state.formdata.registerName,this.state.dateFrom.toISOString(),\r\n      this.state.dateTo.toISOString(),0,5)}\r\n      disabled={!this.state.formdata.registerName || !this.state.formdata.registerType || !this.state.formdata.registerYear}\r\n\r\n    >\r\n        Search</Button>\r\n        <Link to={'/app/scans/missingFiles'} style={{textDecoration: 'none', color: 'white'}}>\r\n        <Button\r\n    variant=\"contained\" \r\n    color=\"secondary\"\r\n    style={{marginTop: 50+\"px\",marginLeft: 100 + \"px\",height: 55 +\"px\",width: 100 + \"px\"}}\r\n    >\r\n        Missing Scans</Button>\r\n        </Link>\r\n        </div><div>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                   <DatePicker\r\n                                       id=\"standard-uncontrolled\"\r\n                                       value={this.state.dateFrom ? this.state.dateFrom : ''}\r\n                                       onChange={this.handleChangeDateField('dateFrom')}\r\n                                       label=\"Date From\"\r\n                                       keyboard\r\n                                       format=\"dd-MM-yyyy\"\r\n                                       mask={value =>\r\n                                           value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : []\r\n                                       }\r\n                                       margin=\"normal\"\r\n                                       required\r\n                                   />\r\n                                   <DatePicker\r\n                                       id=\"standard-uncontrolled\"\r\n                                       value={this.state.dateTo ? this.state.dateTo : ''}\r\n                                       onChange={this.handleChangeDateField('dateTo')}\r\n                                       label=\"Date To\"\r\n                                       keyboard\r\n                                       style={{marginLeft:20+\"px\"}}\r\n                                       format=\"dd-MM-yyyy\"\r\n                                       mask={value =>\r\n                                           value ? [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/] : []\r\n                                       }\r\n                                       margin=\"normal\"\r\n                                       required\r\n                                   />\r\n                               </MuiPickersUtilsProvider>\r\n          \r\n       </div>\r\n        <div>\r\n        <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                      Year\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Type\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  Folder path\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Number of records\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.registerYear}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {this.handleStatus(item.registerType)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <b>{item.pathFolder ? item.pathFolder : 'No folder'}</b>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.numberOfRecords ? item.numberOfRecords : '0'}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n        </div>\r\n        </form>\r\n      )\r\n  }\r\n  }"]},"metadata":{},"sourceType":"module"}