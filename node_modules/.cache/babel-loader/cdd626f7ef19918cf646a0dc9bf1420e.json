{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Desktop/Repositories/starter-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var renderItemsBeforeAndAfter = allItems => {\n    var handleClickExpand = event => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    }), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  var allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.li,\n    key: \"child-\".concat(index)\n  }, child));\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/starter-app/node_modules/@material-ui/core/es/Breadcrumbs/Breadcrumbs.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","withStyles","Typography","BreadcrumbCollapsed","styles","root","ol","display","flexWrap","alignItems","padding","margin","listStyle","li","separator","userSelect","marginLeft","marginRight","insertSeparators","items","className","reduce","acc","current","index","length","concat","createElement","key","push","Breadcrumbs","forwardRef","props","ref","children","classes","component","Component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","useState","expanded","setExpanded","renderItemsBeforeAndAfter","allItems","handleClickExpand","event","focusable","currentTarget","parentNode","querySelector","focus","process","env","NODE_ENV","console","error","join","slice","onClick","Children","toArray","filter","child","isValidElement","map","color","propTypes","node","object","string","elementType","number","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: `separator-${index}`,\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    component: Component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = event => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      const focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    }), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.li,\n    key: `child-${index}`\n  }, child));\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"]},"metadata":{},"sourceType":"module"}