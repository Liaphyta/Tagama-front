{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Repositories\\\\tagama\\\\Tagama-front\\\\Tagama-front\\\\src\\\\app\\\\module\\\\reports\\\\reportsIndividual.container.js\";\nimport React from 'react';\nimport { Dialog, DialogTitle, Grid, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { getByDate } from './reports.repo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { dispatchAction } from '../../..';\nexport default class ReportsIndividualContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formatDate = dateString => {\n      var newDateStringArr = dateString.split('T')[0];\n      var dateYear = newDateStringArr.split('-')[0];\n      var dateMonth = newDateStringArr.split('-')[1];\n      var dateDay = newDateStringArr.split('-')[2];\n      return dateDay + \" \" + dateMonth + \" \" + dateYear;\n    };\n\n    this.handleChangePage = (event, page) => {\n      if (this.state.data && this.state.data.data && this.state.data.data.size) {\n        this.listBooksAndRecords(this.props.match.params.date, page, this.state.data.data.size);\n      } else {\n        this.listBooksAndRecords(this.props.match.params.date, page, 5);\n      }\n    };\n\n    this.onChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPages: event.target.value\n      });\n      this.listBooksAndRecords(this.props.match.params.date, 0, event.target.value);\n    };\n\n    this.listBooksAndRecords = (date, page, size) => {\n      dispatchAction({\n        type: \"MAIN_LINEAR_PROGRESS_SHOW\"\n      });\n      getByDate(date, page, size).then(response => {\n        this.setState({\n          data: response,\n          loading: false\n        }, dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        }));\n        console.log(response);\n      }).catch(error => {\n        dispatchAction({\n          type: \"MAIN_LINEAR_PROGRESS_HIDE\"\n        });\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      rowsPerPages: 5,\n      data: {},\n      formdata: {},\n      loading: true\n    };\n  }\n\n  componentWillMount() {\n    this.listBooksAndRecords(this.props.match.params.date, 0, 5);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: true,\n      maxWidth: \"md\",\n      \"aria-labelledby\": \"max-width-dialog-title\",\n      \"aria-describedby\": \"max-width-dialog-description\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"max-width-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Report for date \" + this.formatDate(this.props.match.params.date)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, this.state.loading && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        marginLeft: '420px',\n        marginTop: '60px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 50,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 112\n      }\n    })), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \"Number of records on the date\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, this.state.data && this.state.data.data && this.state.data.data.content && this.state.data.data.content.map(item => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }\n      }, item.nameRegisterBook), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 27\n        }\n      }, item.numberOfRecords));\n    }))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: this.state.data.data ? this.state.data.data.totalElements : 0,\n      rowsPerPage: this.state.rowsPerPages,\n      page: this.state.data.data ? this.state.data.data.number : 0,\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.onChangeRowsPerPage,\n      backIconButtonProps: {\n        'aria-label': 'Previous Page'\n      },\n      nextIconButtonProps: {\n        'aria-label': 'Next Page'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/app/reports\",\n      style: {\n        textDecoration: 'none',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: \"\",\n      color: \"secondary\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Exit\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/src/app/module/reports/reportsIndividual.container.js"],"names":["React","Dialog","DialogTitle","Grid","DialogActions","Button","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Link","getByDate","CircularProgress","dispatchAction","ReportsIndividualContainer","Component","constructor","props","formatDate","dateString","newDateStringArr","split","dateYear","dateMonth","dateDay","handleChangePage","event","page","state","data","size","listBooksAndRecords","match","params","date","onChangeRowsPerPage","setState","rowsPerPages","target","value","type","then","response","loading","console","log","catch","error","formdata","componentWillMount","render","position","marginLeft","marginTop","content","map","item","id","nameRegisterBook","numberOfRecords","totalElements","number","textDecoration","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Dialog,DialogTitle,Grid,DialogActions,Button,Table,TableHead,TableRow,TableCell,TableBody,TablePagination} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { getByDate } from './reports.repo';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { dispatchAction } from '../../..';\r\n\r\n\r\nexport default class ReportsIndividualContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n          rowsPerPages: 5,\r\n          data: {},\r\n          formdata: {},\r\n          loading: true\r\n        }\r\n        \r\n      }\r\n      componentWillMount(){\r\n         this.listBooksAndRecords(this.props.match.params.date,0,5)\r\n      }\r\n    formatDate = (dateString) => {\r\n        var newDateStringArr = dateString.split('T')[0];\r\n        var dateYear=newDateStringArr.split('-')[0];\r\n        var dateMonth=newDateStringArr.split('-')[1];\r\n        var dateDay=newDateStringArr.split('-')[2];\r\n        return dateDay+\" \"+dateMonth+\" \"+dateYear;\r\n        }\r\n        handleChangePage = (event, page) => {\r\n             \r\n            if(this.state.data && this.state.data.data && this.state.data.data.size){\r\n              this.listBooksAndRecords(this.props.match.params.date,page,this.state.data.data.size);\r\n            }else{\r\n              this.listBooksAndRecords(this.props.match.params.date,page, 5);\r\n            }\r\n        }\r\n        onChangeRowsPerPage = (event) => {\r\n            this.setState({\r\n                rowsPerPages: event.target.value\r\n            })\r\n            this.listBooksAndRecords(this.props.match.params.date,0,event.target.value);\r\n        }\r\n\r\n    listBooksAndRecords = (date,page,size) => {\r\n            dispatchAction({\r\n              type: \"MAIN_LINEAR_PROGRESS_SHOW\"\r\n            });\r\n            getByDate(date,page,size).then(response => {\r\n              this.setState({\r\n                data: response,\r\n                loading:false\r\n              },\r\n              dispatchAction({\r\n                type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n              })\r\n              );\r\n              console.log(response);\r\n            }).catch(error => {\r\n              dispatchAction({\r\n                type: \"MAIN_LINEAR_PROGRESS_HIDE\"\r\n              });\r\n              console.log(error);\r\n            });\r\n          }   \r\n    \r\n    render(){\r\n        return (\r\n            <Dialog\r\n            open={true}\r\n            maxWidth=\"md\"\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n            aria-describedby=\"max-width-dialog-description\"\r\n            fullWidth={true}\r\n            >\r\n            <DialogTitle id=\"max-width-dialog-title\">{\"Report for date \"+this.formatDate(this.props.match.params.date)}</DialogTitle>\r\n              <Grid container>\r\n              {this.state.loading && <div  style={{position: 'absolute',marginLeft:'420px',marginTop:'60px'}}>{<CircularProgress size={50} color=\"secondary\" />}</div>}\r\n\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Number of records on the date\r\n                  </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                \r\n                <TableBody>\r\n                  {\r\n                    this.state.data && this.state.data.data && this.state.data.data.content &&\r\n                    this.state.data.data.content.map(item => {\r\n                      return (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>\r\n                            {item.nameRegisterBook}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {item.numberOfRecords}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                    )})\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.data.data ? this.state.data.data.totalElements : 0}\r\n                rowsPerPage={this.state.rowsPerPages}\r\n                page={this.state.data.data ? this.state.data.data.number : 0}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\r\n                backIconButtonProps={{\r\n                  'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                  'aria-label': 'Next Page',\r\n                }}\r\n              />   \r\n                  \r\n              </Grid>\r\n            <DialogActions> \r\n            <Link to=\"/app/reports\" style={{textDecoration: 'none', color: 'white'}}>\r\n                <Button onClick=\"\" color=\"secondary\" variant=\"outlined\">\r\n                  Exit\r\n                </Button>\r\n            </Link>       \r\n            </DialogActions>\r\n          </Dialog>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}