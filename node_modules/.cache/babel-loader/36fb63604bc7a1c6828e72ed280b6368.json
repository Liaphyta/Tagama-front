{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useTheme from '../styles/useTheme';\nimport { keys as breakpointKeys } from '../styles/createBreakpoints';\nimport useMediaQuery from '../useMediaQuery'; // By default, returns true if screen width is the same or greater than the given breakpoint.\n\nexport var isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\n\nexport var isWidthDown = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\nvar withWidth = (options = {}) => Component => {\n  var _options$withTheme = options.withTheme,\n      withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme,\n      _options$noSSR = options.noSSR,\n      noSSR = _options$noSSR === void 0 ? false : _options$noSSR,\n      initialWidthOption = options.initialWidth;\n\n  function WithWidth(props) {\n    var contextTheme = useTheme();\n    var theme = props.theme || contextTheme;\n\n    var _getThemeProps = getThemeProps({\n      theme,\n      name: 'MuiWithWidth',\n      props: _extends({}, props)\n    }),\n        initialWidth = _getThemeProps.initialWidth,\n        width = _getThemeProps.width,\n        other = _objectWithoutPropertiesLoose(_getThemeProps, [\"initialWidth\", \"width\"]);\n\n    var _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        mountedState = _React$useState2[0],\n        setMountedState = _React$useState2[1];\n\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n    /**\r\n     * innerWidth |xs      sm      md      lg      xl\r\n     *            |-------|-------|-------|-------|------>\r\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\r\n     */\n\n    var keys = theme.breakpoints.keys.slice().reverse();\n    var widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      var matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n\n    var more = _extends({\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n    }, withThemeOption ? {\n      theme\n    } : {}, other); // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n\n\n    if (more.width === undefined) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(Component, more);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\r\n     * As `window.innerWidth` is unavailable on the server,\r\n     * we default to rendering an empty component during the first mount.\r\n     * You might want to use an heuristic to approximate\r\n     * the screen width of the client browser screen width.\r\n     *\r\n     * For instance, you could be using the user-agent or the client-hints.\r\n     * https://caniuse.com/#search=client%20hint\r\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n    /**\r\n     * @ignore\r\n     */\n    theme: PropTypes.object,\n\n    /**\r\n     * Bypass the width calculation logic.\r\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = \"WithWidth(\".concat(getDisplayName(Component), \")\");\n  }\n\n  hoistNonReactStatics(WithWidth, Component);\n  return WithWidth;\n};\n\nexport default withWidth;","map":{"version":3,"sources":["C:/Users/user/Desktop/Repositories/tagama/Tagama-front/Tagama-front/node_modules/@material-ui/core/es/withWidth/withWidth.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","getDisplayName","getThemeProps","hoistNonReactStatics","useTheme","keys","breakpointKeys","useMediaQuery","isWidthUp","breakpoint","width","inclusive","indexOf","isWidthDown","useEnhancedEffect","window","useEffect","useLayoutEffect","withWidth","options","Component","withTheme","withThemeOption","noSSR","initialWidthOption","initialWidth","WithWidth","props","contextTheme","theme","_getThemeProps","name","other","useState","mountedState","setMountedState","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","undefined","createElement","process","env","NODE_ENV","propTypes","oneOf","object","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDisplayName } from '@material-ui/utils';\r\nimport { getThemeProps } from '@material-ui/styles';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport useTheme from '../styles/useTheme';\r\nimport { keys as breakpointKeys } from '../styles/createBreakpoints';\r\nimport useMediaQuery from '../useMediaQuery'; // By default, returns true if screen width is the same or greater than the given breakpoint.\r\n\r\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\r\n  if (inclusive) {\r\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\r\n  }\r\n\r\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\r\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\r\n\r\nexport const isWidthDown = (breakpoint, width, inclusive = true) => {\r\n  if (inclusive) {\r\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\r\n  }\r\n\r\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\r\n};\r\nconst useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\r\n\r\nconst withWidth = (options = {}) => Component => {\r\n  const {\r\n    withTheme: withThemeOption = false,\r\n    noSSR = false,\r\n    initialWidth: initialWidthOption\r\n  } = options;\r\n\r\n  function WithWidth(props) {\r\n    const contextTheme = useTheme();\r\n    const theme = props.theme || contextTheme;\r\n\r\n    const _getThemeProps = getThemeProps({\r\n      theme,\r\n      name: 'MuiWithWidth',\r\n      props: _extends({}, props)\r\n    }),\r\n          {\r\n      initialWidth,\r\n      width\r\n    } = _getThemeProps,\r\n          other = _objectWithoutPropertiesLoose(_getThemeProps, [\"initialWidth\", \"width\"]);\r\n\r\n    const [mountedState, setMountedState] = React.useState(false);\r\n    useEnhancedEffect(() => {\r\n      setMountedState(true);\r\n    }, []);\r\n    /**\r\n     * innerWidth |xs      sm      md      lg      xl\r\n     *            |-------|-------|-------|-------|------>\r\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\r\n     */\r\n\r\n    const keys = theme.breakpoints.keys.slice().reverse();\r\n    const widthComputed = keys.reduce((output, key) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const matches = useMediaQuery(theme.breakpoints.up(key));\r\n      return !output && matches ? key : output;\r\n    }, null);\r\n\r\n    const more = _extends({\r\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\r\n    }, withThemeOption ? {\r\n      theme\r\n    } : {}, other); // When rendering the component on the server,\r\n    // we have no idea about the client browser screen width.\r\n    // In order to prevent blinks and help the reconciliation of the React tree\r\n    // we are not rendering the child component.\r\n    //\r\n    // An alternative is to use the `initialWidth` property.\r\n\r\n\r\n    if (more.width === undefined) {\r\n      return null;\r\n    }\r\n\r\n    return /*#__PURE__*/React.createElement(Component, more);\r\n  }\r\n\r\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\r\n    /**\r\n     * As `window.innerWidth` is unavailable on the server,\r\n     * we default to rendering an empty component during the first mount.\r\n     * You might want to use an heuristic to approximate\r\n     * the screen width of the client browser screen width.\r\n     *\r\n     * For instance, you could be using the user-agent or the client-hints.\r\n     * https://caniuse.com/#search=client%20hint\r\n     */\r\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    theme: PropTypes.object,\r\n\r\n    /**\r\n     * Bypass the width calculation logic.\r\n     */\r\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\r\n  } : void 0;\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\r\n  }\r\n\r\n  hoistNonReactStatics(WithWidth, Component);\r\n  return WithWidth;\r\n};\r\n\r\nexport default withWidth;"]},"metadata":{},"sourceType":"module"}